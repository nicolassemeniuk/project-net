/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnClassDomainValue generated by hbm2java
 */
@Entity
@Table(name = "PN_CLASS_DOMAIN_VALUES")
public class PnClassDomainValue implements java.io.Serializable {

	/** identifier field */
	private PnClassDomainValuePK comp_id;

	/** persistent field */
	private String domainValueName;

	/** nullable persistent field */
	private Integer domainValueSeq;

	/** nullable persistent field */
	private String domainValueDesc;

	/** persistent field */
	private int isDefault;

	/** nullable persistent field */
	private Integer sourceValueId;

	/** persistent field */
	private String recordStatus;

	/** nullable persistent field */
	private PnObject pnObject;

	/** nullable persistent field */
	private PnClassDomain pnClassDomain;

	public PnClassDomainValue() {
	}

	public PnClassDomainValue(PnClassDomainValuePK comp_id, String domainValueName, int isDefault, String recordStatus) {
		this.comp_id = comp_id;
		this.domainValueName = domainValueName;
		this.isDefault = isDefault;
		this.recordStatus = recordStatus;
	}

	public PnClassDomainValue(PnClassDomainValuePK comp_id, String domainValueName, Integer domainValueSeq,
			String domainValueDesc, int isDefault, Integer sourceValueId, String recordStatus, PnObject pnObject,
			PnClassDomain pnClassDomain) {
		this.comp_id = comp_id;
		this.domainValueName = domainValueName;
		this.domainValueSeq = domainValueSeq;
		this.domainValueDesc = domainValueDesc;
		this.isDefault = isDefault;
		this.sourceValueId = sourceValueId;
		this.recordStatus = recordStatus;
		this.pnObject = pnObject;
		this.pnClassDomain = pnClassDomain;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "domainId", column = @Column(name = "DOMAIN_ID", nullable = false, length = 20)),
			@AttributeOverride(name = "domainValueId", column = @Column(name = "DOMAIN_VALUE_ID", nullable = false, length = 20)) })
	public PnClassDomainValuePK getComp_id() {
		return this.comp_id;
	}

	public void setComp_id(PnClassDomainValuePK comp_id) {
		this.comp_id = comp_id;
	}

	@Column(name = "DOMAIN_VALUE_NAME", nullable = false, length = 80)
	public String getDomainValueName() {
		return this.domainValueName;
	}

	public void setDomainValueName(String domainValueName) {
		this.domainValueName = domainValueName;
	}

	@Column(name = "DOMAIN_VALUE_SEQ", length = 8)
	public Integer getDomainValueSeq() {
		return this.domainValueSeq;
	}

	public void setDomainValueSeq(Integer domainValueSeq) {
		this.domainValueSeq = domainValueSeq;
	}

	@Column(name = "DOMAIN_VALUE_DESC", length = 500)
	public String getDomainValueDesc() {
		return this.domainValueDesc;
	}

	public void setDomainValueDesc(String domainValueDesc) {
		this.domainValueDesc = domainValueDesc;
	}

	@Column(name = "IS_DEFAULT", nullable = false, length = 1)
	public int getIsDefault() {
		return this.isDefault;
	}

	public void setIsDefault(int isDefault) {
		this.isDefault = isDefault;
	}

	@Column(name = "SOURCE_VALUE_ID", length = 20)
	public Integer getSourceValueId() {
		return this.sourceValueId;
	}

	public void setSourceValueId(Integer sourceValueId) {
		this.sourceValueId = sourceValueId;
	}

	@Column(name = "RECORD_STATUS", nullable = false, length = 1)
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	//@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnObject.class)
	//@JoinColumn(name = "DOMAIN_VALUE_ID", insertable = false, updatable = false)
	@Transient
	public PnObject getPnObject() {
		return this.pnObject;
	}

	public void setPnObject(PnObject pnObject) {
		this.pnObject = pnObject;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnClassDomain.class)
	@JoinColumn(name = "DOMAIN_ID", insertable = false, updatable = false)
	public PnClassDomain getPnClassDomain() {
		return this.pnClassDomain;
	}

	public void setPnClassDomain(PnClassDomain pnClassDomain) {
		this.pnClassDomain = pnClassDomain;
	}

	public String toString() {
		return new ToStringBuilder(this).append("comp_id", getComp_id()).toString();
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if (!(other instanceof PnClassDomainValue))
			return false;
		PnClassDomainValue castOther = (PnClassDomainValue) other;
		return new EqualsBuilder().append(this.getComp_id(), castOther.getComp_id()).isEquals();
	}

	public int hashCode() {
		return new HashCodeBuilder().append(getComp_id()).toHashCode();
	}
}
