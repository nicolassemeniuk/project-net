/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnDocContainer generated by hbm2java
 */
@Entity
@Table(name = "PN_DOC_CONTAINER")
public class PnDocContainer implements java.io.Serializable {

	/** identifier field */
	private Integer docContainerId;

	/** nullable persistent field */
	private String containerName;

	/** nullable persistent field */
	private String containerDescription;

	/** nullable persistent field */
	private Date dateModified;

	/** persistent field */
	private int isHidden;

	/** persistent field */
	private Date crc;

	/** persistent field */
	private String recordStatus;

	/** nullable persistent field */
	private PnObject pnObject;

	private PnPerson pnPerson;

	private Set pnDocSpaceHasContainers = new HashSet(0);

	private Set pnDocContainerHasObjects = new HashSet(0);

	public PnDocContainer(Integer docContainerId, int isHidden, Date crc, String recordStatus) {
		this.docContainerId = docContainerId;
		this.isHidden = isHidden;
		this.crc = crc;
		this.recordStatus = recordStatus;
	}

	public PnDocContainer(Integer docContainerId, String containerName, String containerDescription, Date dateModified,
			int isHidden, Date crc, String recordStatus, PnObject pnObject, PnPerson pnPerson,
			Set pnDocSpaceHasContainers, Set pnDocContainerHasObjects) {
		this.docContainerId = docContainerId;
		this.containerName = containerName;
		this.containerDescription = containerDescription;
		this.dateModified = dateModified;
		this.isHidden = isHidden;
		this.crc = crc;
		this.recordStatus = recordStatus;
		this.pnObject = pnObject;
		this.pnPerson = pnPerson;
		this.pnDocSpaceHasContainers = pnDocSpaceHasContainers;
		this.pnDocContainerHasObjects = pnDocContainerHasObjects;
	}

	public PnDocContainer(Integer docContainerId, String containerName, String containerDescription, Date dateModified,
			Integer modifiedById, int isHidden, Date crc, String recordStatus) {
		this.docContainerId = docContainerId;
		this.containerName = containerName;
		this.containerDescription = containerDescription;
		this.dateModified = dateModified;
		this.pnPerson = new PnPerson(modifiedById);
		this.isHidden = isHidden;
		this.crc = crc;
		this.recordStatus = recordStatus;
	}

	public PnDocContainer(Integer docContainerId, String containerName, String recordStatus) {
		this.docContainerId = docContainerId;
		this.containerName = containerName;
		this.recordStatus = recordStatus;
	}

	/**
	 * minimal constructor
	 * @param Integer docContainerId
	 * @param int isHidden
	 */
	public PnDocContainer(Integer docContainerId, int isHidden) {
		this.docContainerId = docContainerId;
		this.isHidden = isHidden;
	}

	/** default constructor */
	public PnDocContainer() {
	}

	/** minimal constructor */
	public PnDocContainer(Integer docContainerId, int isHidden, Date crc, String recordStatus,
			net.project.hibernate.model.PnPerson pnPerson, Set pnDocSpaceHasContainers, Set pnDocContainerHasObjects) {
		this.docContainerId = docContainerId;
		this.isHidden = isHidden;
		this.crc = crc;
		this.recordStatus = recordStatus;
		this.pnPerson = pnPerson;
		this.pnDocSpaceHasContainers = pnDocSpaceHasContainers;
		this.pnDocContainerHasObjects = pnDocContainerHasObjects;
	}

	@Id
	@Column(name = "DOC_CONTAINER_ID", nullable = false)
	public Integer getDocContainerId() {
		return this.docContainerId;
	}

	public void setDocContainerId(Integer docContainerId) {
		this.docContainerId = docContainerId;
	}

	@Column(name = "CONTAINER_NAME", length = 80)
	public String getContainerName() {
		return this.containerName;
	}

	public void setContainerName(String containerName) {
		this.containerName = containerName;
	}

	@Column(name = "CONTAINER_DESCRIPTION", length = 500)
	public String getContainerDescription() {
		return this.containerDescription;
	}

	public void setContainerDescription(String containerDescription) {
		this.containerDescription = containerDescription;
	}

	@Column(name = "DATE_MODIFIED", length = 7)
	public Date getDateModified() {
		return this.dateModified;
	}

	public void setDateModified(Date dateModified) {
		this.dateModified = dateModified;
	}

	@Column(name = "IS_HIDDEN", nullable = false, length = 1)
	public int getIsHidden() {
		return this.isHidden;
	}

	public void setIsHidden(int isHidden) {
		this.isHidden = isHidden;
	}

	@Column(name = "CRC", nullable = false, length = 7)
	public Date getCrc() {
		return this.crc;
	}

	public void setCrc(Date crc) {
		this.crc = crc;
	}

	@Column(name = "RECORD_STATUS", nullable = false, length = 1)
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	//@OneToOne(fetch = FetchType.LAZY, targetEntity = PnObject.class)
	//@JoinColumn(name="DOC_CONTAINER_ID")
	@Transient
	public PnObject getPnObject() {
		return this.pnObject;
	}

	public void setPnObject(PnObject pnObject) {
		this.pnObject = pnObject;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnPerson.class)
	@JoinColumn(name = "MODIFIED_BY_ID")
	public PnPerson getPnPerson() {
		return this.pnPerson;
	}

	public void setPnPerson(PnPerson pnPerson) {
		this.pnPerson = pnPerson;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnDocContainer", targetEntity = PnDocSpaceHasContainer.class)
	@Transient
	public Set getPnDocSpaceHasContainers() {
		return this.pnDocSpaceHasContainers;
	}

	public void setPnDocSpaceHasContainers(Set pnDocSpaceHasContainers) {
		this.pnDocSpaceHasContainers = pnDocSpaceHasContainers;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnDocContainer", targetEntity = PnDocContainerHasObject.class)
	@Transient
	public Set getPnDocContainerHasObjects() {
		return this.pnDocContainerHasObjects;
	}

	public void setPnDocContainerHasObjects(Set pnDocContainerHasObjects) {
		this.pnDocContainerHasObjects = pnDocContainerHasObjects;
	}

	public String toString() {
		return new ToStringBuilder(this).append("docContainerId", getDocContainerId()).toString();
	}

}
