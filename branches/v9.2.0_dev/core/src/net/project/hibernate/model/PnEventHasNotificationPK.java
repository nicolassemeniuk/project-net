/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
*/
package net.project.hibernate.model;


import javax.persistence.Column;
import javax.persistence.Embeddable;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnEventHasNotificationPK generated by hbm2java
 */

@Embeddable
public class PnEventHasNotificationPK  implements java.io.Serializable {

    /** identifier field */
    private Integer notificationTypeId;

    /** identifier field */
    private Integer eventTypeId;

    public PnEventHasNotificationPK() {
    }

    public PnEventHasNotificationPK(Integer notificationTypeId, Integer eventTypeId) {
       this.notificationTypeId = notificationTypeId;
       this.eventTypeId = eventTypeId;
    }
   


    @Column(name="NOTIFICATION_TYPE_ID", nullable=false, length=20)
    public Integer getNotificationTypeId() {
        return this.notificationTypeId;
    }
    
    public void setNotificationTypeId(Integer notificationTypeId) {
        this.notificationTypeId = notificationTypeId;
    }


    @Column(name="EVENT_TYPE_ID", nullable=false, length=20)
    public Integer getEventTypeId() {
        return this.eventTypeId;
    }
    
    public void setEventTypeId(Integer eventTypeId) {
        this.eventTypeId = eventTypeId;
    }

    public String toString() {
        return new ToStringBuilder(this)
            .append("notificationTypeId", getNotificationTypeId())
            .append("eventTypeId", getEventTypeId())
            .toString();
    }

    public boolean equals(Object other) {
        if ( (this == other ) ) return true;
        if ( !(other instanceof PnEventHasNotificationPK) ) return false;
        PnEventHasNotificationPK castOther = (PnEventHasNotificationPK) other;
        return new EqualsBuilder()
            .append(this.getNotificationTypeId(), castOther.getNotificationTypeId())
            .append(this.getEventTypeId(), castOther.getEventTypeId())
            .isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder()
            .append(getNotificationTypeId())
            .append(getEventTypeId())
            .toHashCode();
    }
}


