/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnEnvelopeVersionHasObject generated by hbm2java
 */
@Entity
@Table(name = "PN_ENVELOPE_VERSION_HAS_OBJECT")
public class PnEnvelopeVersionHasObject implements java.io.Serializable {

	/** identifier field */
	private PnEnvelopeVersionHasObjectPK comp_id;

	/** persistent field */
	private String objectType;

	/** persistent field */
	private Integer objectVersionId;

	/** persistent field */
	private Date crc;

	/** persistent field */
	private String recordStatus;

	/** nullable persistent field */
	private PnEnvelopeVersion pnEnvelopeVersion;

	private PnEnvelopeHasObject pnEnvelopeHasObject;

	private PnEnvelopeObjectClob pnEnvelopeObjectClob;

	public PnEnvelopeVersionHasObject() {
	}

	public PnEnvelopeVersionHasObject(PnEnvelopeVersionHasObjectPK comp_id, String objectType, Integer objectVersionId,
			Date crc, String recordStatus) {
		this.comp_id = comp_id;
		this.objectType = objectType;
		this.objectVersionId = objectVersionId;
		this.crc = crc;
		this.recordStatus = recordStatus;
	}

	public PnEnvelopeVersionHasObject(PnEnvelopeVersionHasObjectPK comp_id, String objectType, Integer objectVersionId,
			Date crc, String recordStatus, PnEnvelopeVersion pnEnvelopeVersion,
			PnEnvelopeHasObject pnEnvelopeHasObject, PnEnvelopeObjectClob pnEnvelopeObjectClob) {
		this.comp_id = comp_id;
		this.objectType = objectType;
		this.objectVersionId = objectVersionId;
		this.crc = crc;
		this.recordStatus = recordStatus;
		this.pnEnvelopeVersion = pnEnvelopeVersion;
		this.pnEnvelopeHasObject = pnEnvelopeHasObject;
		this.pnEnvelopeObjectClob = pnEnvelopeObjectClob;
	}

	/** minimal constructor */
	public PnEnvelopeVersionHasObject(net.project.hibernate.model.PnEnvelopeVersionHasObjectPK comp_id,
			String objectType, Integer objectVersionId, Date crc, String recordStatus,
			net.project.hibernate.model.PnEnvelopeObjectClob pnEnvelopeObjectClob) {
		this.comp_id = comp_id;
		this.objectType = objectType;
		this.objectVersionId = objectVersionId;
		this.crc = crc;
		this.recordStatus = recordStatus;
		this.pnEnvelopeObjectClob = pnEnvelopeObjectClob;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "objectId", column = @Column(name = "OBJECT_ID", nullable = false, length = 20)),
			@AttributeOverride(name = "versionId", column = @Column(name = "VERSION_ID", nullable = false, length = 20)),
			@AttributeOverride(name = "envelopeId", column = @Column(name = "ENVELOPE_ID", nullable = false, length = 20)) })
	public PnEnvelopeVersionHasObjectPK getComp_id() {
		return this.comp_id;
	}

	public void setComp_id(PnEnvelopeVersionHasObjectPK comp_id) {
		this.comp_id = comp_id;
	}

	@Column(name = "OBJECT_TYPE", nullable = false, length = 80)
	public String getObjectType() {
		return this.objectType;
	}

	public void setObjectType(String objectType) {
		this.objectType = objectType;
	}

	@Column(name = "OBJECT_VERSION_ID", nullable = false, length = 20)
	public Integer getObjectVersionId() {
		return this.objectVersionId;
	}

	public void setObjectVersionId(Integer objectVersionId) {
		this.objectVersionId = objectVersionId;
	}

	@Column(name = "CRC", nullable = false, length = 7)
	public Date getCrc() {
		return this.crc;
	}

	public void setCrc(Date crc) {
		this.crc = crc;
	}

	@Column(name = "RECORD_STATUS", nullable = false, length = 1)
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	//@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnEnvelopeVersion.class)
	//@JoinColumns( {
	//		@JoinColumn(name = "VERSION_ID", referencedColumnName = "VERSION_ID", insertable = false, updatable = false),
	//		@JoinColumn(name = "ENVELOPE_ID", referencedColumnName = "ENVELOPE_ID", insertable = false, updatable = false) })
	@Transient
	public PnEnvelopeVersion getPnEnvelopeVersion() {
		return this.pnEnvelopeVersion;
	}

	public void setPnEnvelopeVersion(PnEnvelopeVersion pnEnvelopeVersion) {
		this.pnEnvelopeVersion = pnEnvelopeVersion;
	}

	//@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnEnvelopeHasObject.class)
	//@JoinColumns( {
	//		@JoinColumn(name = "OBJECT_ID", referencedColumnName = "ENVELOPE_ID", insertable = false, updatable = false),
	//		@JoinColumn(name = "ENVELOPE_ID", referencedColumnName = "OBJECT_ID", insertable = false, updatable = false) })
	@Transient
	public PnEnvelopeHasObject getPnEnvelopeHasObject() {
		return this.pnEnvelopeHasObject;
	}

	public void setPnEnvelopeHasObject(PnEnvelopeHasObject pnEnvelopeHasObject) {
		this.pnEnvelopeHasObject = pnEnvelopeHasObject;
	}

	//@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnEnvelopeObjectClob.class)
	//@JoinColumn(name = "OBJECT_PROPERTIES_ID")
	@Transient
	public PnEnvelopeObjectClob getPnEnvelopeObjectClob() {
		return this.pnEnvelopeObjectClob;
	}

	public void setPnEnvelopeObjectClob(PnEnvelopeObjectClob pnEnvelopeObjectClob) {
		this.pnEnvelopeObjectClob = pnEnvelopeObjectClob;
	}

	public String toString() {
		return new ToStringBuilder(this).append("comp_id", getComp_id()).toString();
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if (!(other instanceof PnEnvelopeVersionHasObject))
			return false;
		PnEnvelopeVersionHasObject castOther = (PnEnvelopeVersionHasObject) other;
		return new EqualsBuilder().append(this.getComp_id(), castOther.getComp_id()).isEquals();
	}

	public int hashCode() {
		return new HashCodeBuilder().append(getComp_id()).toHashCode();
	}
}
