package net.project.hibernate.model;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnClassDomain generated by hbm2java
 */
@Entity
@Table(name = "PN_CLASS_DOMAIN")
public class PnClassDomain implements java.io.Serializable {

	/** identifier field */
	private Integer domainId;

	/** nullable persistent field */
	private String domainName;

	/** nullable persistent field */
	private String domainType;

	/** nullable persistent field */
	private String domainDesc;

	/** persistent field */
	private String recordStatus;

	/** nullable persistent field */
	private PnObject pnObject;

	/** persistent field */
	private Set pnClassDomainValues = new HashSet(0);

	/** persistent field */
	private Set pnClassFields = new HashSet(0);

	public PnClassDomain() {
	}

	public PnClassDomain(Integer domainId, String recordStatus) {
		this.domainId = domainId;
		this.recordStatus = recordStatus;
	}

	public PnClassDomain(Integer domainId, String domainName, String domainType, String domainDesc,
			String recordStatus, PnObject pnObject, Set pnClassDomainValues, Set pnClassFields) {
		this.domainId = domainId;
		this.domainName = domainName;
		this.domainType = domainType;
		this.domainDesc = domainDesc;
		this.recordStatus = recordStatus;
		this.pnObject = pnObject;
		this.pnClassDomainValues = pnClassDomainValues;
		this.pnClassFields = pnClassFields;
	}

	/** minimal constructor */
	public PnClassDomain(Integer domainId, String recordStatus, Set pnClassDomainValues, Set pnClassFields) {
		this.domainId = domainId;
		this.recordStatus = recordStatus;
		this.pnClassDomainValues = pnClassDomainValues;
		this.pnClassFields = pnClassFields;
	}

	@Id
	@Column(name = "DOMAIN_ID", nullable = false)
	public Integer getDomainId() {
		return this.domainId;
	}

	public void setDomainId(Integer domainId) {
		this.domainId = domainId;
	}

	@Column(name = "DOMAIN_NAME", length = 80)
	public String getDomainName() {
		return this.domainName;
	}

	public void setDomainName(String domainName) {
		this.domainName = domainName;
	}

	@Column(name = "DOMAIN_TYPE", length = 80)
	public String getDomainType() {
		return this.domainType;
	}

	public void setDomainType(String domainType) {
		this.domainType = domainType;
	}

	@Column(name = "DOMAIN_DESC", length = 500)
	public String getDomainDesc() {
		return this.domainDesc;
	}

	public void setDomainDesc(String domainDesc) {
		this.domainDesc = domainDesc;
	}

	@Column(name = "RECORD_STATUS", nullable = false, length = 1)
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	//@OneToOne(fetch = FetchType.LAZY, targetEntity = PnObject.class)
	//@JoinColumn(name="DOMAIN_ID")
	@Transient
	public PnObject getPnObject() {
		return this.pnObject;
	}

	public void setPnObject(PnObject pnObject) {
		this.pnObject = pnObject;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnClassDomain", targetEntity = PnClassDomainValue.class)
	@Transient
	public Set getPnClassDomainValues() {
		return this.pnClassDomainValues;
	}

	public void setPnClassDomainValues(Set pnClassDomainValues) {
		this.pnClassDomainValues = pnClassDomainValues;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnClassDomain", targetEntity = PnClassField.class)
	@Transient
	public Set getPnClassFields() {
		return this.pnClassFields;
	}

	public void setPnClassFields(Set pnClassFields) {
		this.pnClassFields = pnClassFields;
	}

	public String toString() {
		return new ToStringBuilder(this).append("domainId", getDomainId()).toString();
	}

}
