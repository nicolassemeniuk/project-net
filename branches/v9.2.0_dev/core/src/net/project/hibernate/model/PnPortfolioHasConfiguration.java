/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.io.Serializable;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * PnPortfolioHasConfiguration generated by hbm2java
 */
@Entity
@Table(name = "PN_PORTFOLIO_HAS_CONFIGURATION")
public class PnPortfolioHasConfiguration implements Serializable {

	private PnPortfolioHasConfigurationPK comp_id;

	private int isPrivate;

	private PnPortfolio pnPortfolio;

	private PnConfigurationSpace pnConfigurationSpace;

	public PnPortfolioHasConfiguration() {
	}

	public PnPortfolioHasConfiguration(PnPortfolioHasConfigurationPK comp_id, int isPrivate) {
		this.comp_id = comp_id;
		this.isPrivate = isPrivate;
	}

	public PnPortfolioHasConfiguration(PnPortfolioHasConfigurationPK comp_id, int isPrivate, PnPortfolio pnPortfolio,
			PnConfigurationSpace pnConfigurationSpace) {
		this.comp_id = comp_id;
		this.isPrivate = isPrivate;
		this.pnPortfolio = pnPortfolio;
		this.pnConfigurationSpace = pnConfigurationSpace;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "portfolioId", column = @Column(name = "PORTFOLIO_ID", nullable = false, length = 20)),
			@AttributeOverride(name = "configurationId", column = @Column(name = "CONFIGURATION_ID", nullable = false, length = 20)) })
	public PnPortfolioHasConfigurationPK getComp_id() {
		return this.comp_id;
	}

	public void setComp_id(PnPortfolioHasConfigurationPK comp_id) {
		this.comp_id = comp_id;
	}

	@Column(name = "IS_PRIVATE", nullable = false, length = 1)
	public int getIsPrivate() {
		return this.isPrivate;
	}

	public void setIsPrivate(int isPrivate) {
		this.isPrivate = isPrivate;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnPortfolio.class)
	@JoinColumn(name = "PORTFOLIO_ID", insertable = false, updatable = false)
	public PnPortfolio getPnPortfolio() {
		return this.pnPortfolio;
	}

	public void setPnPortfolio(PnPortfolio pnPortfolio) {
		this.pnPortfolio = pnPortfolio;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnConfigurationSpace.class)
	@JoinColumn(name = "CONFIGURATION_ID", insertable = false, updatable = false)
	public PnConfigurationSpace getPnConfigurationSpace() {
		return this.pnConfigurationSpace;
	}

	public void setPnConfigurationSpace(PnConfigurationSpace pnConfigurationSpace) {
		this.pnConfigurationSpace = pnConfigurationSpace;
	}

	public String toString() {
		return new ToStringBuilder(this).append("comp_id", getComp_id()).toString();
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if (!(other instanceof PnPortfolioHasConfiguration))
			return false;
		PnPortfolioHasConfiguration castOther = (PnPortfolioHasConfiguration) other;
		return new EqualsBuilder().append(this.getComp_id(), castOther.getComp_id()).isEquals();
	}

	public int hashCode() {
		return new HashCodeBuilder().append(getComp_id()).toHashCode();
	}

}
