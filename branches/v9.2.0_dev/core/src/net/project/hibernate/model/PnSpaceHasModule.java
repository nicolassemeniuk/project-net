/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnSpaceHasModule generated by hbm2java
 */
@Entity
@Table(name = "PN_SPACE_HAS_MODULE")
public class PnSpaceHasModule implements Serializable {

	private PnSpaceHasModulePK comp_id;

	private int isActive;

	private PnModule pnModule;

	private Set pnModulePermissions = new HashSet(0);

	public PnSpaceHasModule() {
	}

	public PnSpaceHasModule(net.project.hibernate.model.PnSpaceHasModulePK comp_id, int isActive) {
		this.comp_id = comp_id;
		this.isActive = isActive;
	}

	public PnSpaceHasModule(net.project.hibernate.model.PnSpaceHasModulePK comp_id, int isActive,
			Set pnModulePermissions) {
		this.comp_id = comp_id;
		this.isActive = isActive;
		this.pnModulePermissions = pnModulePermissions;
	}

	public PnSpaceHasModule(PnSpaceHasModulePK comp_id, int isActive, PnModule pnModule, Set pnModulePermissions) {
		this.comp_id = comp_id;
		this.isActive = isActive;
		this.pnModule = pnModule;
		this.pnModulePermissions = pnModulePermissions;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "spaceId", column = @Column(name = "SPACE_ID", nullable = false, length = 20)),
			@AttributeOverride(name = "moduleId", column = @Column(name = "MODULE_ID", nullable = false, length = 20)) })
	public PnSpaceHasModulePK getComp_id() {
		return this.comp_id;
	}

	public void setComp_id(PnSpaceHasModulePK comp_id) {
		this.comp_id = comp_id;
	}

	@Column(name = "IS_ACTIVE", nullable = false, length = 1)
	public int getIsActive() {
		return this.isActive;
	}

	public void setIsActive(int isActive) {
		this.isActive = isActive;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity=PnModule.class)
	@JoinColumn(name = "MODULE_ID", insertable = false, updatable = false)
	public PnModule getPnModule() {
		return this.pnModule;
	}

	public void setPnModule(PnModule pnModule) {
		this.pnModule = pnModule;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnSpaceHasModule", targetEntity = PnModulePermission.class)
	@Transient
	public Set getPnModulePermissions() {
		return this.pnModulePermissions;
	}

	public void setPnModulePermissions(Set pnModulePermissions) {
		this.pnModulePermissions = pnModulePermissions;
	}

	public String toString() {
		return new ToStringBuilder(this).append("comp_id", getComp_id()).toString();
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if (!(other instanceof PnSpaceHasModule))
			return false;
		PnSpaceHasModule castOther = (PnSpaceHasModule) other;
		return new EqualsBuilder().append(this.getComp_id(), castOther.getComp_id()).isEquals();
	}

	public int hashCode() {
		return new HashCodeBuilder().append(getComp_id()).toHashCode();
	}

}
