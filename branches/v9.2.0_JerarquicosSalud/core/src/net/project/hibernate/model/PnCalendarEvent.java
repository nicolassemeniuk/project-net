/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.sql.Clob;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnCalendarEvent generated by hbm2java
 */
@Entity
@Table(name = "PN_CALENDAR_EVENT")
public class PnCalendarEvent implements java.io.Serializable {

	/** identifier field */
	private Integer calendarEventId;

	/** persistent field */
	private String eventName;

	/** persistent field */
	private Integer eventTypeId;

	/** persistent field */
	private Integer frequencyTypeId;

	/** nullable persistent field */
	private Date startDate;

	/** nullable persistent field */
	private Date endDate;

	/** persistent field */
	private String recordStatus;

	/** nullable persistent field */
	private Clob eventDescClob;

	/** nullable persistent field */
	private Clob eventPurposeClob;

	/** persistent field */
	private PnFacility pnFacility;

	/** persistent field */
	private Set pnMeetings = new HashSet(0);

	/** persistent field */
	private Set pnCalEventHasAttendees = new HashSet(0);

	/** persistent field */
	private Set pnCalendarHasEvents = new HashSet(0);

	public PnCalendarEvent() {
	}

	public PnCalendarEvent(Integer calendarEventId, String eventName, Integer eventTypeId, Integer frequencyTypeId,
			String recordStatus) {
		this.calendarEventId = calendarEventId;
		this.eventName = eventName;
		this.eventTypeId = eventTypeId;
		this.frequencyTypeId = frequencyTypeId;
		this.recordStatus = recordStatus;
	}

	public PnCalendarEvent(Integer calendarEventId, String eventName, Integer eventTypeId, Integer frequencyTypeId,
			Date startDate, Date endDate, String recordStatus, Clob eventDescClob, Clob eventPurposeClob,
			PnFacility pnFacility, Set pnMeetings, Set pnCalEventHasAttendees, Set pnCalendarHasEvents) {
		this.calendarEventId = calendarEventId;
		this.eventName = eventName;
		this.eventTypeId = eventTypeId;
		this.frequencyTypeId = frequencyTypeId;
		this.startDate = startDate;
		this.endDate = endDate;
		this.recordStatus = recordStatus;
		this.eventDescClob = eventDescClob;
		this.eventPurposeClob = eventPurposeClob;
		this.pnFacility = pnFacility;
		this.pnMeetings = pnMeetings;
		this.pnCalEventHasAttendees = pnCalEventHasAttendees;
		this.pnCalendarHasEvents = pnCalendarHasEvents;
	}

	/** minimal constructor */
	public PnCalendarEvent(Integer calendarEventId, String eventName, Integer eventTypeId, Integer frequencyTypeId,
			String recordStatus, net.project.hibernate.model.PnFacility pnFacility, Set pnMeetings,
			Set pnCalEventHasAttendees, Set pnCalendarHasEvents) {
		this.calendarEventId = calendarEventId;
		this.eventName = eventName;
		this.eventTypeId = eventTypeId;
		this.frequencyTypeId = frequencyTypeId;
		this.recordStatus = recordStatus;
		this.pnFacility = pnFacility;
		this.pnMeetings = pnMeetings;
		this.pnCalEventHasAttendees = pnCalEventHasAttendees;
		this.pnCalendarHasEvents = pnCalendarHasEvents;
	}

	@Id
	@Column(name = "CALENDAR_EVENT_ID", nullable = false)
	public Integer getCalendarEventId() {
		return this.calendarEventId;
	}

	public void setCalendarEventId(Integer calendarEventId) {
		this.calendarEventId = calendarEventId;
	}

	@Column(name = "EVENT_NAME", nullable = false, length = 80)
	public String getEventName() {
		return this.eventName;
	}

	public void setEventName(String eventName) {
		this.eventName = eventName;
	}

	@Column(name = "EVENT_TYPE_ID", nullable = false, length = 20)
	public Integer getEventTypeId() {
		return this.eventTypeId;
	}

	public void setEventTypeId(Integer eventTypeId) {
		this.eventTypeId = eventTypeId;
	}

	@Column(name = "FREQUENCY_TYPE_ID", nullable = false, length = 20)
	public Integer getFrequencyTypeId() {
		return this.frequencyTypeId;
	}

	public void setFrequencyTypeId(Integer frequencyTypeId) {
		this.frequencyTypeId = frequencyTypeId;
	}

	@Column(name = "START_DATE", length = 7)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Column(name = "END_DATE", length = 7)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@Column(name = "RECORD_STATUS", nullable = false, length = 1)
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	@Column(name = "EVENT_DESC_CLOB", length = 4000)
	public Clob getEventDescClob() {
		return this.eventDescClob;
	}

	public void setEventDescClob(Clob eventDescClob) {
		this.eventDescClob = eventDescClob;
	}

	@Column(name = "EVENT_PURPOSE_CLOB", length = 4000)
	public Clob getEventPurposeClob() {
		return this.eventPurposeClob;
	}

	public void setEventPurposeClob(Clob eventPurposeClob) {
		this.eventPurposeClob = eventPurposeClob;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnFacility.class)
	@JoinColumn(name = "FACILITY_ID")
	public PnFacility getPnFacility() {
		return this.pnFacility;
	}

	public void setPnFacility(PnFacility pnFacility) {
		this.pnFacility = pnFacility;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnCalendarEvent", targetEntity = PnMeeting.class)
	@Transient
	public Set getPnMeetings() {
		return this.pnMeetings;
	}

	public void setPnMeetings(Set pnMeetings) {
		this.pnMeetings = pnMeetings;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnCalendarEvent", targetEntity = PnCalEventHasAttendee.class)
	@Transient
	public Set getPnCalEventHasAttendees() {
		return this.pnCalEventHasAttendees;
	}

	public void setPnCalEventHasAttendees(Set pnCalEventHasAttendees) {
		this.pnCalEventHasAttendees = pnCalEventHasAttendees;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnCalendarEvent", targetEntity = PnCalendarHasEvent.class)
	@Transient
	public Set getPnCalendarHasEvents() {
		return this.pnCalendarHasEvents;
	}

	public void setPnCalendarHasEvents(Set pnCalendarHasEvents) {
		this.pnCalendarHasEvents = pnCalendarHasEvents;
	}

	public String toString() {
		return new ToStringBuilder(this).append("calendarEventId", getCalendarEventId()).toString();
	}
}
