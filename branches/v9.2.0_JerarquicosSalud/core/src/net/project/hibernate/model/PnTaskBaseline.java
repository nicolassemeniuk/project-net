/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.io.Serializable;
import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnTaskBaseline generated by hbm2java
 */
@Entity
@Table(name = "PN_TASK_BASELINE")
public class PnTaskBaseline implements Serializable {

	private PnTaskBaselinePK comp_id;

	private String taskName;

	private Integer createdBy;

	private Date baselineSetDate;

	private String taskType;

	private Long taskDuration;

	private Integer priority;

	private Integer taskWork;

	private Integer statusId;

	private String workUnits;

	private Integer taskWorkComplete;

	private Date dateStart;

	private Integer durationUnits;

	private Date dateFinish;

	private String recordStatus;

	private Integer workCompleteUnits;

	private Integer parentTaskId;

	private Integer criticalPath;

	private PnTask pnTask;

	public PnTaskBaseline() {
	}

	public PnTaskBaseline(PnTaskBaselinePK comp_id, Integer createdBy, String recordStatus) {
		this.comp_id = comp_id;
		this.createdBy = createdBy;
		this.recordStatus = recordStatus;
	}

	public PnTaskBaseline(PnTaskBaselinePK comp_id, String taskName, Integer createdBy, Date baselineSetDate,
			String taskType, Long taskDuration, Integer priority, Integer taskWork, Integer statusId, String workUnits,
			Integer taskWorkComplete, Date dateStart, Integer durationUnits, Date dateFinish, String recordStatus,
			Integer workCompleteUnits, Integer parentTaskId, Integer criticalPath, PnTask pnTask) {
		this.comp_id = comp_id;
		this.taskName = taskName;
		this.createdBy = createdBy;
		this.baselineSetDate = baselineSetDate;
		this.taskType = taskType;
		this.taskDuration = taskDuration;
		this.priority = priority;
		this.taskWork = taskWork;
		this.statusId = statusId;
		this.workUnits = workUnits;
		this.taskWorkComplete = taskWorkComplete;
		this.dateStart = dateStart;
		this.durationUnits = durationUnits;
		this.dateFinish = dateFinish;
		this.recordStatus = recordStatus;
		this.workCompleteUnits = workCompleteUnits;
		this.parentTaskId = parentTaskId;
		this.criticalPath = criticalPath;
		this.pnTask = pnTask;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "taskId", column = @Column(name = "TASK_ID", nullable = false, length = 20)),
			@AttributeOverride(name = "baselineId", column = @Column(name = "BASELINE_ID", nullable = false, length = 20)) })
	public PnTaskBaselinePK getComp_id() {
		return this.comp_id;
	}

	public void setComp_id(PnTaskBaselinePK comp_id) {
		this.comp_id = comp_id;
	}

	@Column(name = "TASK_NAME")
	public String getTaskName() {
		return this.taskName;
	}

	public void setTaskName(String taskName) {
		this.taskName = taskName;
	}

	@Column(name = "CREATED_BY", nullable = false, length = 20)
	public Integer getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name = "BASELINE_SET_DATE", length = 7)
	public Date getBaselineSetDate() {
		return this.baselineSetDate;
	}

	public void setBaselineSetDate(Date baselineSetDate) {
		this.baselineSetDate = baselineSetDate;
	}

	@Column(name = "TASK_TYPE", length = 80)
	public String getTaskType() {
		return this.taskType;
	}

	public void setTaskType(String taskType) {
		this.taskType = taskType;
	}

	@Column(name = "TASK_DURATION", length = 18)
	public Long getTaskDuration() {
		return this.taskDuration;
	}

	public void setTaskDuration(Long taskDuration) {
		this.taskDuration = taskDuration;
	}

	@Column(name = "PRIORITY", length = 6)
	public Integer getPriority() {
		return this.priority;
	}

	public void setPriority(Integer priority) {
		this.priority = priority;
	}

	@Column(name = "TASK_WORK", length = 22)
	public Integer getTaskWork() {
		return this.taskWork;
	}

	public void setTaskWork(Integer taskWork) {
		this.taskWork = taskWork;
	}

	@Column(name = "STATUS_ID", length = 20)
	public Integer getStatusId() {
		return this.statusId;
	}

	public void setStatusId(Integer statusId) {
		this.statusId = statusId;
	}

	@Column(name = "WORK_UNITS", length = 80)
	public String getWorkUnits() {
		return this.workUnits;
	}

	public void setWorkUnits(String workUnits) {
		this.workUnits = workUnits;
	}

	@Column(name = "TASK_WORK_COMPLETE", length = 22)
	public Integer getTaskWorkComplete() {
		return this.taskWorkComplete;
	}

	public void setTaskWorkComplete(Integer taskWorkComplete) {
		this.taskWorkComplete = taskWorkComplete;
	}

	@Column(name = "DATE_START", length = 7)
	public Date getDateStart() {
		return this.dateStart;
	}

	public void setDateStart(Date dateStart) {
		this.dateStart = dateStart;
	}

	@Column(name = "DURATION_UNITS", length = 20)
	public Integer getDurationUnits() {
		return this.durationUnits;
	}

	public void setDurationUnits(Integer durationUnits) {
		this.durationUnits = durationUnits;
	}

	@Column(name = "DATE_FINISH", length = 7)
	public Date getDateFinish() {
		return this.dateFinish;
	}

	public void setDateFinish(Date dateFinish) {
		this.dateFinish = dateFinish;
	}

	@Column(name = "RECORD_STATUS", nullable = false, length = 1)
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	@Column(name = "WORK_COMPLETE_UNITS", length = 20)
	public Integer getWorkCompleteUnits() {
		return this.workCompleteUnits;
	}

	public void setWorkCompleteUnits(Integer workCompleteUnits) {
		this.workCompleteUnits = workCompleteUnits;
	}

	@Column(name = "PARENT_TASK_ID", length = 20)
	public Integer getParentTaskId() {
		return this.parentTaskId;
	}

	public void setParentTaskId(Integer parentTaskId) {
		this.parentTaskId = parentTaskId;
	}

	@Column(name = "CRITICAL_PATH", length = 1)
	public Integer getCriticalPath() {
		return this.criticalPath;
	}

	public void setCriticalPath(Integer criticalPath) {
		this.criticalPath = criticalPath;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnTask.class)
	@JoinColumn(name = "TASK_ID", insertable = false, updatable = false)
	public PnTask getPnTask() {
		return this.pnTask;
	}

	public void setPnTask(PnTask pnTask) {
		this.pnTask = pnTask;
	}

	public String toString() {
		return new ToStringBuilder(this).append("comp_id", getComp_id()).toString();
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if (!(other instanceof PnTaskBaseline))
			return false;
		PnTaskBaseline castOther = (PnTaskBaseline) other;
		return new EqualsBuilder().append(this.getComp_id(), castOther.getComp_id()).isEquals();
	}

	public int hashCode() {
		return new HashCodeBuilder().append(getComp_id()).toHashCode();
	}

}
