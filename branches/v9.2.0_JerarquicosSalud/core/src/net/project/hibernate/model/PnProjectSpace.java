/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import net.project.util.TextFormatter;

import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnProjectSpace generated by hbm2java
 */
@Entity
@Table(name = "PN_PROJECT_SPACE")
public class PnProjectSpace implements Serializable {

	private Integer projectId;

	private String projectDesc;

	private String projectName;

	private Integer statusCodeId;

	private Integer colorCodeId;

	private int isSubproject;

	private Integer percentComplete;

	private Date startDate;

	private Date endDate;

	private Date dateModified;

	private Date crc;

	private String recordStatus;

	private String defaultCurrencyCode;

	private String sponsorDesc;

	private Integer improvementCodeId;

	private String currentStatusDescription;

	private Integer financialStatusColorCodeId;

	private Integer financialStatusImpCodeId;

	private Double budgetedTotalCostValue;

	private String budgetedTotalCostCc;

	private Double currentEstTotalCostValue;

	private String currentEstTotalCostCc;

	private Double actualToDateCostValue;

	private String actualToDateCostCc;

	private Integer estimatedRoiCostValue;

	private String estimatedRoiCostCc;

	private String costCenter;

	private Integer scheduleStatusColorCodeId;

	private Integer scheduleStatusImpCodeId;

	private Integer resourceStatusColorCodeId;

	private Integer resourceStatusImpCodeId;

	private Integer priorityCodeId;

	private Integer riskRatingCodeId;

	private Integer visibilityId;

	private String percentCalculationMethod;

	private int includesEveryone;

	private Integer wikiId;

	private PnObject pnObject;

	private PnDocument pnDocument;

	private PnPerson pnPerson;

	private Set helpFeedbacks = new HashSet(0);
	
	private Integer parentProjectId;
	
	private String parentSpaceType;
	
	public PnProjectSpace() {
	}

	public PnProjectSpace(Integer projectId) {
		this.projectId = projectId;
	}

	public PnProjectSpace(Integer projectId, Integer wikiId) {
		this.projectId = projectId;
		this.wikiId = wikiId;
	}

	/* For View Details Page ResourceTab */
	public PnProjectSpace(Integer projectId, String projectName) {
		this.projectId = projectId;
		this.projectName = projectName;
	}

	/*get project details for blog page*/
	public PnProjectSpace(Integer projectId, String projectName, String recordStatus) {
		this.projectId = projectId;
		this.projectName = projectName;
		this.recordStatus = recordStatus;
	}

	public PnProjectSpace(Integer projectId, String projectName, int isSubproject, Date crc, String recordStatus,
			String defaultCurrencyCode, Integer improvementCodeId, Integer financialStatusImpCodeId,
			Integer scheduleStatusImpCodeId, Integer resourceStatusImpCodeId, Integer visibilityId,
			String percentCalculationMethod, int includesEveryone, net.project.hibernate.model.PnDocument pnDocument,
			net.project.hibernate.model.PnPerson pnPerson, Set helpFeedbacks) {
		this.projectId = projectId;
		this.projectName = projectName;
		this.isSubproject = isSubproject;
		this.crc = crc;
		this.recordStatus = recordStatus;
		this.defaultCurrencyCode = defaultCurrencyCode;
		this.improvementCodeId = improvementCodeId;
		this.financialStatusImpCodeId = financialStatusImpCodeId;
		this.scheduleStatusImpCodeId = scheduleStatusImpCodeId;
		this.resourceStatusImpCodeId = resourceStatusImpCodeId;
		this.visibilityId = visibilityId;
		this.percentCalculationMethod = percentCalculationMethod;
		this.includesEveryone = includesEveryone;
		this.pnDocument = pnDocument;
		this.pnPerson = pnPerson;
		this.helpFeedbacks = helpFeedbacks;
	}

	public PnProjectSpace(Integer projectId, String projectDesc, String projectName, Integer statusCodeId,
			Integer colorCodeId, int isSubproject, Integer percentComplete, Date startDate, Date endDate,
			String recordStatus, String defaultCurrencyCode, String sponsorDesc, Integer improvementCodeId,
			String currentStatusDescription, Integer financialStatusColorCodeId, Integer financialStatusImpCodeId,
			Double budgetedTotalCostValue, String budgetedTotalCostCc, Double currentEstTotalCostValue,
			String currentEstTotalCostCc, Double actualToDateCostValue, String actualToDateCostCc,
			Integer estimatedRoiCostValue, String estimatedRoiCostCc, String costCenter,
			Integer scheduleStatusColorCodeId, Integer scheduleStatusImpCodeId, Integer resourceStatusColorCodeId,
			Integer resourceStatusImpCodeId, Integer priorityCodeId, Integer riskRatingCodeId, Integer visibilityId,
			String percentCalculationMethod, net.project.hibernate.model.PnDocument pnDocument) {
		this.projectId = projectId;
		this.projectDesc = projectDesc;
		this.projectName = projectName;
		this.statusCodeId = statusCodeId;
		this.colorCodeId = colorCodeId;
		this.isSubproject = isSubproject;
		this.percentComplete = percentComplete;
		this.startDate = startDate;
		this.endDate = endDate;
		this.recordStatus = recordStatus;
		this.defaultCurrencyCode = defaultCurrencyCode;
		this.sponsorDesc = sponsorDesc;
		this.improvementCodeId = improvementCodeId;
		this.currentStatusDescription = currentStatusDescription;
		this.financialStatusColorCodeId = financialStatusColorCodeId;
		this.financialStatusImpCodeId = financialStatusImpCodeId;
		this.budgetedTotalCostValue = budgetedTotalCostValue;
		this.budgetedTotalCostCc = budgetedTotalCostCc;
		this.currentEstTotalCostValue = currentEstTotalCostValue;
		this.currentEstTotalCostCc = currentEstTotalCostCc;
		this.actualToDateCostValue = actualToDateCostValue;
		this.actualToDateCostCc = actualToDateCostCc;
		this.estimatedRoiCostValue = estimatedRoiCostValue;
		this.estimatedRoiCostCc = estimatedRoiCostCc;
		this.costCenter = costCenter;
		this.scheduleStatusColorCodeId = scheduleStatusColorCodeId;
		this.scheduleStatusImpCodeId = scheduleStatusImpCodeId;
		this.resourceStatusColorCodeId = resourceStatusColorCodeId;
		this.resourceStatusImpCodeId = resourceStatusImpCodeId;
		this.priorityCodeId = priorityCodeId;
		this.riskRatingCodeId = riskRatingCodeId;
		this.visibilityId = visibilityId;
		this.percentCalculationMethod = percentCalculationMethod;
		this.pnDocument = pnDocument;
	}

	public PnProjectSpace(Integer projectId, String projectDesc, String projectName, Integer statusCodeId,
			Integer colorCodeId, int isSubproject, Integer percentComplete, Date startDate, Date endDate,
			String recordStatus, String defaultCurrencyCode, String sponsorDesc, Integer improvementCodeId,
			String currentStatusDescription, Integer financialStatusColorCodeId, Integer financialStatusImpCodeId,
			Double budgetedTotalCostValue, String budgetedTotalCostCc, Double currentEstTotalCostValue,
			String currentEstTotalCostCc, Double actualToDateCostValue, String actualToDateCostCc,
			Integer estimatedRoiCostValue, String estimatedRoiCostCc, String costCenter,
			Integer scheduleStatusColorCodeId, Integer scheduleStatusImpCodeId, Integer resourceStatusColorCodeId,
			Integer resourceStatusImpCodeId, Integer priorityCodeId, Integer riskRatingCodeId, Integer visibilityId,
			String percentCalculationMethod) {
		this.projectId = projectId;
		this.projectDesc = projectDesc;
		this.projectName = projectName;
		this.statusCodeId = statusCodeId;
		this.colorCodeId = colorCodeId;
		this.isSubproject = isSubproject;
		this.percentComplete = percentComplete;
		this.startDate = startDate;
		this.endDate = endDate;
		this.recordStatus = recordStatus;
		this.defaultCurrencyCode = defaultCurrencyCode;
		this.sponsorDesc = sponsorDesc;
		this.improvementCodeId = improvementCodeId;
		this.currentStatusDescription = currentStatusDescription;
		this.financialStatusColorCodeId = financialStatusColorCodeId;
		this.financialStatusImpCodeId = financialStatusImpCodeId;
		this.budgetedTotalCostValue = budgetedTotalCostValue;
		this.budgetedTotalCostCc = budgetedTotalCostCc;
		this.currentEstTotalCostValue = currentEstTotalCostValue;
		this.currentEstTotalCostCc = currentEstTotalCostCc;
		this.actualToDateCostValue = actualToDateCostValue;
		this.actualToDateCostCc = actualToDateCostCc;
		this.estimatedRoiCostValue = estimatedRoiCostValue;
		this.estimatedRoiCostCc = estimatedRoiCostCc;
		this.costCenter = costCenter;
		this.scheduleStatusColorCodeId = scheduleStatusColorCodeId;
		this.scheduleStatusImpCodeId = scheduleStatusImpCodeId;
		this.resourceStatusColorCodeId = resourceStatusColorCodeId;
		this.resourceStatusImpCodeId = resourceStatusImpCodeId;
		this.priorityCodeId = priorityCodeId;
		this.riskRatingCodeId = riskRatingCodeId;
		this.visibilityId = visibilityId;
		this.percentCalculationMethod = percentCalculationMethod;
	}
	
	public PnProjectSpace(Integer projectId, String projectDesc, String projectName,
			Integer statusCodeId, Integer colorCodeId, int isSubproject, Integer percentComplete,
			Date startDate, Date endDate, Date dateModified, String recordStatus,
			String defaultCurrencyCode, String sponsorDesc, Integer improvementCodeId,
			String currentStatusDescription, Integer financialStatusColorCodeId,
			Integer financialStatusImpCodeId, Double budgetedTotalCostValue, String budgetedTotalCostCc,
			Double currentEstTotalCostValue, String currentEstTotalCostCc, Double actualToDateCostValue,
			String actualToDateCostCc, Integer estimatedRoiCostValue, String estimatedRoiCostCc,
			String costCenter, Integer scheduleStatusColorCodeId, Integer scheduleStatusImpCodeId,
			Integer resourceStatusColorCodeId, Integer resourceStatusImpCodeId, Integer priorityCodeId,
			Integer riskRatingCodeId, Integer visibilityId, String percentCalculationMethod,
			Integer parentProjectId, String parentSpaceType) {
		
		this.projectId = projectId.intValue();
		this.projectDesc = projectDesc;
		this.projectName = projectName;
		this.statusCodeId = statusCodeId.intValue();
		this.colorCodeId = colorCodeId.intValue();
		this.isSubproject = isSubproject;
		this.percentComplete = percentComplete;
		this.startDate = startDate;
		this.endDate = endDate;
		this.dateModified = dateModified;
		this.recordStatus = recordStatus;
		this.defaultCurrencyCode = defaultCurrencyCode;
		this.sponsorDesc = sponsorDesc;
		this.improvementCodeId = improvementCodeId;
		this.currentStatusDescription = currentStatusDescription;
		this.financialStatusColorCodeId = financialStatusColorCodeId;
		this.financialStatusImpCodeId = financialStatusImpCodeId;
		this.budgetedTotalCostValue = budgetedTotalCostValue;
		this.budgetedTotalCostCc = budgetedTotalCostCc;
		this.currentEstTotalCostValue = currentEstTotalCostValue;
		this.currentEstTotalCostCc = currentEstTotalCostCc;
		this.actualToDateCostValue = actualToDateCostValue;
		this.actualToDateCostCc = actualToDateCostCc;
		this.estimatedRoiCostValue = estimatedRoiCostValue;
		this.estimatedRoiCostCc = estimatedRoiCostCc;
		this.costCenter = costCenter;
		this.scheduleStatusColorCodeId = scheduleStatusColorCodeId;
		this.scheduleStatusImpCodeId = scheduleStatusImpCodeId;
		this.resourceStatusColorCodeId = resourceStatusColorCodeId;
		this.resourceStatusImpCodeId = resourceStatusImpCodeId;
		this.priorityCodeId = priorityCodeId;
		this.riskRatingCodeId = riskRatingCodeId;
		this.visibilityId = visibilityId;
		this.percentCalculationMethod = percentCalculationMethod;
		this.parentProjectId = parentProjectId;
		this.parentSpaceType = parentSpaceType;
	}

	@Id
	@Column(name = "PROJECT_ID", nullable = false)
	public Integer getProjectId() {
		return this.projectId;
	}

	public void setProjectId(Integer projectId) {
		this.projectId = projectId;
	}

	@Column(name = "PROJECT_DESC", length = 1000)
	public String getProjectDesc() {
		return this.projectDesc;
	}

	public void setProjectDesc(String projectDesc) {
		this.projectDesc = projectDesc;
	}

	@Column(name = "PROJECT_NAME", nullable = false, length = 80)
	public String getProjectName() {
		return this.projectName;
	}

	public void setProjectName(String projectName) {
		this.projectName = projectName;
	}

	@Column(name = "STATUS_CODE_ID", length = 20)
	public Integer getStatusCodeId() {
		return this.statusCodeId;
	}

	public void setStatusCodeId(Integer statusCodeId) {
		this.statusCodeId = statusCodeId;
	}

	@Column(name = "COLOR_CODE_ID", length = 20)
	public Integer getColorCodeId() {
		return this.colorCodeId;
	}

	public void setColorCodeId(Integer colorCodeId) {
		this.colorCodeId = colorCodeId;
	}

	@Column(name = "IS_SUBPROJECT", nullable = false, length = 1)
	public int getIsSubproject() {
		return this.isSubproject;
	}

	public void setIsSubproject(int isSubproject) {
		this.isSubproject = isSubproject;
	}

	@Column(name = "PERCENT_COMPLETE", length = 3)
	public Integer getPercentComplete() {
		return this.percentComplete;
	}

	public void setPercentComplete(Integer percentComplete) {
		this.percentComplete = percentComplete;
	}

	@Column(name = "START_DATE")
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Column(name = "END_DATE")
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@Column(name = "DATE_MODIFIED")
	public Date getDateModified() {
		return this.dateModified;
	}

	public void setDateModified(Date dateModified) {
		this.dateModified = dateModified;
	}

	@Column(name = "CRC", nullable = false)
	public Date getCrc() {
		return this.crc;
	}

	public void setCrc(Date crc) {
		this.crc = crc;
	}

	@Column(name = "RECORD_STATUS", nullable = false, length = 1)
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	@Column(name = "DEFAULT_CURRENCY_CODE", nullable = false, length = 3)
	public String getDefaultCurrencyCode() {
		return this.defaultCurrencyCode;
	}

	public void setDefaultCurrencyCode(String defaultCurrencyCode) {
		this.defaultCurrencyCode = defaultCurrencyCode;
	}

	@Column(name = "SPONSOR_DESC", length = 1000)
	public String getSponsorDesc() {
		return this.sponsorDesc;
	}

	public void setSponsorDesc(String sponsorDesc) {
		this.sponsorDesc = sponsorDesc;
	}

	@Column(name = "IMPROVEMENT_CODE_ID", nullable = false, length = 20)
	public Integer getImprovementCodeId() {
		return this.improvementCodeId;
	}

	public void setImprovementCodeId(Integer improvementCodeId) {
		this.improvementCodeId = improvementCodeId;
	}

	@Column(name = "CURRENT_STATUS_DESCRIPTION", length = 4000)
	public String getCurrentStatusDescription() {
		return this.currentStatusDescription;
	}

	public void setCurrentStatusDescription(String currentStatusDescription) {
		this.currentStatusDescription = currentStatusDescription;
	}

	@Column(name = "FINANCIAL_STATUS_COLOR_CODE_ID", length = 20)
	public Integer getFinancialStatusColorCodeId() {
		return this.financialStatusColorCodeId;
	}

	public void setFinancialStatusColorCodeId(Integer financialStatusColorCodeId) {
		this.financialStatusColorCodeId = financialStatusColorCodeId;
	}

	@Column(name = "FINANCIAL_STATUS_IMP_CODE_ID", nullable = false, length = 20)
	public Integer getFinancialStatusImpCodeId() {
		return this.financialStatusImpCodeId;
	}

	public void setFinancialStatusImpCodeId(Integer financialStatusImpCodeId) {
		this.financialStatusImpCodeId = financialStatusImpCodeId;
	}

	@Column(name = "BUDGETED_TOTAL_COST_VALUE", length = 22)
	public Double getBudgetedTotalCostValue() {
		return this.budgetedTotalCostValue;
	}

	public void setBudgetedTotalCostValue(Double budgetedTotalCostValue) {
		this.budgetedTotalCostValue = budgetedTotalCostValue;
	}

	@Column(name = "BUDGETED_TOTAL_COST_CC", length = 3)
	public String getBudgetedTotalCostCc() {
		return this.budgetedTotalCostCc;
	}

	public void setBudgetedTotalCostCc(String budgetedTotalCostCc) {
		this.budgetedTotalCostCc = budgetedTotalCostCc;
	}

	@Column(name = "CURRENT_EST_TOTAL_COST_VALUE", length = 22)
	public Double getCurrentEstTotalCostValue() {
		return this.currentEstTotalCostValue;
	}

	public void setCurrentEstTotalCostValue(Double currentEstTotalCostValue) {
		this.currentEstTotalCostValue = currentEstTotalCostValue;
	}

	@Column(name = "CURRENT_EST_TOTAL_COST_CC", length = 3)
	public String getCurrentEstTotalCostCc() {
		return this.currentEstTotalCostCc;
	}

	public void setCurrentEstTotalCostCc(String currentEstTotalCostCc) {
		this.currentEstTotalCostCc = currentEstTotalCostCc;
	}

	@Column(name = "ACTUAL_TO_DATE_COST_VALUE", length = 22)
	public Double getActualToDateCostValue() {
		return this.actualToDateCostValue;
	}

	public void setActualToDateCostValue(Double actualToDateCostValue) {
		this.actualToDateCostValue = actualToDateCostValue;
	}

	@Column(name = "ACTUAL_TO_DATE_COST_CC", length = 3)
	public String getActualToDateCostCc() {
		return this.actualToDateCostCc;
	}

	public void setActualToDateCostCc(String actualToDateCostCc) {
		this.actualToDateCostCc = actualToDateCostCc;
	}

	@Column(name = "ESTIMATED_ROI_COST_VALUE", length = 22)
	public Integer getEstimatedRoiCostValue() {
		return this.estimatedRoiCostValue;
	}

	public void setEstimatedRoiCostValue(Integer estimatedRoiCostValue) {
		this.estimatedRoiCostValue = estimatedRoiCostValue;
	}

	@Column(name = "ESTIMATED_ROI_COST_CC", length = 3)
	public String getEstimatedRoiCostCc() {
		return this.estimatedRoiCostCc;
	}

	public void setEstimatedRoiCostCc(String estimatedRoiCostCc) {
		this.estimatedRoiCostCc = estimatedRoiCostCc;
	}

	@Column(name = "COST_CENTER", length = 1000)
	public String getCostCenter() {
		return this.costCenter;
	}

	public void setCostCenter(String costCenter) {
		this.costCenter = costCenter;
	}

	@Column(name = "SCHEDULE_STATUS_COLOR_CODE_ID", length = 20)
	public Integer getScheduleStatusColorCodeId() {
		return this.scheduleStatusColorCodeId;
	}

	public void setScheduleStatusColorCodeId(Integer scheduleStatusColorCodeId) {
		this.scheduleStatusColorCodeId = scheduleStatusColorCodeId;
	}

	@Column(name = "SCHEDULE_STATUS_IMP_CODE_ID", nullable = false, length = 20)
	public Integer getScheduleStatusImpCodeId() {
		return this.scheduleStatusImpCodeId;
	}

	public void setScheduleStatusImpCodeId(Integer scheduleStatusImpCodeId) {
		this.scheduleStatusImpCodeId = scheduleStatusImpCodeId;
	}

	@Column(name = "RESOURCE_STATUS_COLOR_CODE_ID", length = 20)
	public Integer getResourceStatusColorCodeId() {
		return this.resourceStatusColorCodeId;
	}

	public void setResourceStatusColorCodeId(Integer resourceStatusColorCodeId) {
		this.resourceStatusColorCodeId = resourceStatusColorCodeId;
	}

	@Column(name = "RESOURCE_STATUS_IMP_CODE_ID", nullable = false, length = 20)
	public Integer getResourceStatusImpCodeId() {
		return this.resourceStatusImpCodeId;
	}

	public void setResourceStatusImpCodeId(Integer resourceStatusImpCodeId) {
		this.resourceStatusImpCodeId = resourceStatusImpCodeId;
	}

	@Column(name = "PRIORITY_CODE_ID", length = 20)
	public Integer getPriorityCodeId() {
		return this.priorityCodeId;
	}

	public void setPriorityCodeId(Integer priorityCodeId) {
		this.priorityCodeId = priorityCodeId;
	}

	@Column(name = "RISK_RATING_CODE_ID", length = 20)
	public Integer getRiskRatingCodeId() {
		return this.riskRatingCodeId;
	}

	public void setRiskRatingCodeId(Integer riskRatingCodeId) {
		this.riskRatingCodeId = riskRatingCodeId;
	}

	@Column(name = "VISIBILITY_ID", nullable = false, length = 20)
	public Integer getVisibilityId() {
		return this.visibilityId;
	}

	public void setVisibilityId(Integer visibilityId) {
		this.visibilityId = visibilityId;
	}

	@Column(name = "PERCENT_CALCULATION_METHOD", nullable = false, length = 80)
	public String getPercentCalculationMethod() {
		return this.percentCalculationMethod;
	}

	public void setPercentCalculationMethod(String percentCalculationMethod) {
		this.percentCalculationMethod = percentCalculationMethod;
	}

	@Column(name = "INCLUDES_EVERYONE", nullable = false, length = 1)
	public int getIncludesEveryone() {
		return this.includesEveryone;
	}

	public void setIncludesEveryone(int includesEveryone) {
		this.includesEveryone = includesEveryone;
	}

	@Column(name = "WIKI_ID", length = 20)
	public Integer getWikiId() {
		return this.wikiId;
	}

	public void setWikiId(Integer wikiId) {
		this.wikiId = wikiId;
	}

	//@OneToOne(fetch = FetchType.LAZY, targetEntity=PnObject.class)
	//@JoinColumn(name = "PROJECT_ID")
	@Transient
	public PnObject getPnObject() {
		return this.pnObject;
	}

	public void setPnObject(PnObject pnObject) {
		this.pnObject = pnObject;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity=PnDocument.class)
	@JoinColumn(name = "PROJECT_LOGO_ID")
	public PnDocument getPnDocument() {
		return this.pnDocument;
	}

	public void setPnDocument(PnDocument pnDocument) {
		this.pnDocument = pnDocument;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity=PnPerson.class)
	@JoinColumn(name = "MODIFIED_BY_ID")
	public PnPerson getPnPerson() {
		return this.pnPerson;
	}

	public void setPnPerson(PnPerson pnPerson) {
		this.pnPerson = pnPerson;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnProjectSpace", targetEntity = HelpFeedback.class)
	@Transient
	public Set getHelpFeedbacks() {
		return this.helpFeedbacks;
	}

	public void setHelpFeedbacks(Set helpFeedbacks) {
		this.helpFeedbacks = helpFeedbacks;
	}
	
	/**
	 * @return the parentProjectId
	 */
	@Transient
	public Integer getParentProjectId() {
		return parentProjectId;
	}

	/**
	 * @param parentProjectId the parentProjectId to set
	 */
	public void setParentProjectId(Integer parentProjectId) {
		this.parentProjectId = parentProjectId;
	}
	
	/**
	 * @return the parentSpaceType
	 */
	@Transient
	public String getParentSpaceType() {
		return parentSpaceType;
	}

	/**
	 * @param parentSpaceType the parentSpaceType to set
	 */
	public void setParentSpaceType(String parentSpaceType) {
		this.parentSpaceType = parentSpaceType;
	}
	
     /* Truncates project name
     * @return
     */
	@Transient
	public String getTruncatedProjectName(){
		return TextFormatter.truncateString(this.getProjectName(), 40).replaceAll("'", "`");
	}

	public String toString() {
		return new ToStringBuilder(this).append("projectId", getProjectId()).toString();
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((actualToDateCostCc == null) ? 0 : actualToDateCostCc.hashCode());
		result = prime * result + ((actualToDateCostValue == null) ? 0 : actualToDateCostValue.hashCode());
		result = prime * result + ((budgetedTotalCostCc == null) ? 0 : budgetedTotalCostCc.hashCode());
		result = prime * result + ((budgetedTotalCostValue == null) ? 0 : budgetedTotalCostValue.hashCode());
		result = prime * result + ((colorCodeId == null) ? 0 : colorCodeId.hashCode());
		result = prime * result + ((costCenter == null) ? 0 : costCenter.hashCode());
		result = prime * result + ((crc == null) ? 0 : crc.hashCode());
		result = prime * result + ((currentEstTotalCostCc == null) ? 0 : currentEstTotalCostCc.hashCode());
		result = prime * result + ((currentEstTotalCostValue == null) ? 0 : currentEstTotalCostValue.hashCode());
		result = prime * result + ((currentStatusDescription == null) ? 0 : currentStatusDescription.hashCode());
		result = prime * result + ((dateModified == null) ? 0 : dateModified.hashCode());
		result = prime * result + ((defaultCurrencyCode == null) ? 0 : defaultCurrencyCode.hashCode());
		result = prime * result + ((endDate == null) ? 0 : endDate.hashCode());
		result = prime * result + ((estimatedRoiCostCc == null) ? 0 : estimatedRoiCostCc.hashCode());
		result = prime * result + ((estimatedRoiCostValue == null) ? 0 : estimatedRoiCostValue.hashCode());
		result = prime * result + ((financialStatusColorCodeId == null) ? 0 : financialStatusColorCodeId.hashCode());
		result = prime * result + ((financialStatusImpCodeId == null) ? 0 : financialStatusImpCodeId.hashCode());
		result = prime * result + ((helpFeedbacks == null) ? 0 : helpFeedbacks.hashCode());
		result = prime * result + ((improvementCodeId == null) ? 0 : improvementCodeId.hashCode());
		result = prime * result + includesEveryone;
		result = prime * result + isSubproject;
		result = prime * result + ((percentCalculationMethod == null) ? 0 : percentCalculationMethod.hashCode());
		result = prime * result + ((percentComplete == null) ? 0 : percentComplete.hashCode());
		result = prime * result + ((pnDocument == null) ? 0 : pnDocument.hashCode());
		result = prime * result + ((pnObject == null) ? 0 : pnObject.hashCode());
		result = prime * result + ((pnPerson == null) ? 0 : pnPerson.hashCode());
		result = prime * result + ((priorityCodeId == null) ? 0 : priorityCodeId.hashCode());
		result = prime * result + ((projectDesc == null) ? 0 : projectDesc.hashCode());
		result = prime * result + ((projectId == null) ? 0 : projectId.hashCode());
		result = prime * result + ((projectName == null) ? 0 : projectName.hashCode());
		result = prime * result + ((recordStatus == null) ? 0 : recordStatus.hashCode());
		result = prime * result + ((resourceStatusColorCodeId == null) ? 0 : resourceStatusColorCodeId.hashCode());
		result = prime * result + ((resourceStatusImpCodeId == null) ? 0 : resourceStatusImpCodeId.hashCode());
		result = prime * result + ((riskRatingCodeId == null) ? 0 : riskRatingCodeId.hashCode());
		result = prime * result + ((scheduleStatusColorCodeId == null) ? 0 : scheduleStatusColorCodeId.hashCode());
		result = prime * result + ((scheduleStatusImpCodeId == null) ? 0 : scheduleStatusImpCodeId.hashCode());
		result = prime * result + ((sponsorDesc == null) ? 0 : sponsorDesc.hashCode());
		result = prime * result + ((startDate == null) ? 0 : startDate.hashCode());
		result = prime * result + ((statusCodeId == null) ? 0 : statusCodeId.hashCode());
		result = prime * result + ((visibilityId == null) ? 0 : visibilityId.hashCode());
		result = prime * result + ((wikiId == null) ? 0 : wikiId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		final PnProjectSpace other = (PnProjectSpace) obj;
		if (actualToDateCostCc == null) {
			if (other.actualToDateCostCc != null)
				return false;
		} else if (!actualToDateCostCc.equals(other.actualToDateCostCc))
			return false;
		if (actualToDateCostValue == null) {
			if (other.actualToDateCostValue != null)
				return false;
		} else if (!actualToDateCostValue.equals(other.actualToDateCostValue))
			return false;
		if (budgetedTotalCostCc == null) {
			if (other.budgetedTotalCostCc != null)
				return false;
		} else if (!budgetedTotalCostCc.equals(other.budgetedTotalCostCc))
			return false;
		if (budgetedTotalCostValue == null) {
			if (other.budgetedTotalCostValue != null)
				return false;
		} else if (!budgetedTotalCostValue.equals(other.budgetedTotalCostValue))
			return false;
		if (colorCodeId == null) {
			if (other.colorCodeId != null)
				return false;
		} else if (!colorCodeId.equals(other.colorCodeId))
			return false;
		if (costCenter == null) {
			if (other.costCenter != null)
				return false;
		} else if (!costCenter.equals(other.costCenter))
			return false;
		if (crc == null) {
			if (other.crc != null)
				return false;
		} else if (!crc.equals(other.crc))
			return false;
		if (currentEstTotalCostCc == null) {
			if (other.currentEstTotalCostCc != null)
				return false;
		} else if (!currentEstTotalCostCc.equals(other.currentEstTotalCostCc))
			return false;
		if (currentEstTotalCostValue == null) {
			if (other.currentEstTotalCostValue != null)
				return false;
		} else if (!currentEstTotalCostValue.equals(other.currentEstTotalCostValue))
			return false;
		if (currentStatusDescription == null) {
			if (other.currentStatusDescription != null)
				return false;
		} else if (!currentStatusDescription.equals(other.currentStatusDescription))
			return false;
		if (dateModified == null) {
			if (other.dateModified != null)
				return false;
		} else if (!dateModified.equals(other.dateModified))
			return false;
		if (defaultCurrencyCode == null) {
			if (other.defaultCurrencyCode != null)
				return false;
		} else if (!defaultCurrencyCode.equals(other.defaultCurrencyCode))
			return false;
		if (endDate == null) {
			if (other.endDate != null)
				return false;
		} else if (!endDate.equals(other.endDate))
			return false;
		if (estimatedRoiCostCc == null) {
			if (other.estimatedRoiCostCc != null)
				return false;
		} else if (!estimatedRoiCostCc.equals(other.estimatedRoiCostCc))
			return false;
		if (estimatedRoiCostValue == null) {
			if (other.estimatedRoiCostValue != null)
				return false;
		} else if (!estimatedRoiCostValue.equals(other.estimatedRoiCostValue))
			return false;
		if (financialStatusColorCodeId == null) {
			if (other.financialStatusColorCodeId != null)
				return false;
		} else if (!financialStatusColorCodeId.equals(other.financialStatusColorCodeId))
			return false;
		if (financialStatusImpCodeId == null) {
			if (other.financialStatusImpCodeId != null)
				return false;
		} else if (!financialStatusImpCodeId.equals(other.financialStatusImpCodeId))
			return false;
		if (helpFeedbacks == null) {
			if (other.helpFeedbacks != null)
				return false;
		} else if (!helpFeedbacks.equals(other.helpFeedbacks))
			return false;
		if (improvementCodeId == null) {
			if (other.improvementCodeId != null)
				return false;
		} else if (!improvementCodeId.equals(other.improvementCodeId))
			return false;
		if (includesEveryone != other.includesEveryone)
			return false;
		if (isSubproject != other.isSubproject)
			return false;
		if (percentCalculationMethod == null) {
			if (other.percentCalculationMethod != null)
				return false;
		} else if (!percentCalculationMethod.equals(other.percentCalculationMethod))
			return false;
		if (percentComplete == null) {
			if (other.percentComplete != null)
				return false;
		} else if (!percentComplete.equals(other.percentComplete))
			return false;
		if (pnDocument == null) {
			if (other.pnDocument != null)
				return false;
		} else if (!pnDocument.equals(other.pnDocument))
			return false;
		if (pnObject == null) {
			if (other.pnObject != null)
				return false;
		} else if (!pnObject.equals(other.pnObject))
			return false;
		if (pnPerson == null) {
			if (other.pnPerson != null)
				return false;
		} else if (!pnPerson.equals(other.pnPerson))
			return false;
		if (priorityCodeId == null) {
			if (other.priorityCodeId != null)
				return false;
		} else if (!priorityCodeId.equals(other.priorityCodeId))
			return false;
		if (projectDesc == null) {
			if (other.projectDesc != null)
				return false;
		} else if (!projectDesc.equals(other.projectDesc))
			return false;
		if (projectId == null) {
			if (other.projectId != null)
				return false;
		} else if (!projectId.equals(other.projectId))
			return false;
		if (projectName == null) {
			if (other.projectName != null)
				return false;
		} else if (!projectName.equals(other.projectName))
			return false;
		if (recordStatus == null) {
			if (other.recordStatus != null)
				return false;
		} else if (!recordStatus.equals(other.recordStatus))
			return false;
		if (resourceStatusColorCodeId == null) {
			if (other.resourceStatusColorCodeId != null)
				return false;
		} else if (!resourceStatusColorCodeId.equals(other.resourceStatusColorCodeId))
			return false;
		if (resourceStatusImpCodeId == null) {
			if (other.resourceStatusImpCodeId != null)
				return false;
		} else if (!resourceStatusImpCodeId.equals(other.resourceStatusImpCodeId))
			return false;
		if (riskRatingCodeId == null) {
			if (other.riskRatingCodeId != null)
				return false;
		} else if (!riskRatingCodeId.equals(other.riskRatingCodeId))
			return false;
		if (scheduleStatusColorCodeId == null) {
			if (other.scheduleStatusColorCodeId != null)
				return false;
		} else if (!scheduleStatusColorCodeId.equals(other.scheduleStatusColorCodeId))
			return false;
		if (scheduleStatusImpCodeId == null) {
			if (other.scheduleStatusImpCodeId != null)
				return false;
		} else if (!scheduleStatusImpCodeId.equals(other.scheduleStatusImpCodeId))
			return false;
		if (sponsorDesc == null) {
			if (other.sponsorDesc != null)
				return false;
		} else if (!sponsorDesc.equals(other.sponsorDesc))
			return false;
		if (startDate == null) {
			if (other.startDate != null)
				return false;
		} else if (!startDate.equals(other.startDate))
			return false;
		if (statusCodeId == null) {
			if (other.statusCodeId != null)
				return false;
		} else if (!statusCodeId.equals(other.statusCodeId))
			return false;
		if (visibilityId == null) {
			if (other.visibilityId != null)
				return false;
		} else if (!visibilityId.equals(other.visibilityId))
			return false;
		if (wikiId == null) {
			if (other.wikiId != null)
				return false;
		} else if (!wikiId.equals(other.wikiId))
			return false;
		return true;
	}
}
