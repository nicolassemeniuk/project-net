/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
*/
package net.project.hibernate.model;


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * HelpFeedback generated by hbm2java
 */
@Entity
@Table(name="HELP_FEEDBACK"
)
public class HelpFeedback  implements java.io.Serializable {


     private HelpFeedbackPK comp_id;
    /** persistent field */
    private String subject;

    /** nullable persistent field */
    private Long keyId;

    /** nullable persistent field */
    private String comments;

    /** nullable persistent field */
     private PnPerson pnPerson;
     private PnProjectSpace pnProjectSpace;

    public HelpFeedback() {
    }

	
    public HelpFeedback(HelpFeedbackPK comp_id, String subject) {
        this.comp_id = comp_id;
        this.subject = subject;
    }
    public HelpFeedback(HelpFeedbackPK comp_id, String subject, Long keyId, String comments, PnPerson pnPerson, PnProjectSpace pnProjectSpace) {
       this.comp_id = comp_id;
       this.subject = subject;
       this.keyId = keyId;
       this.comments = comments;
       this.pnPerson = pnPerson;
       this.pnProjectSpace = pnProjectSpace;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="personId", column=@Column(name="PERSON_ID", nullable=false, length=20) ), 
        @AttributeOverride(name="timestamp", column=@Column(name="TIMESTAMP", nullable=false, length=7) ) } )
    public HelpFeedbackPK getComp_id() {
        return this.comp_id;
    }
    
    public void setComp_id(HelpFeedbackPK comp_id) {
        this.comp_id = comp_id;
    }

    
    @Column(name="SUBJECT", nullable=false, length=30)
    public String getSubject() {
        return this.subject;
    }
    
    public void setSubject(String subject) {
        this.subject = subject;
    }

    
    @Column(name="KEY_ID", length=10)
    public Long getKeyId() {
        return this.keyId;
    }
    
    public void setKeyId(Long keyId) {
        this.keyId = keyId;
    }

    
    @Column(name="COMMENTS", length=1000)
    public String getComments() {
        return this.comments;
    }
    
    public void setComments(String comments) {
        this.comments = comments;
    }

@ManyToOne(fetch=FetchType.LAZY, targetEntity=PnPerson.class)
    @JoinColumn(name="PERSON_ID", insertable=false, updatable=false)
    public PnPerson getPnPerson() {
        return this.pnPerson;
    }
    
    public void setPnPerson(PnPerson pnPerson) {
        this.pnPerson = pnPerson;
    }

@ManyToOne(fetch=FetchType.LAZY, targetEntity=PnProjectSpace.class)
    @JoinColumn(name="PROJECT_ID")
    public PnProjectSpace getPnProjectSpace() {
        return this.pnProjectSpace;
    }
    
    public void setPnProjectSpace(PnProjectSpace pnProjectSpace) {
        this.pnProjectSpace = pnProjectSpace;
    }


    public String toString() {
        return new ToStringBuilder(this)
            .append("comp_id", getComp_id())
            .toString();
    }

    public boolean equals(Object other) {
        if ( (this == other ) ) return true;
        if ( !(other instanceof HelpFeedback) ) return false;
        HelpFeedback castOther = (HelpFeedback) other;
        return new EqualsBuilder()
            .append(this.getComp_id(), castOther.getComp_id())
            .isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder()
            .append(getComp_id())
            .toHashCode();
    }


}


