/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.io.Serializable;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * PnViewDefaultSetting generated by hbm2java
 */
@Entity
@Table(name = "PN_VIEW_DEFAULT_SETTING")
public class PnViewDefaultSetting implements Serializable {

	private PnViewDefaultSettingPK comp_id;

	private PnView pnView;

	public PnViewDefaultSetting() {
	}

	public PnViewDefaultSetting(PnViewDefaultSettingPK comp_id) {
		this.comp_id = comp_id;
	}

	public PnViewDefaultSetting(PnViewDefaultSettingPK comp_id, PnView pnView) {
		this.comp_id = comp_id;
		this.pnView = pnView;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "contextId", column = @Column(name = "CONTEXT_ID", nullable = false, length = 20)),
			@AttributeOverride(name = "scenarioId", column = @Column(name = "SCENARIO_ID", nullable = false, length = 20)) })
	public PnViewDefaultSettingPK getComp_id() {
		return this.comp_id;
	}

	public void setComp_id(PnViewDefaultSettingPK comp_id) {
		this.comp_id = comp_id;
	}

	//@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnView.class)
	//@JoinColumn(name = "VIEW_ID")
	@Transient
	public PnView getPnView() {
		return this.pnView;
	}

	public void setPnView(PnView pnView) {
		this.pnView = pnView;
	}

	public String toString() {
		return new ToStringBuilder(this).append("comp_id", getComp_id()).toString();
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if (!(other instanceof PnViewDefaultSetting))
			return false;
		PnViewDefaultSetting castOther = (PnViewDefaultSetting) other;
		return new EqualsBuilder().append(this.getComp_id(), castOther.getComp_id()).isEquals();
	}

	public int hashCode() {
		return new HashCodeBuilder().append(getComp_id()).toHashCode();
	}

}
