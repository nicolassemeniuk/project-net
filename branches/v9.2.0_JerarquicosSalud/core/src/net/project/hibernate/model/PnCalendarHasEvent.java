package net.project.hibernate.model;
// Generated Jun 13, 2009 11:41:49 PM by Hibernate Tools 3.2.4.GA


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnCalendarHasEvent generated by hbm2java
 */
@Entity
@Table(name="PN_CALENDAR_HAS_EVENT"
)
public class PnCalendarHasEvent  implements java.io.Serializable {

	/** identifier field */
    private PnCalendarHasEventPK comp_id;
     
    /** nullable persistent field */
    private PnCalendar pnCalendar;
     
    /** nullable persistent field */
    private PnCalendarEvent pnCalendarEvent;

    public PnCalendarHasEvent() {
    }

	
    public PnCalendarHasEvent(PnCalendarHasEventPK comp_id) {
        this.comp_id = comp_id;
    }
    public PnCalendarHasEvent(PnCalendarHasEventPK comp_id, PnCalendar pnCalendar, PnCalendarEvent pnCalendarEvent) {
       this.comp_id = comp_id;
       this.pnCalendar = pnCalendar;
       this.pnCalendarEvent = pnCalendarEvent;
    }
   
    @EmbeddedId
    @AttributeOverrides( {
        @AttributeOverride(name="calendarId", column=@Column(name="CALENDAR_ID", nullable=false, length=20) ), 
        @AttributeOverride(name="calendarEventId", column=@Column(name="CALENDAR_EVENT_ID", nullable=false, length=20) ) } )
    public PnCalendarHasEventPK getComp_id() {
        return this.comp_id;
    }
    
    public void setComp_id(PnCalendarHasEventPK comp_id) {
        this.comp_id = comp_id;
    }

    @ManyToOne(fetch=FetchType.LAZY, targetEntity=PnCalendar.class)
    @JoinColumn(name="CALENDAR_ID", insertable=false, updatable=false)
    public PnCalendar getPnCalendar() {
        return this.pnCalendar;
    }
    
    public void setPnCalendar(PnCalendar pnCalendar) {
        this.pnCalendar = pnCalendar;
    }

    @ManyToOne(fetch=FetchType.LAZY, targetEntity=PnCalendarEvent.class)
    @JoinColumn(name="CALENDAR_EVENT_ID", insertable=false, updatable=false)
    public PnCalendarEvent getPnCalendarEvent() {
        return this.pnCalendarEvent;
    }
    
    public void setPnCalendarEvent(PnCalendarEvent pnCalendarEvent) {
        this.pnCalendarEvent = pnCalendarEvent;
    }

    public String toString() {
        return new ToStringBuilder(this)
            .append("comp_id", getComp_id())
            .toString();
    }

    public boolean equals(Object other) {
        if ( (this == other ) ) return true;
        if ( !(other instanceof PnCalendarHasEvent) ) return false;
        PnCalendarHasEvent castOther = (PnCalendarHasEvent) other;
        return new EqualsBuilder()
            .append(this.getComp_id(), castOther.getComp_id())
            .isEquals();
    }

 	public int hashCode() {
        return new HashCodeBuilder()
            .append(getComp_id())
            .toHashCode();
    }
}


