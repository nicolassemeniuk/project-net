/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.sql.Clob;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnDiscussionGroup generated by hbm2java
 */
@Entity
@Table(name = "PN_DISCUSSION_GROUP")
public class PnDiscussionGroup implements java.io.Serializable {

	/** identifier field */
	private Integer discussionGroupId;

	/** nullable persistent field */
	private String discussionGroupName;

	/** nullable persistent field */
	private String discussionGroupDescription;

	/** persistent field */
	private String recordStatus;

	/** nullable persistent field */
	private Clob discussionGroupCharterClob;

	/** nullable persistent field */
	private PnObject pnObject;

	/** nullable persistent field */
	private Set pnObjectHasDiscussions = new HashSet(0);

	/** nullable persistent field */
	private Set pnPosts = new HashSet(0);

	/** nullable persistent field */
	private Set pnDiscussionHistories = new HashSet(0);

	public PnDiscussionGroup() {
	}

	public PnDiscussionGroup(Integer discussionGroupId, String recordStatus) {
		this.discussionGroupId = discussionGroupId;
		this.recordStatus = recordStatus;
	}

	public PnDiscussionGroup(Integer discussionGroupId, String discussionGroupName, String discussionGroupDescription,
			String recordStatus, Clob discussionGroupCharterClob, PnObject pnObject, Set pnObjectHasDiscussions,
			Set pnPosts, Set pnDiscussionHistories) {
		this.discussionGroupId = discussionGroupId;
		this.discussionGroupName = discussionGroupName;
		this.discussionGroupDescription = discussionGroupDescription;
		this.recordStatus = recordStatus;
		this.discussionGroupCharterClob = discussionGroupCharterClob;
		this.pnObject = pnObject;
		this.pnObjectHasDiscussions = pnObjectHasDiscussions;
		this.pnPosts = pnPosts;
		this.pnDiscussionHistories = pnDiscussionHistories;
	}

	/** minimal constructor */
	public PnDiscussionGroup(Integer discussionGroupId, String recordStatus, Set pnObjectHasDiscussions, Set pnPosts,
			Set pnDiscussionHistories) {
		this.discussionGroupId = discussionGroupId;
		this.recordStatus = recordStatus;
		this.pnObjectHasDiscussions = pnObjectHasDiscussions;
		this.pnPosts = pnPosts;
		this.pnDiscussionHistories = pnDiscussionHistories;
	}

	@Id
	@Column(name = "DISCUSSION_GROUP_ID", nullable = false)
	public Integer getDiscussionGroupId() {
		return this.discussionGroupId;
	}

	public void setDiscussionGroupId(Integer discussionGroupId) {
		this.discussionGroupId = discussionGroupId;
	}

	@Column(name = "DISCUSSION_GROUP_NAME", length = 256)
	public String getDiscussionGroupName() {
		return this.discussionGroupName;
	}

	public void setDiscussionGroupName(String discussionGroupName) {
		this.discussionGroupName = discussionGroupName;
	}

	@Column(name = "DISCUSSION_GROUP_DESCRIPTION", length = 80)
	public String getDiscussionGroupDescription() {
		return this.discussionGroupDescription;
	}

	public void setDiscussionGroupDescription(String discussionGroupDescription) {
		this.discussionGroupDescription = discussionGroupDescription;
	}

	@Column(name = "RECORD_STATUS", nullable = false, length = 1)
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	@Column(name = "DISCUSSION_GROUP_CHARTER_CLOB", length = 4000)
	public Clob getDiscussionGroupCharterClob() {
		return this.discussionGroupCharterClob;
	}

	public void setDiscussionGroupCharterClob(Clob discussionGroupCharterClob) {
		this.discussionGroupCharterClob = discussionGroupCharterClob;
	}

	//@OneToOne(fetch = FetchType.LAZY, targetEntity = PnObject.class)
	//@JoinColumn(name="DISCUSSION_GROUP_ID")
	@Transient
	public PnObject getPnObject() {
		return this.pnObject;
	}

	public void setPnObject(PnObject pnObject) {
		this.pnObject = pnObject;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnDiscussionGroup", targetEntity = PnObjectHasDiscussion.class)
	@Transient
	public Set getPnObjectHasDiscussions() {
		return this.pnObjectHasDiscussions;
	}

	public void setPnObjectHasDiscussions(Set pnObjectHasDiscussions) {
		this.pnObjectHasDiscussions = pnObjectHasDiscussions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnDiscussionGroup", targetEntity = PnPost.class)
	public Set getPnPosts() {
		return this.pnPosts;
	}

	public void setPnPosts(Set pnPosts) {
		this.pnPosts = pnPosts;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnDiscussionGroup", targetEntity = PnDiscussionHistory.class)
	@Transient
	public Set getPnDiscussionHistories() {
		return this.pnDiscussionHistories;
	}

	public void setPnDiscussionHistories(Set pnDiscussionHistories) {
		this.pnDiscussionHistories = pnDiscussionHistories;
	}

	public String toString() {
		return new ToStringBuilder(this).append("discussionGroupId", getDiscussionGroupId()).toString();
	}

}
