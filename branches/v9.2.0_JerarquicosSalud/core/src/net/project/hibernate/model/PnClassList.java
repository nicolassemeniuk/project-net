package net.project.hibernate.model;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnClassList generated by hbm2java
 */
@Entity
@Table(name = "PN_CLASS_LIST")
public class PnClassList implements java.io.Serializable {

	/** nullable persistent field */
	private PnClassListPK comp_id;

	/** nullable persistent field */
	private String listName;

	/** nullable persistent field */
	private Integer fieldCnt;

	/** nullable persistent field */
	private String listDesc;

	/** persistent field */
	private int isShared;

	/** persistent field */
	private int isAdmin;

	/** persistent field */
	private Integer ownerSpaceId;

	/** nullable persistent field */
	private Date crc;

	/** persistent field */
	private String recordStatus;

	private PnClass pnClass;

	private Set pnSpaceHasClassLists = new HashSet(0);

	private Set pnClassListFields = new HashSet(0);

	public PnClassList() {
	}

	public PnClassList(PnClassListPK comp_id, int isShared, int isAdmin, Integer ownerSpaceId, String recordStatus) {
		this.comp_id = comp_id;
		this.isShared = isShared;
		this.isAdmin = isAdmin;
		this.ownerSpaceId = ownerSpaceId;
		this.recordStatus = recordStatus;
	}

	public PnClassList(PnClassListPK comp_id, String listName, Integer fieldCnt, String listDesc, int isShared,
			int isAdmin, Integer ownerSpaceId, Date crc, String recordStatus, PnClass pnClass,
			Set pnSpaceHasClassLists, Set pnClassListFields) {
		this.comp_id = comp_id;
		this.listName = listName;
		this.fieldCnt = fieldCnt;
		this.listDesc = listDesc;
		this.isShared = isShared;
		this.isAdmin = isAdmin;
		this.ownerSpaceId = ownerSpaceId;
		this.crc = crc;
		this.recordStatus = recordStatus;
		this.pnClass = pnClass;
		this.pnSpaceHasClassLists = pnSpaceHasClassLists;
		this.pnClassListFields = pnClassListFields;
	}

	/** minimal constructor */
	public PnClassList(net.project.hibernate.model.PnClassListPK comp_id, int isShared, int isAdmin,
			Integer ownerSpaceId, String recordStatus, Set pnSpaceHasClassLists, Set pnClassListFields) {
		this.comp_id = comp_id;
		this.isShared = isShared;
		this.isAdmin = isAdmin;
		this.ownerSpaceId = ownerSpaceId;
		this.recordStatus = recordStatus;
		this.pnSpaceHasClassLists = pnSpaceHasClassLists;
		this.pnClassListFields = pnClassListFields;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "classId", column = @Column(name = "CLASS_ID", nullable = false, length = 20)),
			@AttributeOverride(name = "listId", column = @Column(name = "LIST_ID", nullable = false, length = 20)) })
	public PnClassListPK getComp_id() {
		return this.comp_id;
	}

	public void setComp_id(PnClassListPK comp_id) {
		this.comp_id = comp_id;
	}

	@Column(name = "LIST_NAME", length = 80)
	public String getListName() {
		return this.listName;
	}

	public void setListName(String listName) {
		this.listName = listName;
	}

	@Column(name = "FIELD_CNT", length = 8)
	public Integer getFieldCnt() {
		return this.fieldCnt;
	}

	public void setFieldCnt(Integer fieldCnt) {
		this.fieldCnt = fieldCnt;
	}

	@Column(name = "LIST_DESC", length = 500)
	public String getListDesc() {
		return this.listDesc;
	}

	public void setListDesc(String listDesc) {
		this.listDesc = listDesc;
	}

	@Column(name = "IS_SHARED", nullable = false, length = 1)
	public int getIsShared() {
		return this.isShared;
	}

	public void setIsShared(int isShared) {
		this.isShared = isShared;
	}

	@Column(name = "IS_ADMIN", nullable = false, length = 1)
	public int getIsAdmin() {
		return this.isAdmin;
	}

	public void setIsAdmin(int isAdmin) {
		this.isAdmin = isAdmin;
	}

	@Column(name = "OWNER_SPACE_ID", nullable = false, length = 20)
	public Integer getOwnerSpaceId() {
		return this.ownerSpaceId;
	}

	public void setOwnerSpaceId(Integer ownerSpaceId) {
		this.ownerSpaceId = ownerSpaceId;
	}

	@Column(name = "CRC", length = 7)
	public Date getCrc() {
		return this.crc;
	}

	public void setCrc(Date crc) {
		this.crc = crc;
	}

	@Column(name = "RECORD_STATUS", nullable = false, length = 1)
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnClass.class)
	@JoinColumn(name = "CLASS_ID", insertable = false, updatable = false)
	public PnClass getPnClass() {
		return this.pnClass;
	}

	public void setPnClass(PnClass pnClass) {
		this.pnClass = pnClass;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnClassList", targetEntity = PnSpaceHasClassList.class)
	@Transient
	public Set getPnSpaceHasClassLists() {
		return this.pnSpaceHasClassLists;
	}

	public void setPnSpaceHasClassLists(Set pnSpaceHasClassLists) {
		this.pnSpaceHasClassLists = pnSpaceHasClassLists;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnClassList", targetEntity = PnClassListField.class)
	@Transient
	public Set getPnClassListFields() {
		return this.pnClassListFields;
	}

	public void setPnClassListFields(Set pnClassListFields) {
		this.pnClassListFields = pnClassListFields;
	}

	public String toString() {
		return new ToStringBuilder(this).append("comp_id", getComp_id()).toString();
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if (!(other instanceof PnClassList))
			return false;
		PnClassList castOther = (PnClassList) other;
		return new EqualsBuilder().append(this.getComp_id(), castOther.getComp_id()).isEquals();
	}

	public int hashCode() {
		return new HashCodeBuilder().append(getComp_id()).toHashCode();
	}
}
