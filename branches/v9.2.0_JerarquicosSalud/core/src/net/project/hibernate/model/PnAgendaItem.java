/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.sql.Clob;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnAgendaItem generated by hbm2java
 */
@Entity
@Table(name = "PN_AGENDA_ITEM")
public class PnAgendaItem implements java.io.Serializable {

	private PnAgendaItemPK comp_id;

	private String itemName;

	private String itemDesc;

	private String timeAlloted;

	private Integer statusId;

	private Integer itemSequence;

	private String recordStatus;

	private Clob meetingNotesClob;

	private PnObject pnObject;

	private PnMeeting pnMeeting;

	private PnPerson pnPerson;

	public PnAgendaItem() {
	}

	public PnAgendaItem(PnAgendaItemPK comp_id, String itemName, Integer statusId, String recordStatus) {
		this.comp_id = comp_id;
		this.itemName = itemName;
		this.statusId = statusId;
		this.recordStatus = recordStatus;
	}

	public PnAgendaItem(PnAgendaItemPK comp_id, String itemName, String itemDesc, String timeAlloted, Integer statusId,
			Integer itemSequence, String recordStatus, Clob meetingNotesClob, PnObject pnObject, PnMeeting pnMeeting,
			PnPerson pnPerson) {
		this.comp_id = comp_id;
		this.itemName = itemName;
		this.itemDesc = itemDesc;
		this.timeAlloted = timeAlloted;
		this.statusId = statusId;
		this.itemSequence = itemSequence;
		this.recordStatus = recordStatus;
		this.meetingNotesClob = meetingNotesClob;
		this.pnObject = pnObject;
		this.pnMeeting = pnMeeting;
		this.pnPerson = pnPerson;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "meetingId", column = @Column(name = "MEETING_ID", nullable = false, length = 20)),
			@AttributeOverride(name = "agendaItemId", column = @Column(name = "AGENDA_ITEM_ID", nullable = false, length = 20)) })
	public PnAgendaItemPK getComp_id() {
		return this.comp_id;
	}

	public void setComp_id(PnAgendaItemPK comp_id) {
		this.comp_id = comp_id;
	}

	@Column(name = "ITEM_NAME", nullable = false, length = 80)
	public String getItemName() {
		return this.itemName;
	}

	public void setItemName(String itemName) {
		this.itemName = itemName;
	}

	@Column(name = "ITEM_DESC", length = 500)
	public String getItemDesc() {
		return this.itemDesc;
	}

	public void setItemDesc(String itemDesc) {
		this.itemDesc = itemDesc;
	}

	@Column(name = "TIME_ALLOTED", length = 80)
	public String getTimeAlloted() {
		return this.timeAlloted;
	}

	public void setTimeAlloted(String timeAlloted) {
		this.timeAlloted = timeAlloted;
	}

	@Column(name = "STATUS_ID", nullable = false, length = 20)
	public Integer getStatusId() {
		return this.statusId;
	}

	public void setStatusId(Integer statusId) {
		this.statusId = statusId;
	}

	@Column(name = "ITEM_SEQUENCE", length = 8)
	public Integer getItemSequence() {
		return this.itemSequence;
	}

	public void setItemSequence(Integer itemSequence) {
		this.itemSequence = itemSequence;
	}

	@Column(name = "RECORD_STATUS", nullable = false, length = 1)
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	@Column(name = "MEETING_NOTES_CLOB", length = 4000)
	public Clob getMeetingNotesClob() {
		return this.meetingNotesClob;
	}

	public void setMeetingNotesClob(Clob meetingNotesClob) {
		this.meetingNotesClob = meetingNotesClob;
	}

	//@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnObject.class)
	//@JoinColumn(name = "AGENDA_ITEM_ID", insertable = false, updatable = false)
	@Transient
	public PnObject getPnObject() {
		return this.pnObject;
	}

	public void setPnObject(PnObject pnObject) {
		this.pnObject = pnObject;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnMeeting.class)
	@JoinColumn(name = "MEETING_ID", insertable = false, updatable = false)
	public PnMeeting getPnMeeting() {
		return this.pnMeeting;
	}

	public void setPnMeeting(PnMeeting pnMeeting) {
		this.pnMeeting = pnMeeting;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnPerson.class)
	@JoinColumn(name = "OWNER_ID")
	public PnPerson getPnPerson() {
		return this.pnPerson;
	}

	public void setPnPerson(PnPerson pnPerson) {
		this.pnPerson = pnPerson;
	}

	public String toString() {
		return new ToStringBuilder(this).append("comp_id", getComp_id()).toString();
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if (!(other instanceof PnAgendaItem))
			return false;
		PnAgendaItem castOther = (PnAgendaItem) other;
		return new EqualsBuilder().append(this.getComp_id(), castOther.getComp_id()).isEquals();
	}

	public int hashCode() {
		return new HashCodeBuilder().append(getComp_id()).toHashCode();
	}

}
