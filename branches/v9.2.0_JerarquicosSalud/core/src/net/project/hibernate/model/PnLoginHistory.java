/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnLoginHistory generated by hbm2java
 */
@Entity
@Table(name = "PN_LOGIN_HISTORY")
public class PnLoginHistory implements java.io.Serializable {

	/** identifier field */
	private PnLoginHistoryPK comp_id;

	/** nullable persistent field */
	private String loginNameUsed;

	/** nullable persistent field */
	private PnPerson pnPerson;

	public PnLoginHistory() {
	}

	public PnLoginHistory(PnLoginHistoryPK comp_id) {
		this.comp_id = comp_id;
	}

	public PnLoginHistory(PnLoginHistoryPK comp_id, String loginNameUsed, PnPerson pnPerson) {
		this.comp_id = comp_id;
		this.loginNameUsed = loginNameUsed;
		this.pnPerson = pnPerson;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "personId", column = @Column(name = "PERSON_ID", nullable = false, length = 20)),
			@AttributeOverride(name = "loginDate", column = @Column(name = "LOGIN_DATE", nullable = false, length = 7)),
			@AttributeOverride(name = "loginConcurrency", column = @Column(name = "LOGIN_CONCURRENCY", nullable = false, length = 20)) })
	public PnLoginHistoryPK getComp_id() {
		return this.comp_id;
	}

	public void setComp_id(PnLoginHistoryPK comp_id) {
		this.comp_id = comp_id;
	}

	@Column(name = "LOGIN_NAME_USED", length = 80)
	public String getLoginNameUsed() {
		return this.loginNameUsed;
	}

	public void setLoginNameUsed(String loginNameUsed) {
		this.loginNameUsed = loginNameUsed;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnPerson.class)
	@JoinColumn(name = "PERSON_ID", insertable = false, updatable = false)
	public PnPerson getPnPerson() {
		return this.pnPerson;
	}

	public void setPnPerson(PnPerson pnPerson) {
		this.pnPerson = pnPerson;
	}

	public String toString() {
		return new ToStringBuilder(this).append("comp_id", getComp_id()).toString();
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if (!(other instanceof PnLoginHistory))
			return false;
		PnLoginHistory castOther = (PnLoginHistory) other;
		return new EqualsBuilder().append(this.getComp_id(), castOther.getComp_id()).isEquals();
	}

	public int hashCode() {
		return new HashCodeBuilder().append(getComp_id()).toHashCode();
	}
}
