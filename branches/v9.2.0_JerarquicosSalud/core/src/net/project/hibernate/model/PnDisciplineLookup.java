/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnDisciplineLookup generated by hbm2java
 */
@Entity
@Table(name = "PN_DISCIPLINE_LOOKUP")
public class PnDisciplineLookup implements java.io.Serializable {

	private Integer disciplineCode;

	/** persistent field */
	private String disciplineName;

	/** nullable persistent field */
	private String disciplineDescription;

	private Set pnPersonHasDisciplines = new HashSet(0);

	public PnDisciplineLookup() {
	}

	public PnDisciplineLookup(Integer disciplineCode, String disciplineName) {
		this.disciplineCode = disciplineCode;
		this.disciplineName = disciplineName;
	}

	public PnDisciplineLookup(Integer disciplineCode, String disciplineName, String disciplineDescription,
			Set pnPersonHasDisciplines) {
		this.disciplineCode = disciplineCode;
		this.disciplineName = disciplineName;
		this.disciplineDescription = disciplineDescription;
		this.pnPersonHasDisciplines = pnPersonHasDisciplines;
	}

	/** minimal constructor */
	public PnDisciplineLookup(Integer disciplineCode, String disciplineName, Set pnPersonHasDisciplines) {
		this.disciplineCode = disciplineCode;
		this.disciplineName = disciplineName;
		this.pnPersonHasDisciplines = pnPersonHasDisciplines;
	}

	@Id
	@Column(name = "DISCIPLINE_CODE", nullable = false)
	public Integer getDisciplineCode() {
		return this.disciplineCode;
	}

	public void setDisciplineCode(Integer disciplineCode) {
		this.disciplineCode = disciplineCode;
	}

	@Column(name = "DISCIPLINE_NAME", nullable = false, length = 30)
	public String getDisciplineName() {
		return this.disciplineName;
	}

	public void setDisciplineName(String disciplineName) {
		this.disciplineName = disciplineName;
	}

	@Column(name = "DISCIPLINE_DESCRIPTION", length = 80)
	public String getDisciplineDescription() {
		return this.disciplineDescription;
	}

	public void setDisciplineDescription(String disciplineDescription) {
		this.disciplineDescription = disciplineDescription;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnDisciplineLookup", targetEntity = PnPersonHasDiscipline.class)
	@Transient
	public Set getPnPersonHasDisciplines() {
		return this.pnPersonHasDisciplines;
	}

	public void setPnPersonHasDisciplines(Set pnPersonHasDisciplines) {
		this.pnPersonHasDisciplines = pnPersonHasDisciplines;
	}

	public String toString() {
		return new ToStringBuilder(this).append("disciplineCode", getDisciplineCode()).toString();
	}

}
