/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnWorkflowStepHasGroup generated by hbm2java
 */
@Entity
@Table(name = "PN_WORKFLOW_STEP_HAS_GROUP")
public class PnWorkflowStepHasGroup implements Serializable {

	private PnWorkflowStepHasGroupPK comp_id;

	private int isParticipant;

	private Integer createdById;

	private Date createdDatetime;

	private Integer modifiedById;

	private Date modifiedDatetime;

	private Date crc;

	private String recordStatus;

	private PnGroup pnGroup;

	private PnWorkflowStep pnWorkflowStep;

	private Set pnWfRuleAuthHasGroups = new HashSet(0);

	public PnWorkflowStepHasGroup() {
	}

	public PnWorkflowStepHasGroup(PnWorkflowStepHasGroupPK comp_id, int isParticipant, Integer createdById,
			Date createdDatetime, Date crc, String recordStatus) {
		this.comp_id = comp_id;
		this.isParticipant = isParticipant;
		this.createdById = createdById;
		this.createdDatetime = createdDatetime;
		this.crc = crc;
		this.recordStatus = recordStatus;
	}

	public PnWorkflowStepHasGroup(net.project.hibernate.model.PnWorkflowStepHasGroupPK comp_id, int isParticipant,
			Integer createdById, Date createdDatetime, Date crc, String recordStatus, Set pnWfRuleAuthHasGroups) {
		this.comp_id = comp_id;
		this.isParticipant = isParticipant;
		this.createdById = createdById;
		this.createdDatetime = createdDatetime;
		this.crc = crc;
		this.recordStatus = recordStatus;
		this.pnWfRuleAuthHasGroups = pnWfRuleAuthHasGroups;
	}

	public PnWorkflowStepHasGroup(PnWorkflowStepHasGroupPK comp_id, int isParticipant, Integer createdById,
			Date createdDatetime, Integer modifiedById, Date modifiedDatetime, Date crc, String recordStatus,
			PnGroup pnGroup, PnWorkflowStep pnWorkflowStep, Set pnWfRuleAuthHasGroups) {
		this.comp_id = comp_id;
		this.isParticipant = isParticipant;
		this.createdById = createdById;
		this.createdDatetime = createdDatetime;
		this.modifiedById = modifiedById;
		this.modifiedDatetime = modifiedDatetime;
		this.crc = crc;
		this.recordStatus = recordStatus;
		this.pnGroup = pnGroup;
		this.pnWorkflowStep = pnWorkflowStep;
		this.pnWfRuleAuthHasGroups = pnWfRuleAuthHasGroups;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "groupId", column = @Column(name = "GROUP_ID", nullable = false, length = 20)),
			@AttributeOverride(name = "stepId", column = @Column(name = "STEP_ID", nullable = false, length = 20)),
			@AttributeOverride(name = "workflowId", column = @Column(name = "WORKFLOW_ID", nullable = false, length = 20)) })
	public PnWorkflowStepHasGroupPK getComp_id() {
		return this.comp_id;
	}

	public void setComp_id(PnWorkflowStepHasGroupPK comp_id) {
		this.comp_id = comp_id;
	}

	@Column(name = "IS_PARTICIPANT", nullable = false, length = 1)
	public int getIsParticipant() {
		return this.isParticipant;
	}

	public void setIsParticipant(int isParticipant) {
		this.isParticipant = isParticipant;
	}

	@Column(name = "CREATED_BY_ID", nullable = false, length = 20)
	public Integer getCreatedById() {
		return this.createdById;
	}

	public void setCreatedById(Integer createdById) {
		this.createdById = createdById;
	}

	@Column(name = "CREATED_DATETIME", nullable = false, length = 7)
	public Date getCreatedDatetime() {
		return this.createdDatetime;
	}

	public void setCreatedDatetime(Date createdDatetime) {
		this.createdDatetime = createdDatetime;
	}

	@Column(name = "MODIFIED_BY_ID", length = 20)
	public Integer getModifiedById() {
		return this.modifiedById;
	}

	public void setModifiedById(Integer modifiedById) {
		this.modifiedById = modifiedById;
	}

	@Column(name = "MODIFIED_DATETIME", length = 7)
	public Date getModifiedDatetime() {
		return this.modifiedDatetime;
	}

	public void setModifiedDatetime(Date modifiedDatetime) {
		this.modifiedDatetime = modifiedDatetime;
	}

	@Column(name = "CRC", nullable = false, length = 7)
	public Date getCrc() {
		return this.crc;
	}

	public void setCrc(Date crc) {
		this.crc = crc;
	}

	@Column(name = "RECORD_STATUS", nullable = false, length = 1)
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnGroup.class)
	@JoinColumn(name = "GROUP_ID", insertable = false, updatable = false)
	public PnGroup getPnGroup() {
		return this.pnGroup;
	}

	public void setPnGroup(PnGroup pnGroup) {
		this.pnGroup = pnGroup;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnWorkflowStep.class)
	@JoinColumns( {
			@JoinColumn(name = "STEP_ID", referencedColumnName = "STEP_ID", insertable = false, updatable = false),
			@JoinColumn(name = "WORKFLOW_ID", referencedColumnName = "WORKFLOW_ID", insertable = false, updatable = false) })
	public PnWorkflowStep getPnWorkflowStep() {
		return this.pnWorkflowStep;
	}

	public void setPnWorkflowStep(PnWorkflowStep pnWorkflowStep) {
		this.pnWorkflowStep = pnWorkflowStep;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnWorkflowStepHasGroup", targetEntity = PnWfRuleAuthHasGroup.class)
	@Transient
	public Set getPnWfRuleAuthHasGroups() {
		return this.pnWfRuleAuthHasGroups;
	}

	public void setPnWfRuleAuthHasGroups(Set pnWfRuleAuthHasGroups) {
		this.pnWfRuleAuthHasGroups = pnWfRuleAuthHasGroups;
	}

	public String toString() {
		return new ToStringBuilder(this).append("comp_id", getComp_id()).toString();
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if (!(other instanceof PnWorkflowStepHasGroup))
			return false;
		PnWorkflowStepHasGroup castOther = (PnWorkflowStepHasGroup) other;
		return new EqualsBuilder().append(this.getComp_id(), castOther.getComp_id()).isEquals();
	}

	public int hashCode() {
		return new HashCodeBuilder().append(getComp_id()).toHashCode();
	}

}
