/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
*/
package net.project.hibernate.model;

import java.io.Serializable;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * PnPortfolioHasSpace generated by hbm2java
 */
@Entity
@Table(name="PN_PORTFOLIO_HAS_SPACE"
)
public class PnPortfolioHasSpace implements Serializable {


     private PnPortfolioHasSpacePK comp_id;
     private Integer isPrivate;
     private PnPortfolio pnPortfolio;

    public PnPortfolioHasSpace() {
    }

	
    public PnPortfolioHasSpace(PnPortfolioHasSpacePK comp_id) {
        this.comp_id = comp_id;
    }

    public PnPortfolioHasSpace(PnPortfolioHasSpacePK comp_id, Integer isPrivate, PnPortfolio pnPortfolio) {
       this.comp_id = comp_id;
       this.isPrivate = isPrivate;
       this.pnPortfolio = pnPortfolio;
    }
   
     @EmbeddedId
    @AttributeOverrides( {
        @AttributeOverride(name="portfolioId", column=@Column(name="PORTFOLIO_ID", nullable=false, length=20) ), 
        @AttributeOverride(name="spaceId", column=@Column(name="SPACE_ID", nullable=false, length=20) ) } )
    public PnPortfolioHasSpacePK getComp_id() {
        return this.comp_id;
    }
    
    public void setComp_id(PnPortfolioHasSpacePK comp_id) {
        this.comp_id = comp_id;
    }

    @Column(name="IS_PRIVATE", length=1)
    public Integer getIsPrivate() {
        return this.isPrivate;
    }
    
    public void setIsPrivate(Integer isPrivate) {
        this.isPrivate = isPrivate;
    }

@ManyToOne(fetch=FetchType.LAZY, targetEntity=PnPortfolio.class)
    @JoinColumn(name="PORTFOLIO_ID", insertable=false, updatable=false)
    public PnPortfolio getPnPortfolio() {
        return this.pnPortfolio;
    }
    
    public void setPnPortfolio(PnPortfolio pnPortfolio) {
        this.pnPortfolio = pnPortfolio;
    }

    public String toString() {
        return new ToStringBuilder(this)
            .append("comp_id", getComp_id())
            .toString();
    }

    public boolean equals(Object other) {
        if ( (this == other ) ) return true;
        if ( !(other instanceof PnPortfolioHasSpace) ) return false;
        PnPortfolioHasSpace castOther = (PnPortfolioHasSpace) other;
        return new EqualsBuilder()
            .append(this.getComp_id(), castOther.getComp_id())
            .isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder()
            .append(getComp_id())
            .toHashCode();
    }

}
