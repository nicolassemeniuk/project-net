/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnWikiPage generated by hbm2java
 */
@Entity
@Table(name = "PN_WIKI_PAGE")
public class PnWikiPage implements Serializable {

	private Integer wikiPageId;

	private String pageName;

	private String content;

	private PnWikiPage parentPageName;

	private Date editDate;

	private String recordStatus;

	private String commentText;

	private Date createdDate;

	private Integer accessLevel;

	private PnPerson editedBy;

	private PnObject ownerObjectId;

	private Set assignements = new HashSet(0);

	private PnPerson createdBy;

	public PnWikiPage() {
	}

	public PnWikiPage(Integer wikiPageId) {
		this.setWikiPageId(wikiPageId);
	}

	/**
	 * Constructor for required fields
	 * 
	 * @param wikiPageId
	 * @param pageName
	 * @param recordStatus
	 */
	public PnWikiPage(java.lang.Integer wikiPageId, java.lang.String pageName, java.lang.String recordStatus) {
		this.wikiPageId = wikiPageId;
		this.pageName = pageName;
		this.recordStatus = recordStatus;
	}

	public PnWikiPage(Integer wikiPageId, String pageName, String content, PnWikiPage parentPage, PnObject ownerObjectId) {
		this.setWikiPageId(wikiPageId);
		this.setPageName(pageName);
		this.setContent(content);
		this.setParentPageName(parentPage);
		this.setOwnerObjectId(ownerObjectId);
	}

	public PnWikiPage(Integer wikiPageId, String pageName, String content, Date editDate, Date createdDate,
			Integer accessLevel) {
		this.wikiPageId = wikiPageId;
		this.pageName = pageName;
		this.content = content;
		this.editDate = editDate;
		this.createdDate = createdDate;
		this.accessLevel = accessLevel;
	}

	public PnWikiPage(java.lang.Integer wikiPageId, java.lang.String pageName, java.lang.String content,
			PnWikiPage parentPageName, java.util.Date editDate, net.project.hibernate.model.PnPerson editedBy,
			net.project.hibernate.model.PnObject ownerObjectId) {
		this.setWikiPageId(wikiPageId);
		this.setPageName(pageName);
		this.setContent(content);
		this.setParentPageName(parentPageName);
		this.setEditDate(editDate);
		this.setEditedBy(editedBy);
		this.setOwnerObjectId(ownerObjectId);
	}

	public PnWikiPage(java.lang.Integer wikiPageId, java.lang.String pageName, java.lang.String content,
			PnWikiPage parentPageName, java.util.Date editDate, net.project.hibernate.model.PnPerson editedBy,
			net.project.hibernate.model.PnObject ownerObjectId, java.util.Date createdDate,
			net.project.hibernate.model.PnPerson createdBy) {
		this.setWikiPageId(wikiPageId);
		this.setPageName(pageName);
		this.setContent(content);
		this.setParentPageName(parentPageName);
		this.setEditDate(editDate);
		this.setEditedBy(editedBy);
		this.setOwnerObjectId(ownerObjectId);
		this.setCreatedDate(createdDate);
		this.setCreatedBy(createdBy);
	}

	public PnWikiPage(Integer wikiPageId, String pageName, String content, PnWikiPage parentPageName, Date editDate,
			String recordStatus, String commentText, Date createdDate, Integer accessLevel, PnPerson editedBy,
			PnObject ownerObjectId, Set assignements, PnPerson createdBy) {
		this.wikiPageId = wikiPageId;
		this.pageName = pageName;
		this.content = content;
		this.parentPageName = parentPageName;
		this.editDate = editDate;
		this.recordStatus = recordStatus;
		this.commentText = commentText;
		this.createdDate = createdDate;
		this.accessLevel = accessLevel;
		this.editedBy = editedBy;
		this.ownerObjectId = ownerObjectId;
		this.assignements = assignements;
		this.createdBy = createdBy;
	}

	/**
	 * Constructor for required fields
	 */
	public PnWikiPage(java.lang.Integer wikiPageId, java.lang.String pageName, java.lang.String recordStatus,
			java.lang.Integer parentWikiPageId, java.lang.String parentPageName) {
		this.wikiPageId = wikiPageId;
		this.pageName = pageName;
		this.recordStatus = recordStatus;
		PnWikiPage pnWikiPage = new PnWikiPage();
		pnWikiPage.wikiPageId = parentWikiPageId;
		pnWikiPage.pageName = parentPageName;
		this.setParentPageName(pnWikiPage);
	}
	
	/**
	 * Constructor for required fields
	 */
	public PnWikiPage(java.lang.Integer wikiPageId, java.lang.String pageName, java.lang.String editedBy, java.util.Date editDate, java.lang.String content){
		this.setWikiPageId(wikiPageId);
		this.setPageName(pageName);
		PnPerson pnPerson = new PnPerson();
		pnPerson.setDisplayName(editedBy);
		this.setEditedBy(pnPerson);
		this.setEditDate(editDate);
		this.setContent(content);
	}

	@Id
	@Column(name = "WIKI_PAGE_ID", nullable = false)
	public Integer getWikiPageId() {
		return this.wikiPageId;
	}

	public void setWikiPageId(Integer wikiPageId) {
		this.wikiPageId = wikiPageId;
	}

	@Column(name = "PAGE_NAME", nullable = false, length = 240)
	public String getPageName() {
		return this.pageName;
	}

	public void setPageName(String pageName) {
		this.pageName = pageName;
	}

	@Column(name = "CONTENT", nullable = false)
	public String getContent() {
		return this.content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnWikiPage.class)
	@JoinColumn(name = "PARENT_PAGE_ID")
	public PnWikiPage getParentPageName() {
		return this.parentPageName;
	}

	public void setParentPageName(PnWikiPage parentPageName) {
		this.parentPageName = parentPageName;
	}

	@Column(name = "EDIT_DATE", nullable = false)
	public Date getEditDate() {
		return this.editDate;
	}

	public void setEditDate(Date editDate) {
		this.editDate = editDate;
	}

	@Column(name = "RECORD_STATUS")
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	@Column(name = "COMMENT_TEXT")
	public String getCommentText() {
		return this.commentText;
	}

	public void setCommentText(String commentText) {
		this.commentText = commentText;
	}

	@Column(name = "CREATED_DATE", nullable = false)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "ACCESS_LEVEL", nullable = false)
	public Integer getAccessLevel() {
		return this.accessLevel;
	}

	public void setAccessLevel(Integer accessLevel) {
		this.accessLevel = accessLevel;
	}

	@ManyToOne(targetEntity = PnPerson.class)
	@JoinColumn(name = "EDITED_BY")
	public PnPerson getEditedBy() {
		return this.editedBy;
	}

	public void setEditedBy(PnPerson editedBy) {
		this.editedBy = editedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnObject.class)
	@JoinColumn(name = "OWNER_OBJECT_ID")
	public PnObject getOwnerObjectId() {
		return this.ownerObjectId;
	}

	public void setOwnerObjectId(PnObject ownerObjectId) {
		this.ownerObjectId = ownerObjectId;
	}

	@ManyToMany(fetch = FetchType.LAZY, targetEntity = PnWikiAssignment.class)
	public Set getAssignements() {
		return this.assignements;
	}

	public void setAssignements(Set assignements) {
		this.assignements = assignements;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnPerson.class)
	@JoinColumn(name = "CREATED_BY")
	public PnPerson getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(PnPerson createdBy) {
		this.createdBy = createdBy;
	}
	
	 /**This method is to use in wiki page for displaying blank comment text always.
     * @return the blank comment text
     */
	@Transient
    public String getBlankCommentText() {
        return "";
    }
    
    /**
     * @param comment
     */
    public void setBlankCommentText(String comment) {
        this.commentText = comment;
    }

	@Override
	public boolean equals(Object obj) {
		if (null == obj)
			return false;
		if (!(obj instanceof net.project.hibernate.model.PnWikiPage))
			return false;
		else {
			net.project.hibernate.model.PnWikiPage pnWikiPage = (net.project.hibernate.model.PnWikiPage) obj;
			if (null == this.getWikiPageId() || null == pnWikiPage.getWikiPageId())
				return false;
			else
				return (this.getWikiPageId().equals(pnWikiPage.getWikiPageId()));
		}
	}

	@Override
	public int hashCode() {
		return new HashCodeBuilder().append(getWikiPageId()).toHashCode();
	}

	public String toString() {
		return new ToStringBuilder(this).append("wikiPageId", getWikiPageId()).toString();
	}

}
