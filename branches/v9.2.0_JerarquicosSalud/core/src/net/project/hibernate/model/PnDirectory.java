/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnDirectory generated by hbm2java
 */
@Entity
@Table(name = "PN_DIRECTORY")
public class PnDirectory implements java.io.Serializable {

	/** identifier field */
	private Integer directoryId;

	/** nullable persistent field */
	private String directoryName;

	/** nullable persistent field */
	private String directoryDesc;

	/** nullable persistent field */
	private Integer displayClassId;

	/** nullable persistent field */
	private Integer directoryTypeId;

	/** nullable persistent field */
	private String directoryHost;

	/** nullable persistent field */
	private String directoryVendor;

	/** nullable persistent field */
	private String bindUsername;

	/** nullable persistent field */
	private String directoryUrl;

	/** nullable persistent field */
	private String bindPassword;

	/** nullable persistent field */
	private String searchRoot;

	/** nullable persistent field */
	private String directoryPort;

	/** nullable persistent field */
	private String directorySecurePort;

	/** nullable persistent field */
	private String directoryCipherKey;

	/** nullable persistent field */
	private Integer connectSecure;

	/** persistent field */
	private int isDefault;

	/** persistent field */
	private String recordStatus;

	/** persistent field */
	private Set pnSpaceHasDirectories = new HashSet(0);

	/** persistent field */
	private Set pnDirectoryFields = new HashSet(0);

	/** persistent field */
	private Set pnSpaceHasDirectoryFields = new HashSet(0);

	private Set pnDirectoryHasPersons = new HashSet(0);

	public PnDirectory() {
	}

	public PnDirectory(Integer directoryId, int isDefault, String recordStatus) {
		this.directoryId = directoryId;
		this.isDefault = isDefault;
		this.recordStatus = recordStatus;
	}

	public PnDirectory(Integer directoryId, int isDefault) {
		this.directoryId = directoryId;
		this.isDefault = isDefault;
	}

	public PnDirectory(Integer directoryId, String directoryName, String directoryDesc, Integer displayClassId,
			Integer directoryTypeId, String directoryHost, String directoryVendor, String bindUsername,
			String directoryUrl, String bindPassword, String searchRoot, String directoryPort,
			String directorySecurePort, String directoryCipherKey, Integer connectSecure, int isDefault,
			String recordStatus, Set pnSpaceHasDirectories, Set pnDirectoryFields, Set pnSpaceHasDirectoryFields,
			Set pnDirectoryHasPersons) {
		this.directoryId = directoryId;
		this.directoryName = directoryName;
		this.directoryDesc = directoryDesc;
		this.displayClassId = displayClassId;
		this.directoryTypeId = directoryTypeId;
		this.directoryHost = directoryHost;
		this.directoryVendor = directoryVendor;
		this.bindUsername = bindUsername;
		this.directoryUrl = directoryUrl;
		this.bindPassword = bindPassword;
		this.searchRoot = searchRoot;
		this.directoryPort = directoryPort;
		this.directorySecurePort = directorySecurePort;
		this.directoryCipherKey = directoryCipherKey;
		this.connectSecure = connectSecure;
		this.isDefault = isDefault;
		this.recordStatus = recordStatus;
		this.pnSpaceHasDirectories = pnSpaceHasDirectories;
		this.pnDirectoryFields = pnDirectoryFields;
		this.pnSpaceHasDirectoryFields = pnSpaceHasDirectoryFields;
		this.pnDirectoryHasPersons = pnDirectoryHasPersons;
	}

	@Id
	@Column(name = "DIRECTORY_ID", nullable = false)
	public Integer getDirectoryId() {
		return this.directoryId;
	}

	public void setDirectoryId(Integer directoryId) {
		this.directoryId = directoryId;
	}

	@Column(name = "DIRECTORY_NAME", length = 80)
	public String getDirectoryName() {
		return this.directoryName;
	}

	public void setDirectoryName(String directoryName) {
		this.directoryName = directoryName;
	}

	@Column(name = "DIRECTORY_DESC", length = 500)
	public String getDirectoryDesc() {
		return this.directoryDesc;
	}

	public void setDirectoryDesc(String directoryDesc) {
		this.directoryDesc = directoryDesc;
	}

	@Column(name = "DISPLAY_CLASS_ID", length = 20)
	public Integer getDisplayClassId() {
		return this.displayClassId;
	}

	public void setDisplayClassId(Integer displayClassId) {
		this.displayClassId = displayClassId;
	}

	@Column(name = "DIRECTORY_TYPE_ID", length = 20)
	public Integer getDirectoryTypeId() {
		return this.directoryTypeId;
	}

	public void setDirectoryTypeId(Integer directoryTypeId) {
		this.directoryTypeId = directoryTypeId;
	}

	@Column(name = "DIRECTORY_HOST", length = 240)
	public String getDirectoryHost() {
		return this.directoryHost;
	}

	public void setDirectoryHost(String directoryHost) {
		this.directoryHost = directoryHost;
	}

	@Column(name = "DIRECTORY_VENDOR", length = 80)
	public String getDirectoryVendor() {
		return this.directoryVendor;
	}

	public void setDirectoryVendor(String directoryVendor) {
		this.directoryVendor = directoryVendor;
	}

	@Column(name = "BIND_USERNAME", length = 80)
	public String getBindUsername() {
		return this.bindUsername;
	}

	public void setBindUsername(String bindUsername) {
		this.bindUsername = bindUsername;
	}

	@Column(name = "DIRECTORY_URL", length = 240)
	public String getDirectoryUrl() {
		return this.directoryUrl;
	}

	public void setDirectoryUrl(String directoryUrl) {
		this.directoryUrl = directoryUrl;
	}

	@Column(name = "BIND_PASSWORD", length = 80)
	public String getBindPassword() {
		return this.bindPassword;
	}

	public void setBindPassword(String bindPassword) {
		this.bindPassword = bindPassword;
	}

	@Column(name = "SEARCH_ROOT", length = 240)
	public String getSearchRoot() {
		return this.searchRoot;
	}

	public void setSearchRoot(String searchRoot) {
		this.searchRoot = searchRoot;
	}

	@Column(name = "DIRECTORY_PORT", length = 80)
	public String getDirectoryPort() {
		return this.directoryPort;
	}

	public void setDirectoryPort(String directoryPort) {
		this.directoryPort = directoryPort;
	}

	@Column(name = "DIRECTORY_SECURE_PORT", length = 80)
	public String getDirectorySecurePort() {
		return this.directorySecurePort;
	}

	public void setDirectorySecurePort(String directorySecurePort) {
		this.directorySecurePort = directorySecurePort;
	}

	@Column(name = "DIRECTORY_CIPHER_KEY", length = 240)
	public String getDirectoryCipherKey() {
		return this.directoryCipherKey;
	}

	public void setDirectoryCipherKey(String directoryCipherKey) {
		this.directoryCipherKey = directoryCipherKey;
	}

	@Column(name = "CONNECT_SECURE", length = 1)
	public Integer getConnectSecure() {
		return this.connectSecure;
	}

	public void setConnectSecure(Integer connectSecure) {
		this.connectSecure = connectSecure;
	}

	@Column(name = "IS_DEFAULT", nullable = false, length = 1)
	public int getIsDefault() {
		return this.isDefault;
	}

	public void setIsDefault(int isDefault) {
		this.isDefault = isDefault;
	}

	@Column(name = "RECORD_STATUS", nullable = false, length = 1)
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnDirectory", targetEntity = PnSpaceHasDirectory.class)
	@Transient
	public Set getPnSpaceHasDirectories() {
		return this.pnSpaceHasDirectories;
	}

	public void setPnSpaceHasDirectories(Set pnSpaceHasDirectories) {
		this.pnSpaceHasDirectories = pnSpaceHasDirectories;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnDirectory", targetEntity = PnDirectoryField.class)
	@Transient
	public Set getPnDirectoryFields() {
		return this.pnDirectoryFields;
	}

	public void setPnDirectoryFields(Set pnDirectoryFields) {
		this.pnDirectoryFields = pnDirectoryFields;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnDirectory", targetEntity = PnSpaceHasDirectoryField.class)
	@Transient
	public Set getPnSpaceHasDirectoryFields() {
		return this.pnSpaceHasDirectoryFields;
	}

	public void setPnSpaceHasDirectoryFields(Set pnSpaceHasDirectoryFields) {
		this.pnSpaceHasDirectoryFields = pnSpaceHasDirectoryFields;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnDirectory", targetEntity = PnDirectoryHasPerson.class)
	@Transient
	public Set getPnDirectoryHasPersons() {
		return this.pnDirectoryHasPersons;
	}

	public void setPnDirectoryHasPersons(Set pnDirectoryHasPersons) {
		this.pnDirectoryHasPersons = pnDirectoryHasPersons;
	}

	public String toString() {
		return new ToStringBuilder(this).append("directoryId", getDirectoryId()).toString();
	}

}
