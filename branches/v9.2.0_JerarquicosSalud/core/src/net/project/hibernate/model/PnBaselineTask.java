package net.project.hibernate.model;
// Generated Jun 13, 2009 11:41:49 PM by Hibernate Tools 3.2.4.GA


import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnBaselineTask generated by hbm2java
 */
@Entity
@Table(name="PN_BASELINE_TASK"
)
public class PnBaselineTask  implements java.io.Serializable {

     private BigDecimal baselineId;
     
     private String baselineName;
     
     private Date baselineCreateDate;
     
     private BigDecimal taskId;
     
     private BigDecimal taskVersionId;
     
     private String taskName;
     
     private String taskDesc;
     
     private String taskType;
     
     private BigDecimal duration;
     
     private BigDecimal work;
     
     private BigDecimal workUnits;
     
     private BigDecimal workComplete;
     
     private Date dateStart;
     
     private BigDecimal workCompleteUnits;
     
     private Date dateFinish;
     
     private Date actualStart;
     
     private Date actualFinish;
     
     private Integer priority;
     
     private Integer percentComplete;
     
     private Date dateCreated;
     
     private Date dateModified;
     
     private BigDecimal modifiedBy;
     
     private BigDecimal durationUnits;
     
     private BigDecimal parentTaskId;
     
     private String recordStatus;
     
     private BigDecimal criticalPath;
     
     private BigDecimal seq;
     
     private Integer ignoreTimesForDates;
     
     private Integer isMilestone;
     
     private Date earlyStart;
     
     private Date earlyFinish;
     
     private Date lateStart;
     
     private Date lateFinish;
     
     private BigDecimal workPercentComplete;
     
     private BigDecimal legacyFlag;
     
     private String constraintType;
     
     private Date constraintDate;
     
     private Date deadline;
     
     private BigDecimal parentTaskVersionId;
     
     private BigDecimal planVersionId;
     
     private BigDecimal calculationTypeId;

    public PnBaselineTask() {
    }

    public PnBaselineTask(BigDecimal baselineId, String baselineName, Date baselineCreateDate, BigDecimal taskId, BigDecimal taskVersionId, String taskName, String taskDesc, String taskType, BigDecimal duration, BigDecimal work, BigDecimal workUnits, BigDecimal workComplete, Date dateStart, BigDecimal workCompleteUnits, Date dateFinish, Date actualStart, Date actualFinish, Integer priority, Integer percentComplete, Date dateCreated, Date dateModified, BigDecimal modifiedBy, BigDecimal durationUnits, BigDecimal parentTaskId, String recordStatus, BigDecimal criticalPath, BigDecimal seq, Integer ignoreTimesForDates, Integer isMilestone, Date earlyStart, Date earlyFinish, Date lateStart, Date lateFinish, BigDecimal workPercentComplete, BigDecimal legacyFlag, String constraintType, Date constraintDate, Date deadline, BigDecimal parentTaskVersionId, BigDecimal planVersionId, BigDecimal calculationTypeId) {
       this.baselineId = baselineId;
       this.baselineName = baselineName;
       this.baselineCreateDate = baselineCreateDate;
       this.taskId = taskId;
       this.taskVersionId = taskVersionId;
       this.taskName = taskName;
       this.taskDesc = taskDesc;
       this.taskType = taskType;
       this.duration = duration;
       this.work = work;
       this.workUnits = workUnits;
       this.workComplete = workComplete;
       this.dateStart = dateStart;
       this.workCompleteUnits = workCompleteUnits;
       this.dateFinish = dateFinish;
       this.actualStart = actualStart;
       this.actualFinish = actualFinish;
       this.priority = priority;
       this.percentComplete = percentComplete;
       this.dateCreated = dateCreated;
       this.dateModified = dateModified;
       this.modifiedBy = modifiedBy;
       this.durationUnits = durationUnits;
       this.parentTaskId = parentTaskId;
       this.recordStatus = recordStatus;
       this.criticalPath = criticalPath;
       this.seq = seq;
       this.ignoreTimesForDates = ignoreTimesForDates;
       this.isMilestone = isMilestone;
       this.earlyStart = earlyStart;
       this.earlyFinish = earlyFinish;
       this.lateStart = lateStart;
       this.lateFinish = lateFinish;
       this.workPercentComplete = workPercentComplete;
       this.legacyFlag = legacyFlag;
       this.constraintType = constraintType;
       this.constraintDate = constraintDate;
       this.deadline = deadline;
       this.parentTaskVersionId = parentTaskVersionId;
       this.planVersionId = planVersionId;
       this.calculationTypeId = calculationTypeId;
    }
   

    
    @Column(name="BASELINE_ID", nullable=false, length=20)
    public BigDecimal getBaselineId() {
        return this.baselineId;
    }
    
    public void setBaselineId(BigDecimal baselineId) {
        this.baselineId = baselineId;
    }

    
    @Column(name="BASELINE_NAME", nullable=false)
    public String getBaselineName() {
        return this.baselineName;
    }
    
    public void setBaselineName(String baselineName) {
        this.baselineName = baselineName;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="BASELINE_CREATE_DATE", nullable=false, length=7)
    public Date getBaselineCreateDate() {
        return this.baselineCreateDate;
    }
    
    public void setBaselineCreateDate(Date baselineCreateDate) {
        this.baselineCreateDate = baselineCreateDate;
    }

    
    @Column(name="TASK_ID", nullable=false, length=20)
    public BigDecimal getTaskId() {
        return this.taskId;
    }
    
    public void setTaskId(BigDecimal taskId) {
        this.taskId = taskId;
    }

    
    @Column(name="TASK_VERSION_ID", nullable=false, length=20)
    public BigDecimal getTaskVersionId() {
        return this.taskVersionId;
    }
    
    public void setTaskVersionId(BigDecimal taskVersionId) {
        this.taskVersionId = taskVersionId;
    }

    
    @Column(name="TASK_NAME", nullable=false)
    public String getTaskName() {
        return this.taskName;
    }
    
    public void setTaskName(String taskName) {
        this.taskName = taskName;
    }

    
    @Column(name="TASK_DESC", nullable=false, length=4000)
    public String getTaskDesc() {
        return this.taskDesc;
    }
    
    public void setTaskDesc(String taskDesc) {
        this.taskDesc = taskDesc;
    }

    
    @Column(name="TASK_TYPE", nullable=false, length=80)
    public String getTaskType() {
        return this.taskType;
    }
    
    public void setTaskType(String taskType) {
        this.taskType = taskType;
    }

    
    @Column(name="DURATION", nullable=false, length=22)
    public BigDecimal getDuration() {
        return this.duration;
    }
    
    public void setDuration(BigDecimal duration) {
        this.duration = duration;
    }

    
    @Column(name="WORK", nullable=false, length=22)
    public BigDecimal getWork() {
        return this.work;
    }
    
    public void setWork(BigDecimal work) {
        this.work = work;
    }

    
    @Column(name="WORK_UNITS", nullable=false, length=20)
    public BigDecimal getWorkUnits() {
        return this.workUnits;
    }
    
    public void setWorkUnits(BigDecimal workUnits) {
        this.workUnits = workUnits;
    }

    
    @Column(name="WORK_COMPLETE", nullable=false, length=22)
    public BigDecimal getWorkComplete() {
        return this.workComplete;
    }
    
    public void setWorkComplete(BigDecimal workComplete) {
        this.workComplete = workComplete;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DATE_START", nullable=false, length=7)
    public Date getDateStart() {
        return this.dateStart;
    }
    
    public void setDateStart(Date dateStart) {
        this.dateStart = dateStart;
    }

    
    @Column(name="WORK_COMPLETE_UNITS", nullable=false, length=20)
    public BigDecimal getWorkCompleteUnits() {
        return this.workCompleteUnits;
    }
    
    public void setWorkCompleteUnits(BigDecimal workCompleteUnits) {
        this.workCompleteUnits = workCompleteUnits;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DATE_FINISH", nullable=false, length=7)
    public Date getDateFinish() {
        return this.dateFinish;
    }
    
    public void setDateFinish(Date dateFinish) {
        this.dateFinish = dateFinish;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="ACTUAL_START", nullable=false, length=7)
    public Date getActualStart() {
        return this.actualStart;
    }
    
    public void setActualStart(Date actualStart) {
        this.actualStart = actualStart;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="ACTUAL_FINISH", nullable=false, length=7)
    public Date getActualFinish() {
        return this.actualFinish;
    }
    
    public void setActualFinish(Date actualFinish) {
        this.actualFinish = actualFinish;
    }

    
    @Column(name="PRIORITY", nullable=false, length=6)
    public Integer getPriority() {
        return this.priority;
    }
    
    public void setPriority(Integer priority) {
        this.priority = priority;
    }

    
    @Column(name="PERCENT_COMPLETE", nullable=false, length=6)
    public Integer getPercentComplete() {
        return this.percentComplete;
    }
    
    public void setPercentComplete(Integer percentComplete) {
        this.percentComplete = percentComplete;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DATE_CREATED", nullable=false, length=7)
    public Date getDateCreated() {
        return this.dateCreated;
    }
    
    public void setDateCreated(Date dateCreated) {
        this.dateCreated = dateCreated;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DATE_MODIFIED", nullable=false, length=7)
    public Date getDateModified() {
        return this.dateModified;
    }
    
    public void setDateModified(Date dateModified) {
        this.dateModified = dateModified;
    }

    
    @Column(name="MODIFIED_BY", nullable=false, length=20)
    public BigDecimal getModifiedBy() {
        return this.modifiedBy;
    }
    
    public void setModifiedBy(BigDecimal modifiedBy) {
        this.modifiedBy = modifiedBy;
    }

    
    @Column(name="DURATION_UNITS", nullable=false, length=20)
    public BigDecimal getDurationUnits() {
        return this.durationUnits;
    }
    
    public void setDurationUnits(BigDecimal durationUnits) {
        this.durationUnits = durationUnits;
    }

    
    @Column(name="PARENT_TASK_ID", nullable=false, length=20)
    public BigDecimal getParentTaskId() {
        return this.parentTaskId;
    }
    
    public void setParentTaskId(BigDecimal parentTaskId) {
        this.parentTaskId = parentTaskId;
    }

    
    @Column(name="RECORD_STATUS", nullable=false, length=1)
    public String getRecordStatus() {
        return this.recordStatus;
    }
    
    public void setRecordStatus(String recordStatus) {
        this.recordStatus = recordStatus;
    }

    
    @Column(name="CRITICAL_PATH", nullable=false, length=22)
    public BigDecimal getCriticalPath() {
        return this.criticalPath;
    }
    
    public void setCriticalPath(BigDecimal criticalPath) {
        this.criticalPath = criticalPath;
    }

    
    @Column(name="SEQ", nullable=false, length=22)
    public BigDecimal getSeq() {
        return this.seq;
    }
    
    public void setSeq(BigDecimal seq) {
        this.seq = seq;
    }

    
    @Column(name="IGNORE_TIMES_FOR_DATES", nullable=false, length=1)
    public Integer getIgnoreTimesForDates() {
        return this.ignoreTimesForDates;
    }
    
    public void setIgnoreTimesForDates(Integer ignoreTimesForDates) {
        this.ignoreTimesForDates = ignoreTimesForDates;
    }

    
    @Column(name="IS_MILESTONE", nullable=false, length=1)
    public Integer getIsMilestone() {
        return this.isMilestone;
    }
    
    public void setIsMilestone(Integer isMilestone) {
        this.isMilestone = isMilestone;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="EARLY_START", nullable=false, length=7)
    public Date getEarlyStart() {
        return this.earlyStart;
    }
    
    public void setEarlyStart(Date earlyStart) {
        this.earlyStart = earlyStart;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="EARLY_FINISH", nullable=false, length=7)
    public Date getEarlyFinish() {
        return this.earlyFinish;
    }
    
    public void setEarlyFinish(Date earlyFinish) {
        this.earlyFinish = earlyFinish;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="LATE_START", nullable=false, length=7)
    public Date getLateStart() {
        return this.lateStart;
    }
    
    public void setLateStart(Date lateStart) {
        this.lateStart = lateStart;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="LATE_FINISH", nullable=false, length=7)
    public Date getLateFinish() {
        return this.lateFinish;
    }
    
    public void setLateFinish(Date lateFinish) {
        this.lateFinish = lateFinish;
    }

    
    @Column(name="WORK_PERCENT_COMPLETE", nullable=false, length=22)
    public BigDecimal getWorkPercentComplete() {
        return this.workPercentComplete;
    }
    
    public void setWorkPercentComplete(BigDecimal workPercentComplete) {
        this.workPercentComplete = workPercentComplete;
    }

    
    @Column(name="LEGACY_FLAG", nullable=false, length=22)
    public BigDecimal getLegacyFlag() {
        return this.legacyFlag;
    }
    
    public void setLegacyFlag(BigDecimal legacyFlag) {
        this.legacyFlag = legacyFlag;
    }

    
    @Column(name="CONSTRAINT_TYPE", nullable=false, length=10)
    public String getConstraintType() {
        return this.constraintType;
    }
    
    public void setConstraintType(String constraintType) {
        this.constraintType = constraintType;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="CONSTRAINT_DATE", nullable=false, length=7)
    public Date getConstraintDate() {
        return this.constraintDate;
    }
    
    public void setConstraintDate(Date constraintDate) {
        this.constraintDate = constraintDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DEADLINE", nullable=false, length=7)
    public Date getDeadline() {
        return this.deadline;
    }
    
    public void setDeadline(Date deadline) {
        this.deadline = deadline;
    }

    
    @Column(name="PARENT_TASK_VERSION_ID", nullable=false, length=20)
    public BigDecimal getParentTaskVersionId() {
        return this.parentTaskVersionId;
    }
    
    public void setParentTaskVersionId(BigDecimal parentTaskVersionId) {
        this.parentTaskVersionId = parentTaskVersionId;
    }

    
    @Column(name="PLAN_VERSION_ID", nullable=false, length=20)
    public BigDecimal getPlanVersionId() {
        return this.planVersionId;
    }
    
    public void setPlanVersionId(BigDecimal planVersionId) {
        this.planVersionId = planVersionId;
    }

    
    @Column(name="CALCULATION_TYPE_ID", nullable=false, length=20)
    public BigDecimal getCalculationTypeId() {
        return this.calculationTypeId;
    }
    
    public void setCalculationTypeId(BigDecimal calculationTypeId) {
        this.calculationTypeId = calculationTypeId;
    }

    public String toString() {
        return new ToStringBuilder(this)
            .append("baselineId", getBaselineId())
            .append("baselineName", getBaselineName())
            .append("baselineCreateDate", getBaselineCreateDate())
            .append("taskId", getTaskId())
            .append("taskVersionId", getTaskVersionId())
            .append("taskName", getTaskName())
            .append("taskDesc", getTaskDesc())
            .append("taskType", getTaskType())
            .append("duration", getDuration())
            .append("work", getWork())
            .append("workUnits", getWorkUnits())
            .append("workComplete", getWorkComplete())
            .append("dateStart", getDateStart())
            .append("workCompleteUnits", getWorkCompleteUnits())
            .append("dateFinish", getDateFinish())
            .append("actualStart", getActualStart())
            .append("actualFinish", getActualFinish())
            .append("priority", getPriority())
            .append("percentComplete", getPercentComplete())
            .append("dateCreated", getDateCreated())
            .append("dateModified", getDateModified())
            .append("modifiedBy", getModifiedBy())
            .append("durationUnits", getDurationUnits())
            .append("parentTaskId", getParentTaskId())
            .append("recordStatus", getRecordStatus())
            .append("criticalPath", getCriticalPath())
            .append("seq", getSeq())
            .append("ignoreTimesForDates", getIgnoreTimesForDates())
            .append("isMilestone", getIsMilestone())
            .append("earlyStart", getEarlyStart())
            .append("earlyFinish", getEarlyFinish())
            .append("lateStart", getLateStart())
            .append("lateFinish", getLateFinish())
            .append("workPercentComplete", getWorkPercentComplete())
            .append("legacyFlag", getLegacyFlag())
            .append("constraintType", getConstraintType())
            .append("constraintDate", getConstraintDate())
            .append("deadline", getDeadline())
            .append("parentTaskVersionId", getParentTaskVersionId())
            .append("planVersionId", getPlanVersionId())
            .append("calculationTypeId", getCalculationTypeId())
            .toString();
    }

}


