/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnDocType generated by hbm2java
 */
@Entity
@Table(name = "PN_DOC_TYPE")
public class PnDocType implements java.io.Serializable {

	/** identifier field */
	private Integer docTypeId;

	/** nullable persistent field */
	private Integer propertySheetClassId;

	/** nullable persistent field */
	private String typeName;

	/** nullable persistent field */
	private String typeDescription;

	/** nullable persistent field */
	private String recordStatus;

	/** persistent field */
	private Set pnDocuments = new HashSet(0);

	public PnDocType() {
	}

	public PnDocType(Integer docTypeId) {
		this.docTypeId = docTypeId;
	}

	public PnDocType(Integer docTypeId, Integer propertySheetClassId, String typeName, String typeDescription,
			String recordStatus, Set pnDocuments) {
		this.docTypeId = docTypeId;
		this.propertySheetClassId = propertySheetClassId;
		this.typeName = typeName;
		this.typeDescription = typeDescription;
		this.recordStatus = recordStatus;
		this.pnDocuments = pnDocuments;
	}

	/** minimal constructor */
	public PnDocType(Integer docTypeId, Set pnDocuments) {
		this.docTypeId = docTypeId;
		this.pnDocuments = pnDocuments;
	}

	@Id
	@Column(name = "DOC_TYPE_ID", nullable = false)
	public Integer getDocTypeId() {
		return this.docTypeId;
	}

	public void setDocTypeId(Integer docTypeId) {
		this.docTypeId = docTypeId;
	}

	@Column(name = "PROPERTY_SHEET_CLASS_ID", length = 20)
	public Integer getPropertySheetClassId() {
		return this.propertySheetClassId;
	}

	public void setPropertySheetClassId(Integer propertySheetClassId) {
		this.propertySheetClassId = propertySheetClassId;
	}

	@Column(name = "TYPE_NAME", length = 80)
	public String getTypeName() {
		return this.typeName;
	}

	public void setTypeName(String typeName) {
		this.typeName = typeName;
	}

	@Column(name = "TYPE_DESCRIPTION", length = 500)
	public String getTypeDescription() {
		return this.typeDescription;
	}

	public void setTypeDescription(String typeDescription) {
		this.typeDescription = typeDescription;
	}

	@Column(name = "RECORD_STATUS", length = 1)
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnDocType", targetEntity = PnDocument.class)
	@Transient
	public Set getPnDocuments() {
		return this.pnDocuments;
	}

	public void setPnDocuments(Set pnDocuments) {
		this.pnDocuments = pnDocuments;
	}

	public String toString() {
		return new ToStringBuilder(this).append("docTypeId", getDocTypeId()).toString();
	}

}
