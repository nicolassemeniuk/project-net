/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
*/
package net.project.hibernate.model;

import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Clob;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnUserDomainView generated by hbm2java
 */
@Entity
@Table(name="PN_USER_DOMAIN_VIEW"
)
public class PnUserDomainView implements Serializable {


     private BigDecimal domainId;
     private String name;
     private String description;
     private BigDecimal directoryProviderTypeId;
     private String directoryProviderTypeName;
     private String recordStatus;
     private BigDecimal userCount;
     private Clob registrationInstructionsClob;
     private Integer isVerificationRequired;
     private Integer supportsCreditCardPurchases;

    public PnUserDomainView() {
    }

    public PnUserDomainView(BigDecimal domainId, String name, String description, BigDecimal directoryProviderTypeId, String directoryProviderTypeName, String recordStatus, BigDecimal userCount, Clob registrationInstructionsClob, Integer isVerificationRequired, Integer supportsCreditCardPurchases) {
       this.domainId = domainId;
       this.name = name;
       this.description = description;
       this.directoryProviderTypeId = directoryProviderTypeId;
       this.directoryProviderTypeName = directoryProviderTypeName;
       this.recordStatus = recordStatus;
       this.userCount = userCount;
       this.registrationInstructionsClob = registrationInstructionsClob;
       this.isVerificationRequired = isVerificationRequired;
       this.supportsCreditCardPurchases = supportsCreditCardPurchases;
    }
   

    @Id
    @Column(name="DOMAIN_ID", nullable=false, length=20)
    public BigDecimal getDomainId() {
        return this.domainId;
    }
    
    public void setDomainId(BigDecimal domainId) {
        this.domainId = domainId;
    }

    
    @Column(name="NAME", nullable=false, length=80)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="DESCRIPTION", nullable=false, length=240)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="DIRECTORY_PROVIDER_TYPE_ID", nullable=false, length=20)
    public BigDecimal getDirectoryProviderTypeId() {
        return this.directoryProviderTypeId;
    }
    
    public void setDirectoryProviderTypeId(BigDecimal directoryProviderTypeId) {
        this.directoryProviderTypeId = directoryProviderTypeId;
    }

    
    @Column(name="DIRECTORY_PROVIDER_TYPE_NAME", nullable=false, length=80)
    public String getDirectoryProviderTypeName() {
        return this.directoryProviderTypeName;
    }
    
    public void setDirectoryProviderTypeName(String directoryProviderTypeName) {
        this.directoryProviderTypeName = directoryProviderTypeName;
    }

    
    @Column(name="RECORD_STATUS", nullable=false, length=1)
    public String getRecordStatus() {
        return this.recordStatus;
    }
    
    public void setRecordStatus(String recordStatus) {
        this.recordStatus = recordStatus;
    }

    
    @Column(name="USER_COUNT", nullable=false, length=22)
    public BigDecimal getUserCount() {
        return this.userCount;
    }
    
    public void setUserCount(BigDecimal userCount) {
        this.userCount = userCount;
    }

    
    @Column(name="REGISTRATION_INSTRUCTIONS_CLOB", nullable=false, length=4000)
    public Clob getRegistrationInstructionsClob() {
        return this.registrationInstructionsClob;
    }
    
    public void setRegistrationInstructionsClob(Clob registrationInstructionsClob) {
        this.registrationInstructionsClob = registrationInstructionsClob;
    }

    
    @Column(name="IS_VERIFICATION_REQUIRED", nullable=false, length=1)
    public Integer getIsVerificationRequired() {
        return this.isVerificationRequired;
    }
    
    public void setIsVerificationRequired(Integer isVerificationRequired) {
        this.isVerificationRequired = isVerificationRequired;
    }

    
    @Column(name="SUPPORTS_CREDIT_CARD_PURCHASES", nullable=false, length=1)
    public Integer getSupportsCreditCardPurchases() {
        return this.supportsCreditCardPurchases;
    }
    
    public void setSupportsCreditCardPurchases(Integer supportsCreditCardPurchases) {
        this.supportsCreditCardPurchases = supportsCreditCardPurchases;
    }

    public String toString() {
        return new ToStringBuilder(this)
            .append("domainId", getDomainId())
            .append("name", getName())
            .append("description", getDescription())
            .append("directoryProviderTypeId", getDirectoryProviderTypeId())
            .append("directoryProviderTypeName", getDirectoryProviderTypeName())
            .append("recordStatus", getRecordStatus())
            .append("userCount", getUserCount())
            .append("registrationInstructionsClob", getRegistrationInstructionsClob())
            .append("isVerificationRequired", getIsVerificationRequired())
            .append("supportsCreditCardPurchases", getSupportsCreditCardPurchases())
            .toString();
    }

}
