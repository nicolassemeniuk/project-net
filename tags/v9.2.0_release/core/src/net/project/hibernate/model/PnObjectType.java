/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnObjectType generated by hbm2java
 */
@Entity
@Table(name = "PN_OBJECT_TYPE")
public class PnObjectType implements Serializable {

	private String objectType;

	private String masterTableName;

	private String objectTypeDesc;

	private String parentObjectType;

	private long defaultPermissionActions;

	private int isSecurable;

	private int isWorkflowable;

	private PnNotificationObjectType pnNotificationObjectType;

	private Set pnModuleHasObjectTypes = new HashSet(0);

	private Set pnEventTypes = new HashSet(0);

	private Set pnDefaultObjectPermissions = new HashSet(0);

	private Set pnObjectTypeSupportsActions = new HashSet(0);

	private Set pnObjects = new HashSet(0);

	private Set pnWorkflowHasObjectTypes = new HashSet(0);

	public PnObjectType() {
	}

	public PnObjectType(String objectType) {
		this.objectType = objectType;
	}

	public PnObjectType(String objectType, long defaultPermissionActions) {
		this.objectType = objectType;
		this.defaultPermissionActions = defaultPermissionActions;
	}

	/** minimal constructor */
	public PnObjectType(String objectType, long defaultPermissionActions, int isSecurable, int isWorkflowable,
			Set pnModuleHasObjectTypes, Set pnEventTypes, Set pnDefaultObjectPermissions,
			Set pnObjectTypeSupportsActions, Set pnObjects, Set pnWorkflowHasObjectTypes) {
		this.objectType = objectType;
		this.defaultPermissionActions = defaultPermissionActions;
		this.isSecurable = isSecurable;
		this.isWorkflowable = isWorkflowable;
		this.pnModuleHasObjectTypes = pnModuleHasObjectTypes;
		this.pnEventTypes = pnEventTypes;
		this.pnDefaultObjectPermissions = pnDefaultObjectPermissions;
		this.pnObjectTypeSupportsActions = pnObjectTypeSupportsActions;
		this.pnObjects = pnObjects;
		this.pnWorkflowHasObjectTypes = pnWorkflowHasObjectTypes;
	}

	public PnObjectType(String objectType, String masterTableName, String objectTypeDesc, String parentObjectType,
			long defaultPermissionActions, int isSecurable, int isWorkflowable,
			PnNotificationObjectType pnNotificationObjectType, Set pnModuleHasObjectTypes, Set pnEventTypes,
			Set pnDefaultObjectPermissions, Set pnObjectTypeSupportsActions, Set pnObjects, Set pnWorkflowHasObjectTypes) {
		this.objectType = objectType;
		this.masterTableName = masterTableName;
		this.objectTypeDesc = objectTypeDesc;
		this.parentObjectType = parentObjectType;
		this.defaultPermissionActions = defaultPermissionActions;
		this.isSecurable = isSecurable;
		this.isWorkflowable = isWorkflowable;
		this.pnNotificationObjectType = pnNotificationObjectType;
		this.pnModuleHasObjectTypes = pnModuleHasObjectTypes;
		this.pnEventTypes = pnEventTypes;
		this.pnDefaultObjectPermissions = pnDefaultObjectPermissions;
		this.pnObjectTypeSupportsActions = pnObjectTypeSupportsActions;
		this.pnObjects = pnObjects;
		this.pnWorkflowHasObjectTypes = pnWorkflowHasObjectTypes;
	}

	@Id
	@Column(name = "OBJECT_TYPE", nullable = false)
	public String getObjectType() {
		return this.objectType;
	}

	public void setObjectType(String objectType) {
		this.objectType = objectType;
	}

	@Column(name = "MASTER_TABLE_NAME", length = 80)
	public String getMasterTableName() {
		return this.masterTableName;
	}

	public void setMasterTableName(String masterTableName) {
		this.masterTableName = masterTableName;
	}

	@Column(name = "OBJECT_TYPE_DESC", length = 500)
	public String getObjectTypeDesc() {
		return this.objectTypeDesc;
	}

	public void setObjectTypeDesc(String objectTypeDesc) {
		this.objectTypeDesc = objectTypeDesc;
	}

	@Column(name = "PARENT_OBJECT_TYPE", length = 80)
	public String getParentObjectType() {
		return this.parentObjectType;
	}

	public void setParentObjectType(String parentObjectType) {
		this.parentObjectType = parentObjectType;
	}

	@Column(name = "DEFAULT_PERMISSION_ACTIONS", nullable = false, length = 10)
	public long getDefaultPermissionActions() {
		return this.defaultPermissionActions;
	}

	public void setDefaultPermissionActions(long defaultPermissionActions) {
		this.defaultPermissionActions = defaultPermissionActions;
	}

	@Column(name = "IS_SECURABLE", nullable = false, length = 1)
	public int getIsSecurable() {
		return this.isSecurable;
	}

	public void setIsSecurable(int isSecurable) {
		this.isSecurable = isSecurable;
	}

	@Column(name = "IS_WORKFLOWABLE", nullable = false, length = 1)
	public int getIsWorkflowable() {
		return this.isWorkflowable;
	}

	public void setIsWorkflowable(int isWorkflowable) {
		this.isWorkflowable = isWorkflowable;
	}

	//@OneToOne(fetch = FetchType.LAZY, mappedBy = "pnObjectType", targetEntity = PnNotificationObjectType.class)
	//@JoinColumn(name="OBJECT_TYPE")
	@Transient	
	public PnNotificationObjectType getPnNotificationObjectType() {
		return this.pnNotificationObjectType;
	}

	public void setPnNotificationObjectType(PnNotificationObjectType pnNotificationObjectType) {
		this.pnNotificationObjectType = pnNotificationObjectType;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnObjectType", targetEntity = PnModuleHasObjectType.class)
	@Transient
	public Set getPnModuleHasObjectTypes() {
		return this.pnModuleHasObjectTypes;
	}

	public void setPnModuleHasObjectTypes(Set pnModuleHasObjectTypes) {
		this.pnModuleHasObjectTypes = pnModuleHasObjectTypes;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnObjectType", targetEntity = PnEventType.class)
	@Transient
	public Set getPnEventTypes() {
		return this.pnEventTypes;
	}

	public void setPnEventTypes(Set pnEventTypes) {
		this.pnEventTypes = pnEventTypes;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnObjectType", targetEntity = PnDefaultObjectPermission.class)
	@Transient
	public Set getPnDefaultObjectPermissions() {
		return this.pnDefaultObjectPermissions;
	}

	public void setPnDefaultObjectPermissions(Set pnDefaultObjectPermissions) {
		this.pnDefaultObjectPermissions = pnDefaultObjectPermissions;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnObjectType", targetEntity = PnObjectTypeSupportsAction.class)
	@Transient
	public Set getPnObjectTypeSupportsActions() {
		return this.pnObjectTypeSupportsActions;
	}

	public void setPnObjectTypeSupportsActions(Set pnObjectTypeSupportsActions) {
		this.pnObjectTypeSupportsActions = pnObjectTypeSupportsActions;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnObjectType", targetEntity = PnObject.class)
	@Transient
	public Set getPnObjects() {
		return this.pnObjects;
	}

	public void setPnObjects(Set pnObjects) {
		this.pnObjects = pnObjects;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnObjectType", targetEntity = PnWorkflowHasObjectType.class)
	@Transient
	public Set getPnWorkflowHasObjectTypes() {
		return this.pnWorkflowHasObjectTypes;
	}

	public void setPnWorkflowHasObjectTypes(Set pnWorkflowHasObjectTypes) {
		this.pnWorkflowHasObjectTypes = pnWorkflowHasObjectTypes;
	}

	public String toString() {
		return new ToStringBuilder(this).append("objectType", getObjectType()).toString();
	}

}
