package net.project.hibernate.model;
// Generated Jun 13, 2009 11:41:49 PM by Hibernate Tools 3.2.4.GA


import javax.persistence.Column;
import javax.persistence.Embeddable;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnBrandSupportsLanguagePK generated by hbm2java
 */
@Embeddable
public class PnBrandSupportsLanguagePK  implements java.io.Serializable {

    /** identifier field */
    private Integer brandId;

    /** identifier field */
    private String languageCode;

    public PnBrandSupportsLanguagePK() {
    }

    public PnBrandSupportsLanguagePK(Integer brandId, String languageCode) {
       this.brandId = brandId;
       this.languageCode = languageCode;
    }
   


    @Column(name="BRAND_ID", nullable=false, length=20)
    public Integer getBrandId() {
        return this.brandId;
    }
    
    public void setBrandId(Integer brandId) {
        this.brandId = brandId;
    }


    @Column(name="LANGUAGE_CODE", nullable=false, length=2)
    public String getLanguageCode() {
        return this.languageCode;
    }
    
    public void setLanguageCode(String languageCode) {
        this.languageCode = languageCode;
    }

    public String toString() {
        return new ToStringBuilder(this)
            .append("brandId", getBrandId())
            .append("languageCode", getLanguageCode())
            .toString();
    }

    public boolean equals(Object other) {
        if ( (this == other ) ) return true;
        if ( !(other instanceof PnBrandSupportsLanguagePK) ) return false;
        PnBrandSupportsLanguagePK castOther = (PnBrandSupportsLanguagePK) other;
        return new EqualsBuilder()
            .append(this.getBrandId(), castOther.getBrandId())
            .append(this.getLanguageCode(), castOther.getLanguageCode())
            .isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder()
            .append(getBrandId())
            .append(getLanguageCode())
            .toHashCode();
    }

}


