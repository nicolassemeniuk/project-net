/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnView generated by hbm2java
 */
@Entity
@Table(name = "PN_VIEW")
public class PnView implements Serializable {

	private Integer viewId;

	private String name;

	private String description;

	private Integer createdById;

	private Date createdDatetime;

	private Integer modifiedById;

	private Date modifiedDatetime;

	private String recordStatus;
	
	private boolean isViewShared;
	
	private boolean isVisibleToAll;
	
	private String createdByName;

	private PnFinderIngredient pnFinderIngredient;

	private Set pnSpaceViewContexts = new HashSet(0);

	private Set pnViewDefaultSettings = new HashSet(0);

	public PnView() {
	}

	public PnView(Integer viewId, String name, Integer createdById, Date createdDatetime, Integer modifiedById,
			Date modifiedDatetime, String recordStatus,
			net.project.hibernate.model.PnFinderIngredient pnFinderIngredient, Set pnSpaceViewContexts,
			Set pnViewDefaultSettings) {
		this.viewId = viewId;
		this.name = name;
		this.createdById = createdById;
		this.createdDatetime = createdDatetime;
		this.modifiedById = modifiedById;
		this.modifiedDatetime = modifiedDatetime;
		this.recordStatus = recordStatus;
		this.pnFinderIngredient = pnFinderIngredient;
		this.pnSpaceViewContexts = pnSpaceViewContexts;
		this.pnViewDefaultSettings = pnViewDefaultSettings;
	}

	public PnView(Integer viewId, String name, String description, Integer createdById, Date createdDatetime,
			Integer modifiedById, Date modifiedDatetime, String recordStatus, PnFinderIngredient pnFinderIngredient,
			Set pnSpaceViewContexts, Set pnViewDefaultSettings) {
		this.viewId = viewId;
		this.name = name;
		this.description = description;
		this.createdById = createdById;
		this.createdDatetime = createdDatetime;
		this.modifiedById = modifiedById;
		this.modifiedDatetime = modifiedDatetime;
		this.recordStatus = recordStatus;
		this.pnFinderIngredient = pnFinderIngredient;
		this.pnSpaceViewContexts = pnSpaceViewContexts;
		this.pnViewDefaultSettings = pnViewDefaultSettings;
	}

	public PnView(Integer viewId, String name, String createdByName, Date modifiedDatetime, Integer createdById) {
		this.viewId = viewId;
		this.name = name;
		this.createdByName = createdByName;
		this.modifiedDatetime = modifiedDatetime;
		this.createdById = createdById;
	}

	public PnView(Integer viewId, String name, String description, Integer createdById, Date createdDatetime,
			Integer modifiedById, Date modifiedDatetime, String recordStatus, boolean isViewShared, 
			boolean isVisibleToAll, PnFinderIngredient pnFinderIngredient, Set pnSpaceViewContexts, Set pnViewDefaultSettings) {
		this.viewId = viewId;
		this.name = name;
		this.description = description;
	}
	
	@Id
	@Column(name = "VIEW_ID", nullable = false)
	public Integer getViewId() {
		return this.viewId;
	}

	public void setViewId(Integer viewId) {
		this.viewId = viewId;
	}

	@Column(name = "NAME", nullable = false, length = 80)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "DESCRIPTION", length = 250)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "CREATED_BY_ID", nullable = false, length = 20)
	public Integer getCreatedById() {
		return this.createdById;
	}

	public void setCreatedById(Integer createdById) {
		this.createdById = createdById;
	}

	@Column(name = "CREATED_DATETIME", nullable = false, length = 7)
	public Date getCreatedDatetime() {
		return this.createdDatetime;
	}

	public void setCreatedDatetime(Date createdDatetime) {
		this.createdDatetime = createdDatetime;
	}

	@Column(name = "MODIFIED_BY_ID", nullable = false, length = 20)
	public Integer getModifiedById() {
		return this.modifiedById;
	}

	public void setModifiedById(Integer modifiedById) {
		this.modifiedById = modifiedById;
	}

	@Column(name = "MODIFIED_DATETIME", nullable = false, length = 7)
	public Date getModifiedDatetime() {
		return this.modifiedDatetime;
	}

	public void setModifiedDatetime(Date modifiedDatetime) {
		this.modifiedDatetime = modifiedDatetime;
	}

	@Column(name = "RECORD_STATUS", nullable = false, length = 1)
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	//@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnFinderIngredient.class)
	//@JoinColumn(name = "INGREDIENTS_ID")
	@Transient
	public PnFinderIngredient getPnFinderIngredient() {
		return this.pnFinderIngredient;
	}

	public void setPnFinderIngredient(PnFinderIngredient pnFinderIngredient) {
		this.pnFinderIngredient = pnFinderIngredient;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnView", targetEntity = PnSpaceViewContext.class)
	@Transient
	public Set getPnSpaceViewContexts() {
		return this.pnSpaceViewContexts;
	}

	public void setPnSpaceViewContexts(Set pnSpaceViewContexts) {
		this.pnSpaceViewContexts = pnSpaceViewContexts;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnView", targetEntity = PnViewDefaultSetting.class)
	@Transient
	public Set getPnViewDefaultSettings() {
		return this.pnViewDefaultSettings;
	}

	public void setPnViewDefaultSettings(Set pnViewDefaultSettings) {
		this.pnViewDefaultSettings = pnViewDefaultSettings;
	}

	public String toString() {
		return new ToStringBuilder(this).append("viewId", getViewId()).toString();
	}

	@Column(name = "IS_VIEW_SHARED", nullable = false, length = 7)
	public boolean isViewShared() {
		return isViewShared;
	}

	public void setViewShared(boolean isViewShared) {
		this.isViewShared = isViewShared;
	}

	@Column(name = "IS_VISIBLE_TO_ALL", nullable = false, length = 7)
	public boolean isVisibleToAll() {
		return isVisibleToAll;
	}

	public void setVisibleToAll(boolean isVisibleToAll) {
		this.isVisibleToAll = isVisibleToAll;
	}

	@Transient
	public String getCreatedByName() {
		return createdByName;
	}

	public void setCreatedByName(String createdByName) {
		this.createdByName = createdByName;
	}

}
