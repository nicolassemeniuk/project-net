/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
*/
package net.project.hibernate.model;
// Generated Jun 13, 2009 11:41:49 PM by Hibernate Tools 3.2.4.GA


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * DatabaseVersionUpdate generated by hbm2java
 */
@Entity
@Table(name="DATABASE_VERSION_UPDATE"
)
public class DatabaseVersionUpdate  implements java.io.Serializable {

    /** identifier field */
    private Integer majorVersion;

    /** identifier field */
    private Integer minorVersion;

    /** identifier field */
    private Integer subMinorVersion;

    /** identifier field */
    private String patchFilename;

    /** identifier field */
    private String patchDescription;

    /** identifier field */
    private Date timestamp;

    public DatabaseVersionUpdate() {
    }

    public DatabaseVersionUpdate(int majorVersion, int minorVersion, int subMinorVersion, String patchFilename, String patchDescription, Date timestamp) {
       this.majorVersion = majorVersion;
       this.minorVersion = minorVersion;
       this.subMinorVersion = subMinorVersion;
       this.patchFilename = patchFilename;
       this.patchDescription = patchDescription;
       this.timestamp = timestamp;
    }
   

    @Id
    @Column(name="MAJOR_VERSION", nullable=false, length=3)
    public int getMajorVersion() {
        return this.majorVersion;
    }
    
    public void setMajorVersion(int majorVersion) {
        this.majorVersion = majorVersion;
    }

    
    @Column(name="MINOR_VERSION", nullable=false, length=3)
    public int getMinorVersion() {
        return this.minorVersion;
    }
    
    public void setMinorVersion(int minorVersion) {
        this.minorVersion = minorVersion;
    }

    
    @Column(name="SUB_MINOR_VERSION", nullable=false, length=3)
    public int getSubMinorVersion() {
        return this.subMinorVersion;
    }
    
    public void setSubMinorVersion(int subMinorVersion) {
        this.subMinorVersion = subMinorVersion;
    }

    
    @Column(name="PATCH_FILENAME", nullable=false, length=250)
    public String getPatchFilename() {
        return this.patchFilename;
    }
    
    public void setPatchFilename(String patchFilename) {
        this.patchFilename = patchFilename;
    }

    
    @Column(name="PATCH_DESCRIPTION", nullable=false, length=4000)
    public String getPatchDescription() {
        return this.patchDescription;
    }
    
    public void setPatchDescription(String patchDescription) {
        this.patchDescription = patchDescription;
    }

    
    @Column(name="TIMESTAMP", nullable=false, length=7)
    public Date getTimestamp() {
        return this.timestamp;
    }
    
    public void setTimestamp(Date timestamp) {
        this.timestamp = timestamp;
    }

    public String toString() {
        return new ToStringBuilder(this)
            .append("majorVersion", getMajorVersion())
            .append("minorVersion", getMinorVersion())
            .append("subMinorVersion", getSubMinorVersion())
            .append("patchFilename", getPatchFilename())
            .append("patchDescription", getPatchDescription())
            .append("timestamp", getTimestamp())
            .toString();
	}
}


