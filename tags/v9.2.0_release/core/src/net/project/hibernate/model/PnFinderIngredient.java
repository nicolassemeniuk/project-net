/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.sql.Clob;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnFinderIngredient generated by hbm2java
 */
@Entity
@Table(name = "PN_FINDER_INGREDIENTS")
public class PnFinderIngredient implements java.io.Serializable {

	/** identifier field */
	private Integer ingredientsId;

	/** persistent field */
	private Clob ingredientsData;

	/** persistent field */
	private Set pnViews = new HashSet(0);

	public PnFinderIngredient() {
	}

	public PnFinderIngredient(Integer ingredientsId, Clob ingredientsData) {
		this.ingredientsId = ingredientsId;
		this.ingredientsData = ingredientsData;
	}

	public PnFinderIngredient(Integer ingredientsId, Clob ingredientsData, Set pnViews) {
		this.ingredientsId = ingredientsId;
		this.ingredientsData = ingredientsData;
		this.pnViews = pnViews;
	}

	@Id
	@Column(name = "INGREDIENTS_ID", nullable = false)
	public Integer getIngredientsId() {
		return this.ingredientsId;
	}

	public void setIngredientsId(Integer ingredientsId) {
		this.ingredientsId = ingredientsId;
	}

	@Column(name = "INGREDIENTS_DATA", nullable = false, length = 4000)
	public Clob getIngredientsData() {
		return this.ingredientsData;
	}

	public void setIngredientsData(Clob ingredientsData) {
		this.ingredientsData = ingredientsData;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnFinderIngredient", targetEntity = PnView.class)
	@Transient
	public Set getPnViews() {
		return this.pnViews;
	}

	public void setPnViews(Set pnViews) {
		this.pnViews = pnViews;
	}

	public String toString() {
		return new ToStringBuilder(this).append("ingredientsId", getIngredientsId()).toString();
	}

}
