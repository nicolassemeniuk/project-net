/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnFacility generated by hbm2java
 */
@Entity
@Table(name = "PN_FACILITY")
public class PnFacility implements java.io.Serializable {

	/** identifier field */
	private Integer facilityId;

	/** persistent field */
	private String name;

	/** nullable persistent field */
	private String description;

	/** persistent field */
	private String facilityType;

	/** nullable persistent field */
	private String roomName;

	/** nullable persistent field */
	private String roomNumber;

	/** nullable persistent field */
	private String building;

	/** nullable persistent field */
	private String floor;

	/** nullable persistent field */
	private String campus;

	/** nullable persistent field */
	private Integer isBridge;

	/** nullable persistent field */
	private String phoneNumber;

	/** nullable persistent field */
	private String password;

	/** nullable persistent field */
	private String facilityUrl;

	/** nullable persistent field */
	private PnObject pnObject;

	/** persistent field */
	private PnAddress pnAddress;

	/** persistent field */
	private Set pnCalendarEvents = new HashSet(0);

	public PnFacility() {
	}

	public PnFacility(Integer facilityId, String name, String facilityType) {
		this.facilityId = facilityId;
		this.name = name;
		this.facilityType = facilityType;
	}

	public PnFacility(Integer facilityId, String name, String description, String facilityType, String roomName,
			String roomNumber, String building, String floor, String campus, Integer isBridge, String phoneNumber,
			String password, String facilityUrl, PnObject pnObject, PnAddress pnAddress, Set pnCalendarEvents) {
		this.facilityId = facilityId;
		this.name = name;
		this.description = description;
		this.facilityType = facilityType;
		this.roomName = roomName;
		this.roomNumber = roomNumber;
		this.building = building;
		this.floor = floor;
		this.campus = campus;
		this.isBridge = isBridge;
		this.phoneNumber = phoneNumber;
		this.password = password;
		this.facilityUrl = facilityUrl;
		this.pnObject = pnObject;
		this.pnAddress = pnAddress;
		this.pnCalendarEvents = pnCalendarEvents;
	}

	/** minimal constructor */
	public PnFacility(Integer facilityId, String name, String facilityType,
			net.project.hibernate.model.PnAddress pnAddress, Set pnCalendarEvents) {
		this.facilityId = facilityId;
		this.name = name;
		this.facilityType = facilityType;
		this.pnAddress = pnAddress;
		this.pnCalendarEvents = pnCalendarEvents;
	}

	@Id
	@Column(name = "FACILITY_ID", nullable = false)
	public Integer getFacilityId() {
		return this.facilityId;
	}

	public void setFacilityId(Integer facilityId) {
		this.facilityId = facilityId;
	}

	@Column(name = "NAME", nullable = false, length = 80)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "DESCRIPTION", length = 500)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "FACILITY_TYPE", nullable = false, length = 80)
	public String getFacilityType() {
		return this.facilityType;
	}

	public void setFacilityType(String facilityType) {
		this.facilityType = facilityType;
	}

	@Column(name = "ROOM_NAME", length = 80)
	public String getRoomName() {
		return this.roomName;
	}

	public void setRoomName(String roomName) {
		this.roomName = roomName;
	}

	@Column(name = "ROOM_NUMBER", length = 80)
	public String getRoomNumber() {
		return this.roomNumber;
	}

	public void setRoomNumber(String roomNumber) {
		this.roomNumber = roomNumber;
	}

	@Column(name = "BUILDING", length = 80)
	public String getBuilding() {
		return this.building;
	}

	public void setBuilding(String building) {
		this.building = building;
	}

	@Column(name = "FLOOR", length = 80)
	public String getFloor() {
		return this.floor;
	}

	public void setFloor(String floor) {
		this.floor = floor;
	}

	@Column(name = "CAMPUS", length = 80)
	public String getCampus() {
		return this.campus;
	}

	public void setCampus(String campus) {
		this.campus = campus;
	}

	@Column(name = "IS_BRIDGE", length = 1)
	public Integer getIsBridge() {
		return this.isBridge;
	}

	public void setIsBridge(Integer isBridge) {
		this.isBridge = isBridge;
	}

	@Column(name = "PHONE_NUMBER", length = 20)
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Column(name = "PASSWORD", length = 80)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "FACILITY_URL", length = 240)
	public String getFacilityUrl() {
		return this.facilityUrl;
	}

	public void setFacilityUrl(String facilityUrl) {
		this.facilityUrl = facilityUrl;
	}

	//@OneToOne(fetch = FetchType.LAZY, targetEntity = PnObject.class)
	//@JoinColumn(name="FACILITY_ID")
	@Transient
	public PnObject getPnObject() {
		return this.pnObject;
	}

	public void setPnObject(PnObject pnObject) {
		this.pnObject = pnObject;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnAddress.class)
	@JoinColumn(name = "ADDRESS_ID")
	public PnAddress getPnAddress() {
		return this.pnAddress;
	}

	public void setPnAddress(PnAddress pnAddress) {
		this.pnAddress = pnAddress;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnFacility", targetEntity = PnCalendarEvent.class)
	@Transient
	public Set getPnCalendarEvents() {
		return this.pnCalendarEvents;
	}

	public void setPnCalendarEvents(Set pnCalendarEvents) {
		this.pnCalendarEvents = pnCalendarEvents;
	}

	public String toString() {
		return new ToStringBuilder(this).append("facilityId", getFacilityId()).toString();
	}

}
