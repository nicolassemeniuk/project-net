/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.io.Serializable;

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.HashCodeBuilder;
import org.hibernate.annotations.GenericGenerator;

/**
 * PnTimelog generated by hbm2java
 */
@Entity
@Table(name = "PN_TIMELOG")
public class PnTimelog implements Serializable {

	private Integer timelogId;

	private Date fromDate;

	private Date toDate;

	private Date dateSubmitted;

	private String recordStatus;

	private PnObject pnObject;

	private PnPerson pnPerson;

	public PnTimelog() {
	}

	public PnTimelog(java.lang.Integer timelogId) {
		this.setTimelogId(timelogId);
	}

	public PnTimelog(Date fromDate, Date toDate, Date dateSubmitted, String recordStatus) {
		this.fromDate = fromDate;
		this.toDate = toDate;
		this.dateSubmitted = dateSubmitted;
		this.recordStatus = recordStatus;
	}

	public PnTimelog(java.lang.Integer timelogId, net.project.hibernate.model.PnObject pnObject,
			net.project.hibernate.model.PnPerson pnPerson, java.util.Date fromDate, java.util.Date toDate,
			java.util.Date dateSubmitted, java.lang.String recordStatus) {

		this.setTimelogId(timelogId);
		this.setPnObject(pnObject);
		this.setPnPerson(pnPerson);
		this.setFromDate(fromDate);
		this.setToDate(toDate);
		this.setDateSubmitted(dateSubmitted);
		this.setRecordStatus(recordStatus);
	}

	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "TIMELOG_ID", nullable = false)
	public Integer getTimelogId() {
		return this.timelogId;
	}

	public void setTimelogId(Integer timelogId) {
		this.timelogId = timelogId;
	}

	@Column(name = "FROM_DATE", nullable = false)
	public Date getFromDate() {
		return this.fromDate;
	}

	public void setFromDate(Date fromDate) {
		this.fromDate = fromDate;
	}

	@Column(name = "TO_DATE", nullable = false)
	public Date getToDate() {
		return this.toDate;
	}

	public void setToDate(Date toDate) {
		this.toDate = toDate;
	}

	@Column(name = "DATE_SUBMITTED", nullable = false)
	public Date getDateSubmitted() {
		return this.dateSubmitted;
	}

	public void setDateSubmitted(Date dateSubmitted) {
		this.dateSubmitted = dateSubmitted;
	}

	@Column(name = "RECORD_STATUS", nullable = false, length = 1)
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	//@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnObject.class)
	//@JoinColumn(name = "OBJECT_ID")
	@Transient
	public PnObject getPnObject() {
		return this.pnObject;
	}

	public void setPnObject(PnObject pnObject) {
		this.pnObject = pnObject;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnPerson.class)
	@JoinColumn(name = "PERSON_ID")
	public PnPerson getPnPerson() {
		return this.pnPerson;
	}

	public void setPnPerson(PnPerson pnPerson) {
		this.pnPerson = pnPerson;
	}

	public boolean equals(Object obj) {
		if (null == obj)
			return false;
		if (!(obj instanceof net.project.hibernate.model.PnTimelog))
			return false;
		else {
			net.project.hibernate.model.PnTimelog pnTimelog = (net.project.hibernate.model.PnTimelog) obj;
			if (null == this.getTimelogId() || null == pnTimelog.getTimelogId())
				return false;
			else
				return (this.getTimelogId().equals(pnTimelog.getTimelogId()));
		}
	}

	public int hashCode() {
		return new HashCodeBuilder().append(getTimelogId()).toHashCode();
	}

	public String toString() {
		return super.toString();
	}

}
