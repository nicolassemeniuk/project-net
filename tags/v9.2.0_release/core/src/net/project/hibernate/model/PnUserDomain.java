/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.io.Serializable;
import java.sql.Clob;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnUserDomain generated by hbm2java
 */
@Entity
@Table(name = "PN_USER_DOMAIN")
public class PnUserDomain implements Serializable {

	private Integer domainId;

	private String name;

	private String description;

	private String recordStatus;

	private Integer isVerificationRequired;

	private Clob registrationInstructionsClob;

	private Integer supportsCreditCardPurchases;

	private Set pnDomainMigrationsByToDomain = new HashSet(0);

	private Set pnDomainMigrationsByFromDomain = new HashSet(0);

	private Set pnUsers = new HashSet(0);

	private PnDirectoryProviderType pnDirectoryProviderType;

	public PnUserDomain() {
	}

	public PnUserDomain(Integer domainId, String name, String recordStatus) {
		this.domainId = domainId;
		this.name = name;
		this.recordStatus = recordStatus;
	}

	public PnUserDomain(Integer domainId, String name, String recordStatus,
			net.project.hibernate.model.PnDirectoryProviderType pnDirectoryProviderType,
			Set pnDomainMigrationsByToDomain, Set pnDomainMigrationsByFromDomain, Set pnUsers) {
		this.domainId = domainId;
		this.name = name;
		this.recordStatus = recordStatus;
		this.pnDirectoryProviderType = pnDirectoryProviderType;
		this.pnDomainMigrationsByToDomain = pnDomainMigrationsByToDomain;
		this.pnDomainMigrationsByFromDomain = pnDomainMigrationsByFromDomain;
		this.pnUsers = pnUsers;
	}

	public PnUserDomain(Integer domainId, String name, String description, String recordStatus,
			Integer isVerificationRequired, Clob registrationInstructionsClob, Integer supportsCreditCardPurchases,
			net.project.hibernate.model.PnDirectoryProviderType pnDirectoryProviderType,
			Set pnDomainMigrationsByToDomain, Set pnDomainMigrationsByFromDomain, Set pnUsers) {
		this.domainId = domainId;
		this.name = name;
		this.description = description;
		this.recordStatus = recordStatus;
		this.isVerificationRequired = isVerificationRequired;
		this.registrationInstructionsClob = registrationInstructionsClob;
		this.supportsCreditCardPurchases = supportsCreditCardPurchases;
		this.pnDirectoryProviderType = pnDirectoryProviderType;
		this.pnDomainMigrationsByToDomain = pnDomainMigrationsByToDomain;
		this.pnDomainMigrationsByFromDomain = pnDomainMigrationsByFromDomain;
		this.pnUsers = pnUsers;
	}

	@Id
	@Column(name = "DOMAIN_ID", nullable = false)
	public Integer getDomainId() {
		return this.domainId;
	}

	public void setDomainId(Integer domainId) {
		this.domainId = domainId;
	}

	@Column(name = "NAME", nullable = false, length = 80)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "DESCRIPTION", length = 240)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "RECORD_STATUS", nullable = false, length = 1)
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	@Column(name = "IS_VERIFICATION_REQUIRED", length = 1)
	public Integer getIsVerificationRequired() {
		return this.isVerificationRequired;
	}

	public void setIsVerificationRequired(Integer isVerificationRequired) {
		this.isVerificationRequired = isVerificationRequired;
	}

	@Column(name = "REGISTRATION_INSTRUCTIONS_CLOB", length = 4000)
	public Clob getRegistrationInstructionsClob() {
		return this.registrationInstructionsClob;
	}

	public void setRegistrationInstructionsClob(Clob registrationInstructionsClob) {
		this.registrationInstructionsClob = registrationInstructionsClob;
	}

	@Column(name = "SUPPORTS_CREDIT_CARD_PURCHASES", length = 1)
	public Integer getSupportsCreditCardPurchases() {
		return this.supportsCreditCardPurchases;
	}

	public void setSupportsCreditCardPurchases(Integer supportsCreditCardPurchases) {
		this.supportsCreditCardPurchases = supportsCreditCardPurchases;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnUserDomainByToDomain", targetEntity = PnDomainMigration.class)
	@Transient
	public Set getPnDomainMigrationsByToDomain() {
		return this.pnDomainMigrationsByToDomain;
	}

	public void setPnDomainMigrationsByToDomain(Set pnDomainMigrationsByToDomain) {
		this.pnDomainMigrationsByToDomain = pnDomainMigrationsByToDomain;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnUserDomainByFromDomain", targetEntity = PnDomainMigration.class)
	@Transient
	public Set getPnDomainMigrationsByFromDomain() {
		return this.pnDomainMigrationsByFromDomain;
	}

	public void setPnDomainMigrationsByFromDomain(Set pnDomainMigrationsByFromDomain) {
		this.pnDomainMigrationsByFromDomain = pnDomainMigrationsByFromDomain;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnUserDomain", targetEntity = PnUser.class)
	@Transient
	public Set getPnUsers() {
		return this.pnUsers;
	}

	public void setPnUsers(Set pnUsers) {
		this.pnUsers = pnUsers;
	}

	//@ManyToOne(fetch = FetchType.LAZY, targetEntity=PnDirectoryProviderType.class)
	//@JoinColumn(name = "DIRECTORY_PROVIDER_TYPE_ID")
	@Transient
	public PnDirectoryProviderType getPnDirectoryProviderType() {
		return this.pnDirectoryProviderType;
	}

	public void setPnDirectoryProviderType(PnDirectoryProviderType pnDirectoryProviderType) {
		this.pnDirectoryProviderType = pnDirectoryProviderType;
	}

	public String toString() {
		return new ToStringBuilder(this).append("domainId", getDomainId()).toString();
	}

}
