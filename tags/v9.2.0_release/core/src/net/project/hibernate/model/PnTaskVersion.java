/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
*/
package net.project.hibernate.model;

import java.io.Serializable;
import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.Table;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnTaskVersion generated by hbm2java
 */
@Entity
@Table(name="PN_TASK_VERSION"
)
public class PnTaskVersion implements Serializable {


     private PnTaskVersionPK comp_id;
     private String taskName;
     private String taskDesc;
     private String taskType;
     private Integer duration;
     private Integer work;
     private Integer workUnits;
     private Integer workComplete;
     private Date dateStart;
     private Integer workCompleteUnits;
     private Date dateFinish;
     private Date actualStart;
     private Date actualFinish;
     private Integer priority;
     private Integer percentComplete;
     private Date dateCreated;
     private Date dateModified;
     private Integer modifiedBy;
     private Integer durationUnits;
     private Integer parentTaskId;
     private Integer parentTaskVersionId;
     private String recordStatus;
     private Integer criticalPath;
     private Integer seq;
     private Integer ignoreTimesForDates;
     private Integer isMilestone;
     private Date earlyStart;
     private Date earlyFinish;
     private Date lateStart;
     private Date lateFinish;
     private Integer workPercentComplete;
     private String constraintType;
     private Date constraintDate;
     private Date deadline;
     private Integer baselineId;
     private Integer planVersionId;
     private Integer legacyFlag;
     private Integer calculationTypeId;
     private Integer unallocatedWorkComplete;
     private Integer unallocatedWorkCompleteUnit;
     private Integer workMs;
     private Integer workCompleteMs;

    public PnTaskVersion() {
    }

    public PnTaskVersion(PnTaskVersionPK comp_id, String taskName, String recordStatus) {
        this.comp_id = comp_id;
        this.taskName = taskName;
        this.recordStatus = recordStatus;
    }

    public PnTaskVersion(PnTaskVersionPK comp_id, String taskName, String taskDesc, String taskType, Integer duration, Integer work, Integer workUnits, Integer workComplete, Date dateStart, Integer workCompleteUnits, Date dateFinish, Date actualStart, Date actualFinish, Integer priority, Integer percentComplete, Date dateCreated, Date dateModified, Integer modifiedBy, Integer durationUnits, Integer parentTaskId, Integer parentTaskVersionId, String recordStatus, Integer criticalPath, Integer seq, Integer ignoreTimesForDates, Integer isMilestone, Date earlyStart, Date earlyFinish, Date lateStart, Date lateFinish, Integer workPercentComplete, String constraintType, Date constraintDate, Date deadline, Integer baselineId, Integer planVersionId, Integer legacyFlag, Integer calculationTypeId, Integer unallocatedWorkComplete, Integer unallocatedWorkCompleteUnit, Integer workMs, Integer workCompleteMs) {
       this.comp_id = comp_id;
       this.taskName = taskName;
       this.taskDesc = taskDesc;
       this.taskType = taskType;
       this.duration = duration;
       this.work = work;
       this.workUnits = workUnits;
       this.workComplete = workComplete;
       this.dateStart = dateStart;
       this.workCompleteUnits = workCompleteUnits;
       this.dateFinish = dateFinish;
       this.actualStart = actualStart;
       this.actualFinish = actualFinish;
       this.priority = priority;
       this.percentComplete = percentComplete;
       this.dateCreated = dateCreated;
       this.dateModified = dateModified;
       this.modifiedBy = modifiedBy;
       this.durationUnits = durationUnits;
       this.parentTaskId = parentTaskId;
       this.parentTaskVersionId = parentTaskVersionId;
       this.recordStatus = recordStatus;
       this.criticalPath = criticalPath;
       this.seq = seq;
       this.ignoreTimesForDates = ignoreTimesForDates;
       this.isMilestone = isMilestone;
       this.earlyStart = earlyStart;
       this.earlyFinish = earlyFinish;
       this.lateStart = lateStart;
       this.lateFinish = lateFinish;
       this.workPercentComplete = workPercentComplete;
       this.constraintType = constraintType;
       this.constraintDate = constraintDate;
       this.deadline = deadline;
       this.baselineId = baselineId;
       this.planVersionId = planVersionId;
       this.legacyFlag = legacyFlag;
       this.calculationTypeId = calculationTypeId;
       this.unallocatedWorkComplete = unallocatedWorkComplete;
       this.unallocatedWorkCompleteUnit = unallocatedWorkCompleteUnit;
       this.workMs = workMs;
       this.workCompleteMs = workCompleteMs;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="taskId", column=@Column(name="TASK_ID", nullable=false, length=20) ), 
        @AttributeOverride(name="taskVersionId", column=@Column(name="TASK_VERSION_ID", nullable=false, length=20) ) } )
    public PnTaskVersionPK getComp_id() {
        return this.comp_id;
    }
    
    public void setComp_id(PnTaskVersionPK comp_id) {
        this.comp_id = comp_id;
    }

    
    @Column(name="TASK_NAME", nullable=false)
    public String getTaskName() {
        return this.taskName;
    }
    
    public void setTaskName(String taskName) {
        this.taskName = taskName;
    }

    
    @Column(name="TASK_DESC", length=4000)
    public String getTaskDesc() {
        return this.taskDesc;
    }
    
    public void setTaskDesc(String taskDesc) {
        this.taskDesc = taskDesc;
    }

    
    @Column(name="TASK_TYPE", length=80)
    public String getTaskType() {
        return this.taskType;
    }
    
    public void setTaskType(String taskType) {
        this.taskType = taskType;
    }

    
    @Column(name="DURATION", length=22)
    public Integer getDuration() {
        return this.duration;
    }
    
    public void setDuration(Integer duration) {
        this.duration = duration;
    }

    
    @Column(name="WORK", length=22)
    public Integer getWork() {
        return this.work;
    }
    
    public void setWork(Integer work) {
        this.work = work;
    }

    
    @Column(name="WORK_UNITS", length=20)
    public Integer getWorkUnits() {
        return this.workUnits;
    }
    
    public void setWorkUnits(Integer workUnits) {
        this.workUnits = workUnits;
    }

    
    @Column(name="WORK_COMPLETE", length=22)
    public Integer getWorkComplete() {
        return this.workComplete;
    }
    
    public void setWorkComplete(Integer workComplete) {
        this.workComplete = workComplete;
    }

    
    @Column(name="DATE_START", length=7)
    public Date getDateStart() {
        return this.dateStart;
    }
    
    public void setDateStart(Date dateStart) {
        this.dateStart = dateStart;
    }

    
    @Column(name="WORK_COMPLETE_UNITS", length=20)
    public Integer getWorkCompleteUnits() {
        return this.workCompleteUnits;
    }
    
    public void setWorkCompleteUnits(Integer workCompleteUnits) {
        this.workCompleteUnits = workCompleteUnits;
    }

    
    @Column(name="DATE_FINISH", length=7)
    public Date getDateFinish() {
        return this.dateFinish;
    }
    
    public void setDateFinish(Date dateFinish) {
        this.dateFinish = dateFinish;
    }

    
    @Column(name="ACTUAL_START", length=7)
    public Date getActualStart() {
        return this.actualStart;
    }
    
    public void setActualStart(Date actualStart) {
        this.actualStart = actualStart;
    }

    
    @Column(name="ACTUAL_FINISH", length=7)
    public Date getActualFinish() {
        return this.actualFinish;
    }
    
    public void setActualFinish(Date actualFinish) {
        this.actualFinish = actualFinish;
    }

    
    @Column(name="PRIORITY", length=6)
    public Integer getPriority() {
        return this.priority;
    }
    
    public void setPriority(Integer priority) {
        this.priority = priority;
    }

    
    @Column(name="PERCENT_COMPLETE", length=6)
    public Integer getPercentComplete() {
        return this.percentComplete;
    }
    
    public void setPercentComplete(Integer percentComplete) {
        this.percentComplete = percentComplete;
    }

    
    @Column(name="DATE_CREATED", length=7)
    public Date getDateCreated() {
        return this.dateCreated;
    }
    
    public void setDateCreated(Date dateCreated) {
        this.dateCreated = dateCreated;
    }

    
    @Column(name="DATE_MODIFIED", length=7)
    public Date getDateModified() {
        return this.dateModified;
    }
    
    public void setDateModified(Date dateModified) {
        this.dateModified = dateModified;
    }

    
    @Column(name="MODIFIED_BY", length=20)
    public Integer getModifiedBy() {
        return this.modifiedBy;
    }
    
    public void setModifiedBy(Integer modifiedBy) {
        this.modifiedBy = modifiedBy;
    }

    
    @Column(name="DURATION_UNITS", length=20)
    public Integer getDurationUnits() {
        return this.durationUnits;
    }
    
    public void setDurationUnits(Integer durationUnits) {
        this.durationUnits = durationUnits;
    }

    
    @Column(name="PARENT_TASK_ID", length=20)
    public Integer getParentTaskId() {
        return this.parentTaskId;
    }
    
    public void setParentTaskId(Integer parentTaskId) {
        this.parentTaskId = parentTaskId;
    }

    
    @Column(name="PARENT_TASK_VERSION_ID", length=20)
    public Integer getParentTaskVersionId() {
        return this.parentTaskVersionId;
    }
    
    public void setParentTaskVersionId(Integer parentTaskVersionId) {
        this.parentTaskVersionId = parentTaskVersionId;
    }

    
    @Column(name="RECORD_STATUS", nullable=false, length=1)
    public String getRecordStatus() {
        return this.recordStatus;
    }
    
    public void setRecordStatus(String recordStatus) {
        this.recordStatus = recordStatus;
    }

    
    @Column(name="CRITICAL_PATH", length=22)
    public Integer getCriticalPath() {
        return this.criticalPath;
    }
    
    public void setCriticalPath(Integer criticalPath) {
        this.criticalPath = criticalPath;
    }

    
    @Column(name="SEQ", length=22)
    public Integer getSeq() {
        return this.seq;
    }
    
    public void setSeq(Integer seq) {
        this.seq = seq;
    }

    
    @Column(name="IGNORE_TIMES_FOR_DATES", length=1)
    public Integer getIgnoreTimesForDates() {
        return this.ignoreTimesForDates;
    }
    
    public void setIgnoreTimesForDates(Integer ignoreTimesForDates) {
        this.ignoreTimesForDates = ignoreTimesForDates;
    }

    
    @Column(name="IS_MILESTONE", length=1)
    public Integer getIsMilestone() {
        return this.isMilestone;
    }
    
    public void setIsMilestone(Integer isMilestone) {
        this.isMilestone = isMilestone;
    }

    
    @Column(name="EARLY_START", length=7)
    public Date getEarlyStart() {
        return this.earlyStart;
    }
    
    public void setEarlyStart(Date earlyStart) {
        this.earlyStart = earlyStart;
    }

    
    @Column(name="EARLY_FINISH", length=7)
    public Date getEarlyFinish() {
        return this.earlyFinish;
    }
    
    public void setEarlyFinish(Date earlyFinish) {
        this.earlyFinish = earlyFinish;
    }

    
    @Column(name="LATE_START", length=7)
    public Date getLateStart() {
        return this.lateStart;
    }
    
    public void setLateStart(Date lateStart) {
        this.lateStart = lateStart;
    }

    
    @Column(name="LATE_FINISH", length=7)
    public Date getLateFinish() {
        return this.lateFinish;
    }
    
    public void setLateFinish(Date lateFinish) {
        this.lateFinish = lateFinish;
    }

    
    @Column(name="WORK_PERCENT_COMPLETE", length=22)
    public Integer getWorkPercentComplete() {
        return this.workPercentComplete;
    }
    
    public void setWorkPercentComplete(Integer workPercentComplete) {
        this.workPercentComplete = workPercentComplete;
    }

    
    @Column(name="CONSTRAINT_TYPE", length=10)
    public String getConstraintType() {
        return this.constraintType;
    }
    
    public void setConstraintType(String constraintType) {
        this.constraintType = constraintType;
    }

    
    @Column(name="CONSTRAINT_DATE", length=7)
    public Date getConstraintDate() {
        return this.constraintDate;
    }
    
    public void setConstraintDate(Date constraintDate) {
        this.constraintDate = constraintDate;
    }

    
    @Column(name="DEADLINE", length=7)
    public Date getDeadline() {
        return this.deadline;
    }
    
    public void setDeadline(Date deadline) {
        this.deadline = deadline;
    }

    
    @Column(name="BASELINE_ID", length=20)
    public Integer getBaselineId() {
        return this.baselineId;
    }
    
    public void setBaselineId(Integer baselineId) {
        this.baselineId = baselineId;
    }

    
    @Column(name="PLAN_VERSION_ID", length=20)
    public Integer getPlanVersionId() {
        return this.planVersionId;
    }
    
    public void setPlanVersionId(Integer planVersionId) {
        this.planVersionId = planVersionId;
    }

    
    @Column(name="LEGACY_FLAG", length=22)
    public Integer getLegacyFlag() {
        return this.legacyFlag;
    }
    
    public void setLegacyFlag(Integer legacyFlag) {
        this.legacyFlag = legacyFlag;
    }

    
    @Column(name="CALCULATION_TYPE_ID", length=20)
    public Integer getCalculationTypeId() {
        return this.calculationTypeId;
    }
    
    public void setCalculationTypeId(Integer calculationTypeId) {
        this.calculationTypeId = calculationTypeId;
    }

    
    @Column(name="UNALLOCATED_WORK_COMPLETE", length=20)
    public Integer getUnallocatedWorkComplete() {
        return this.unallocatedWorkComplete;
    }
    
    public void setUnallocatedWorkComplete(Integer unallocatedWorkComplete) {
        this.unallocatedWorkComplete = unallocatedWorkComplete;
    }

    
    @Column(name="UNALLOCATED_WORK_COMPLETE_UNIT", length=20)
    public Integer getUnallocatedWorkCompleteUnit() {
        return this.unallocatedWorkCompleteUnit;
    }
    
    public void setUnallocatedWorkCompleteUnit(Integer unallocatedWorkCompleteUnit) {
        this.unallocatedWorkCompleteUnit = unallocatedWorkCompleteUnit;
    }

    
    @Column(name="WORK_MS", length=20)
    public Integer getWorkMs() {
        return this.workMs;
    }
    
    public void setWorkMs(Integer workMs) {
        this.workMs = workMs;
    }

    
    @Column(name="WORK_COMPLETE_MS", length=20)
    public Integer getWorkCompleteMs() {
        return this.workCompleteMs;
    }
    
    public void setWorkCompleteMs(Integer workCompleteMs) {
        this.workCompleteMs = workCompleteMs;
    }

    public String toString() {
        return new ToStringBuilder(this)
            .append("comp_id", getComp_id())
            .toString();
    }

    public boolean equals(Object other) {
        if ( (this == other ) ) return true;
        if ( !(other instanceof PnTaskVersion) ) return false;
        PnTaskVersion castOther = (PnTaskVersion) other;
        return new EqualsBuilder()
            .append(this.getComp_id(), castOther.getComp_id())
            .isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder()
            .append(getComp_id())
            .toHashCode();
    }

}
