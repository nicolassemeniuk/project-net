<project name="PnetPlugin" default="default" basedir="..">
  <property name="project.lib" value="lib" />
  <property name="project.build" value="build" />
  <property name="project.docs" value="docs" />
  <property name="project.src" value="src" />
  <property name="project.classes" value="classes" />
  <property name="project.name" value="PnetPlugin"/>
  <property name="jdbc.lib.dir" value="${basedir}/../../../prm/Java/jars/jdbc"/>
  <property name="jdbc.file.name" value="ojdbc14.jar"/>
  <property name="jdbc.lib" value="${jdbc.lib.dir}/${jdbc.file.name}"/>
  <property name="project.jar.file" value="${project.build}/${project.name}" />
  <property name="binaries.dir" value="${basedir}/binaries"/>

  <!-- JavaDoc properties -->
  <property name="project.javadoc.jdk.url" value="http://java.sun.com/j2se/1.4.1/docs/api/" />
  <property name="project.javadoc.intellij.path" value="file://${idea.home}/doc/openapi/javadoc/" />

  <!--
  Follow properties must be setted if you want invoke this script manualy, not from IntelliJ:
  idea.home
  project.name
  -->

  <!-- Project classpath -->
  <path id="project.classpath">
    <fileset dir="${basedir}">
      <include name="${project.lib}/*.jar" />
    </fileset>
    <fileset dir="${idea.home}/lib">
      <include name="*.jar" />
    </fileset>
  </path>

  <!-- Default -->
  <target name="default" depends="check, help">
  </target>

  <!-- Help -->
  <target name="help">
    <echo>
      ${ant.version} (JDK ${ant.java.version})
      ${ant.file}:
        javadoc - Generate javadoc information for project
        build-bin - Build binary package
        deploy    - Deploy binary package to IntelliJ
        build-src - Build src package
    </echo>
  </target>

  <!-- Java Docs -->
  <target name="javadoc" depends="check">
    <mkdir dir="${project.docs}" />
    <delete quiet="true" includeemptydirs="true">
      <fileset dir="${project.docs}">
        <include name="**/**" />
        <include name="**/*.*" />
      </fileset>
    </delete>
    <javadoc
      destdir="${project.docs}"
      author="true"
      version="true"
      use="true"
      source="1.4"
      classpathref="project.classpath"
      sourcepath="${project.src}"
      >
      <package name="*" />
      <link offline="true" href="${project.javadoc.jdk.url}" packagelistloc="${basedir}/ant/api-files/jdk1.4.1" />
      <link href="${project.javadoc.intellij.path}" />
    </javadoc>
    <!-- Fix up for javadocs -->
    <replaceregexp flags="ig" match="href=\&quot;[^\&quot;]+http\:\/\/" replace="href=\&quot;http\:\/\/">
      <fileset dir="${project.docs}" includes="**/*.html" />
    </replaceregexp>
  </target>

  <!-- Build bin package -->
  <target name="build-bin" depends="check">
    <delete dir="${project.classes}" />
    <mkdir dir="${project.classes}" />
    <mkdir dir="${project.build}" />
    <javac destdir="${project.classes}" classpathref="project.classpath" debug="on" source="1.4" >
      <src path="${project.src}" />
      <include name="**/*.java" />
    </javac>
    <!-- Copy to bin all resources except the java sources -->
    <copy todir="${project.classes}" includeemptydirs="yes">
      <fileset dir="${project.src}">
        <exclude name="**/*.java" />
      </fileset>
    </copy>
    <jar jarfile="${project.jar.file}-bin.jar" basedir="${project.classes}" compress="true" />
  </target>
  <!-- Deploy bin package -->
  <target name="deploy" depends="build-bin">
      <copy todir="${idea.home}/plugins/pnetplugin/lib" file="${project.jar.file}-bin.jar" overwrite="true" />
      <copy todir="${idea.home}/plugins/pnetplugin/lib" file="${jdbc.lib}" overwrite="true"/>
  </target>

  <!-- Create a binary distribution -->
  <target name="create-binary-distro">
    <mkdir dir="${binaries.dir}"/>
    <zip zipfile="${binaries.dir}/PnetPlugin.zip">
        <zipfileset prefix="pnetplugin/lib" dir="${project.build}">
            <include name="${project.name}-bin.jar"/>
        </zipfileset>
        <zipfileset prefix="pnetplugin/lib" dir="${jdbc.lib.dir}">
            <include name="${jdbc.file.name}"/>
        </zipfileset>
    </zip>
  </target>

  <!-- Build src package -->
  <target name="build-src" depends="check, javadoc">
    <mkdir dir="${project.build}" />
    <zip zipfile="${project.jar.file}-src.zip" basedir="${basedir}"  compress="true">
      <include name="*.*" />
      <include name="${project.src}/**/*.*" />
      <include name="${project.src}/**/*" />
      <include name="${project.docs}/**/*.*" />
      <include name="${project.docs}/**/*" />
      <include name="ant/**/*.*" />
      <include name="ant/**/*" />
    </zip>
  </target>
  <target name="build-all" depends="build-bin, build-src" />

  <!--
  Check for external properties
  -->
  <target name="loadProperties">
    <condition property="project.external.config">
      <and>
        <available file="${idea.home}" type="dir" />
        <isset property="project.name" />
      </and>
    </condition>
  </target>
  <target name="check" depends="loadProperties" unless="project.external.config">
    <echo>
      External properties not set or have wrong values
      This ant build must be run with -Didea.home=.. -Dproject.name=..
      Where:
        idea.home    contains full path to IntelliJ idea home directory.
        project.name contains name of IntelliJ idea project. This name will be
                     used in output jar file name.
      Currently properties is:
      idea.home = ${idea.home}
      project.name = ${project.name}
    </echo>
    <fail message="Please set idea.home and project.name properties correctly."  />
  </target>
</project>
