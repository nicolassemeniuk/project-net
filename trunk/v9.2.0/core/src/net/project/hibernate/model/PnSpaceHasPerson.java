/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnSpaceHasPerson generated by hbm2java
 */
@Entity
@Table(name = "PN_SPACE_HAS_PERSON")
public class PnSpaceHasPerson implements Serializable {

	private PnSpaceHasPersonPK comp_id;

	private String relationshipPersonToSpace;

	private BigDecimal memberTypeId;

	private String relationshipSpaceToPerson;

	private String responsibilities;

	private String memberTitle;

	private String recordStatus;

	private String secureKey;

	private String projectName;

	private String lastVisit;

	private String projectDesc;

	private PnPerson pnPerson;

	private Set pnAssignments = new HashSet(0);

	public PnSpaceHasPerson() {
	}

	public PnSpaceHasPerson(PnSpaceHasPersonPK comp_id, String recordStatus) {
		this.comp_id = comp_id;
		this.recordStatus = recordStatus;
	}

	public PnSpaceHasPerson(net.project.hibernate.model.PnSpaceHasPersonPK comp_id, String relationshipPersonToSpace,
			BigDecimal memberTypeId, String relationshipSpaceToPerson, String responsibilities, String memberTitle,
			String recordStatus, net.project.hibernate.model.PnPerson pnPerson, Set pnAssignments) {
		this.comp_id = comp_id;
		this.relationshipPersonToSpace = relationshipPersonToSpace;
		this.memberTypeId = memberTypeId;
		this.relationshipSpaceToPerson = relationshipSpaceToPerson;
		this.responsibilities = responsibilities;
		this.memberTitle = memberTitle;
		this.recordStatus = recordStatus;
		this.pnPerson = pnPerson;
		this.pnAssignments = pnAssignments;
	}

	/** minimal constructor */
	public PnSpaceHasPerson(net.project.hibernate.model.PnSpaceHasPersonPK comp_id, String recordStatus,
			Set pnAssignments) {
		this.comp_id = comp_id;
		this.recordStatus = recordStatus;
		this.pnAssignments = pnAssignments;
	}

	public PnSpaceHasPerson(net.project.hibernate.model.PnSpaceHasPersonPK comp_id, String relationshipPersonToSpace,
			String recordStatus) {
		this.comp_id = comp_id;
		this.relationshipPersonToSpace = relationshipPersonToSpace;
		this.recordStatus = recordStatus;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "spaceId", column = @Column(name = "SPACE_ID", nullable = false, length = 20)),
			@AttributeOverride(name = "personId", column = @Column(name = "PERSON_ID", nullable = false, length = 20)) })
	public PnSpaceHasPersonPK getComp_id() {
		return this.comp_id;
	}

	public void setComp_id(PnSpaceHasPersonPK comp_id) {
		this.comp_id = comp_id;
	}

	@Column(name = "RELATIONSHIP_PERSON_TO_SPACE", length = 80)
	public String getRelationshipPersonToSpace() {
		return this.relationshipPersonToSpace;
	}

	public void setRelationshipPersonToSpace(String relationshipPersonToSpace) {
		this.relationshipPersonToSpace = relationshipPersonToSpace;
	}

	@Column(name = "MEMBER_TYPE_ID", length = 20)
	public BigDecimal getMemberTypeId() {
		return this.memberTypeId;
	}

	public void setMemberTypeId(BigDecimal memberTypeId) {
		this.memberTypeId = memberTypeId;
	}

	@Column(name = "RELATIONSHIP_SPACE_TO_PERSON", length = 80)
	public String getRelationshipSpaceToPerson() {
		return this.relationshipSpaceToPerson;
	}

	public void setRelationshipSpaceToPerson(String relationshipSpaceToPerson) {
		this.relationshipSpaceToPerson = relationshipSpaceToPerson;
	}

	@Column(name = "RESPONSIBILITIES", length = 500)
	public String getResponsibilities() {
		return this.responsibilities;
	}

	public void setResponsibilities(String responsibilities) {
		this.responsibilities = responsibilities;
	}

	@Column(name = "MEMBER_TITLE", length = 80)
	public String getMemberTitle() {
		return this.memberTitle;
	}

	public void setMemberTitle(String memberTitle) {
		this.memberTitle = memberTitle;
	}

	@Column(name = "RECORD_STATUS", nullable = false, length = 1)
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	@Column(name = "SECURE_KEY", length = 1024)
	public String getSecureKey() {
		return this.secureKey;
	}

	public void setSecureKey(String secureKey) {
		this.secureKey = secureKey;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnPerson.class)
	@JoinColumn(name = "PERSON_ID", insertable = false, updatable = false)
	public PnPerson getPnPerson() {
		return this.pnPerson;
	}

	public void setPnPerson(PnPerson pnPerson) {
		this.pnPerson = pnPerson;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnSpaceHasPerson", targetEntity = PnAssignment.class)
	@Transient
	public Set getPnAssignments() {
		return this.pnAssignments;
	}

	public void setPnAssignments(Set pnAssignments) {
		this.pnAssignments = pnAssignments;
	}

	/**
	 * @return the projectName
	 */
	@Transient
	public String getProjectName() {
		return projectName;
	}

	/**
	 * @param projectName the projectName to set
	 */
	public void setProjectName(String projectName) {
		this.projectName = projectName;
	}

	/**
	 * @return the lastVisit
	 */
	@Transient
	public String getLastVisit() {
		return lastVisit;
	}

	/**
	 * @param lastVisit the lastVisit to set
	 */
	public void setLastVisit(String lastVisit) {
		this.lastVisit = lastVisit;
	}

	/**
	 * @return the projectDesc
	 */
	@Transient
	public String getProjectDesc() {
		return projectDesc;
	}

	/**
	 * @param projectDesc the projectDesc to set
	 */
	public void setProjectDesc(String projectDesc) {
		this.projectDesc = projectDesc;
	}

	public String toString() {
		return new ToStringBuilder(this).append("comp_id", getComp_id()).toString();
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if (!(other instanceof PnSpaceHasPerson))
			return false;
		PnSpaceHasPerson castOther = (PnSpaceHasPerson) other;
		return new EqualsBuilder().append(this.getComp_id(), castOther.getComp_id()).isEquals();
	}

	public int hashCode() {
		return new HashCodeBuilder().append(getComp_id()).toHashCode();
	}

}
