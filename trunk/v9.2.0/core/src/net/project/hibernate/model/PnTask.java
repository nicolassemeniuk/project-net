/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnTask generated by hbm2java
 */
@Entity
@Table(name = "PN_TASK")
public class PnTask implements Serializable {

	private Integer taskId;

	private String taskName;

	private String taskDesc;

	private String taskType;

	private BigDecimal duration;

	private BigDecimal work;

	private Integer workUnits;

	private BigDecimal workComplete;

	private Date dateStart;

	private Integer workCompleteUnits;

	private Date dateFinish;

	private Date actualStart;

	private Date actualFinish;

	private Integer priority;

	private BigDecimal percentComplete;

	private Date dateCreated;

	private Date dateModified;

	private Integer modifiedBy;

	private Integer durationUnits;

	private Integer parentTaskId;

	private String recordStatus;

	private Integer criticalPath;

	private Integer seq;

	private Integer ignoreTimesForDates;

	private Integer isMilestone;

	private Date earlyStart;

	private Date earlyFinish;

	private Date lateStart;

	private Date lateFinish;

	private BigDecimal workPercentComplete;

	private Integer calculationTypeId;

	private BigDecimal unallocatedWorkComplete;

	private Integer unallocatedWorkCompleteUnit;

	private String constraintType;

	private Date constraintDate;

	private Date deadline;

	private BigDecimal workMs;

	private BigDecimal workCompleteMs;

	private BigDecimal unassignedWork;

	private Integer unassignedWorkUnits;

	private String wbs;

	private String wbsLevel;

	private PnObject pnObject;

	private Set pnPlanHasTasks = new HashSet(0);

	private Set pnPhaseHasTasks = new HashSet(0);

	private Set pnTaskHistories = new HashSet(0);

	private Set pnTaskBaselines = new HashSet(0);

	public PnTask() {
	}

	public PnTask(Integer taskId, String taskName, String recordStatus) {
		this.taskId = taskId;
		this.taskName = taskName;
		this.recordStatus = recordStatus;
	}

	public PnTask(Integer taskId, String taskName, String recordStatus, Set pnPlanHasTasks, Set pnPhaseHasTasks,
			Set pnTaskHistories, Set pnTaskBaselines) {
		this.taskId = taskId;
		this.taskName = taskName;
		this.recordStatus = recordStatus;
		this.pnPlanHasTasks = pnPlanHasTasks;
		this.pnPhaseHasTasks = pnPhaseHasTasks;
		this.pnTaskHistories = pnTaskHistories;
		this.pnTaskBaselines = pnTaskBaselines;
	}

	public PnTask(Integer taskId, String taskName, BigDecimal duration, Date dateStart, Date dateFinish,
			BigDecimal workPercentComplete) {
		this.taskId = taskId;
		this.taskName = taskName;
		this.duration = duration;
		this.dateStart = dateStart;
		this.dateFinish = dateFinish;
		this.workPercentComplete = workPercentComplete;
	}

	/*For View Details Page ResourceTab*/
	public PnTask(Integer taskId, String taskName, BigDecimal duration, Date dateStart, Date dateFinish,
			BigDecimal workPercentComplete, Date actualStart, Date actualFinish) {
		this.taskId = taskId;
		this.taskName = taskName;
		this.duration = duration;
		this.dateStart = dateStart;
		this.dateFinish = dateFinish;
		this.workPercentComplete = workPercentComplete;
		this.actualStart = actualStart;
		this.actualFinish = actualFinish;
	}

	/*For Blog View Page */
	public PnTask(Integer taskId, String taskName, String taskDesc, BigDecimal duration, Date dateStart,
			Date dateFinish, BigDecimal workPercentComplete) {
		this.taskId = taskId;
		this.taskName = taskName;
		this.taskDesc = taskDesc;
		this.duration = duration;
		this.dateStart = dateStart;
		this.dateFinish = dateFinish;
		this.workPercentComplete = workPercentComplete;
	}

	public PnTask(Integer taskId, String taskName, String taskDesc, String taskType, BigDecimal duration,
			BigDecimal work, Integer workUnits, BigDecimal workComplete, Date dateStart, Integer workCompleteUnits,
			Date dateFinish, Date actualStart, Date actualFinish, Integer priority, BigDecimal percentComplete,
			Date dateCreated, Date dateModified, Integer modifiedBy, Integer durationUnits, Integer parentTaskId,
			String recordStatus, Integer criticalPath, Integer seq, Integer ignoreTimesForDates, Integer isMilestone,
			Date earlyStart, Date earlyFinish, Date lateStart, Date lateFinish, BigDecimal workPercentComplete,
			Integer calculationTypeId, BigDecimal unallocatedWorkComplete, Integer unallocatedWorkCompleteUnit,
			String constraintType, Date constraintDate, Date deadline, BigDecimal workMs, BigDecimal workCompleteMs,
			BigDecimal unassignedWork, Integer unassignedWorkUnits, net.project.hibernate.model.PnObject pnObject,
			Set pnPlanHasTasks, Set pnPhaseHasTasks, Set pnTaskHistories, Set pnTaskBaselines, String wbs,
			String wbsLevel) {
		this.taskId = taskId;
		this.taskName = taskName;
		this.taskDesc = taskDesc;
		this.taskType = taskType;
		this.duration = duration;
		this.work = work;
		this.workUnits = workUnits;
		this.workComplete = workComplete;
		this.dateStart = dateStart;
		this.workCompleteUnits = workCompleteUnits;
		this.dateFinish = dateFinish;
		this.actualStart = actualStart;
		this.actualFinish = actualFinish;
		this.priority = priority;
		this.percentComplete = percentComplete;
		this.dateCreated = dateCreated;
		this.dateModified = dateModified;
		this.modifiedBy = modifiedBy;
		this.durationUnits = durationUnits;
		this.parentTaskId = parentTaskId;
		this.recordStatus = recordStatus;
		this.criticalPath = criticalPath;
		this.seq = seq;
		this.ignoreTimesForDates = ignoreTimesForDates;
		this.isMilestone = isMilestone;
		this.earlyStart = earlyStart;
		this.earlyFinish = earlyFinish;
		this.lateStart = lateStart;
		this.lateFinish = lateFinish;
		this.workPercentComplete = workPercentComplete;
		this.calculationTypeId = calculationTypeId;
		this.unallocatedWorkComplete = unallocatedWorkComplete;
		this.unallocatedWorkCompleteUnit = unallocatedWorkCompleteUnit;
		this.constraintType = constraintType;
		this.constraintDate = constraintDate;
		this.deadline = deadline;
		this.workMs = workMs;
		this.workCompleteMs = workCompleteMs;
		this.unassignedWork = unassignedWork;
		this.unassignedWorkUnits = unassignedWorkUnits;
		this.pnObject = pnObject;
		this.pnPlanHasTasks = pnPlanHasTasks;
		this.pnPhaseHasTasks = pnPhaseHasTasks;
		this.pnTaskHistories = pnTaskHistories;
		this.pnTaskBaselines = pnTaskBaselines;
		this.wbs = wbs;
		this.wbsLevel = wbsLevel;
	}

	@Id
	@Column(name = "TASK_ID", nullable = false)
	public Integer getTaskId() {
		return this.taskId;
	}

	public void setTaskId(Integer taskId) {
		this.taskId = taskId;
	}

	@Column(name = "TASK_NAME", nullable = false)
	public String getTaskName() {
		return this.taskName;
	}

	public void setTaskName(String taskName) {
		this.taskName = taskName;
	}

	@Column(name = "TASK_DESC", length = 4000)
	public String getTaskDesc() {
		return this.taskDesc;
	}

	public void setTaskDesc(String taskDesc) {
		this.taskDesc = taskDesc;
	}

	@Column(name = "TASK_TYPE", length = 80)
	public String getTaskType() {
		return this.taskType;
	}

	public void setTaskType(String taskType) {
		this.taskType = taskType;
	}

	@Column(name = "DURATION", length = 22)
	public BigDecimal getDuration() {
		return this.duration;
	}

	public void setDuration(BigDecimal duration) {
		this.duration = duration;
	}

	@Column(name = "WORK", length = 22)
	public BigDecimal getWork() {
		return this.work;
	}

	public void setWork(BigDecimal work) {
		this.work = work;
	}

	@Column(name = "WORK_UNITS", length = 20)
	public Integer getWorkUnits() {
		return this.workUnits;
	}

	public void setWorkUnits(Integer workUnits) {
		this.workUnits = workUnits;
	}

	@Column(name = "WORK_COMPLETE", length = 22)
	public BigDecimal getWorkComplete() {
		return this.workComplete;
	}

	public void setWorkComplete(BigDecimal workComplete) {
		this.workComplete = workComplete;
	}

	@Column(name = "DATE_START", length = 7)
	public Date getDateStart() {
		return this.dateStart;
	}

	public void setDateStart(Date dateStart) {
		this.dateStart = dateStart;
	}

	@Column(name = "WORK_COMPLETE_UNITS", length = 20)
	public Integer getWorkCompleteUnits() {
		return this.workCompleteUnits;
	}

	public void setWorkCompleteUnits(Integer workCompleteUnits) {
		this.workCompleteUnits = workCompleteUnits;
	}

	@Column(name = "DATE_FINISH", length = 7)
	public Date getDateFinish() {
		return this.dateFinish;
	}

	public void setDateFinish(Date dateFinish) {
		this.dateFinish = dateFinish;
	}

	@Column(name = "ACTUAL_START", length = 7)
	public Date getActualStart() {
		return this.actualStart;
	}

	public void setActualStart(Date actualStart) {
		this.actualStart = actualStart;
	}

	@Column(name = "ACTUAL_FINISH", length = 7)
	public Date getActualFinish() {
		return this.actualFinish;
	}

	public void setActualFinish(Date actualFinish) {
		this.actualFinish = actualFinish;
	}

	@Column(name = "PRIORITY", length = 6)
	public Integer getPriority() {
		return this.priority;
	}

	public void setPriority(Integer priority) {
		this.priority = priority;
	}

	@Column(name = "PERCENT_COMPLETE", length = 6)
	public BigDecimal getPercentComplete() {
		return this.percentComplete;
	}

	public void setPercentComplete(BigDecimal percentComplete) {
		this.percentComplete = percentComplete;
	}

	@Column(name = "DATE_CREATED", length = 7)
	public Date getDateCreated() {
		return this.dateCreated;
	}

	public void setDateCreated(Date dateCreated) {
		this.dateCreated = dateCreated;
	}

	@Column(name = "DATE_MODIFIED", length = 7)
	public Date getDateModified() {
		return this.dateModified;
	}

	public void setDateModified(Date dateModified) {
		this.dateModified = dateModified;
	}

	@Column(name = "MODIFIED_BY", length = 20)
	public Integer getModifiedBy() {
		return this.modifiedBy;
	}

	public void setModifiedBy(Integer modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	@Column(name = "DURATION_UNITS", length = 20)
	public Integer getDurationUnits() {
		return this.durationUnits;
	}

	public void setDurationUnits(Integer durationUnits) {
		this.durationUnits = durationUnits;
	}

	@Column(name = "PARENT_TASK_ID", length = 20)
	public Integer getParentTaskId() {
		return this.parentTaskId;
	}

	public void setParentTaskId(Integer parentTaskId) {
		this.parentTaskId = parentTaskId;
	}

	@Column(name = "RECORD_STATUS", nullable = false, length = 1)
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	@Column(name = "CRITICAL_PATH", length = 22)
	public Integer getCriticalPath() {
		return this.criticalPath;
	}

	public void setCriticalPath(Integer criticalPath) {
		this.criticalPath = criticalPath;
	}

	@Column(name = "SEQ", length = 22)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Column(name = "IGNORE_TIMES_FOR_DATES", length = 1)
	public Integer getIgnoreTimesForDates() {
		return this.ignoreTimesForDates;
	}

	public void setIgnoreTimesForDates(Integer ignoreTimesForDates) {
		this.ignoreTimesForDates = ignoreTimesForDates;
	}

	@Column(name = "IS_MILESTONE", length = 1)
	public Integer getIsMilestone() {
		return this.isMilestone;
	}

	public void setIsMilestone(Integer isMilestone) {
		this.isMilestone = isMilestone;
	}

	@Column(name = "EARLY_START", length = 7)
	public Date getEarlyStart() {
		return this.earlyStart;
	}

	public void setEarlyStart(Date earlyStart) {
		this.earlyStart = earlyStart;
	}

	@Column(name = "EARLY_FINISH", length = 7)
	public Date getEarlyFinish() {
		return this.earlyFinish;
	}

	public void setEarlyFinish(Date earlyFinish) {
		this.earlyFinish = earlyFinish;
	}

	@Column(name = "LATE_START", length = 7)
	public Date getLateStart() {
		return this.lateStart;
	}

	public void setLateStart(Date lateStart) {
		this.lateStart = lateStart;
	}

	@Column(name = "LATE_FINISH", length = 7)
	public Date getLateFinish() {
		return this.lateFinish;
	}

	public void setLateFinish(Date lateFinish) {
		this.lateFinish = lateFinish;
	}

	@Column(name = "WORK_PERCENT_COMPLETE", length = 22)
	public BigDecimal getWorkPercentComplete() {
		return this.workPercentComplete;
	}

	public void setWorkPercentComplete(BigDecimal workPercentComplete) {
		this.workPercentComplete = workPercentComplete;
	}

	@Column(name = "CALCULATION_TYPE_ID", length = 20)
	public Integer getCalculationTypeId() {
		return this.calculationTypeId;
	}

	public void setCalculationTypeId(Integer calculationTypeId) {
		this.calculationTypeId = calculationTypeId;
	}

	@Column(name = "UNALLOCATED_WORK_COMPLETE", length = 22)
	public BigDecimal getUnallocatedWorkComplete() {
		return this.unallocatedWorkComplete;
	}

	public void setUnallocatedWorkComplete(BigDecimal unallocatedWorkComplete) {
		this.unallocatedWorkComplete = unallocatedWorkComplete;
	}

	@Column(name = "UNALLOCATED_WORK_COMPLETE_UNIT", length = 20)
	public Integer getUnallocatedWorkCompleteUnit() {
		return this.unallocatedWorkCompleteUnit;
	}

	public void setUnallocatedWorkCompleteUnit(Integer unallocatedWorkCompleteUnit) {
		this.unallocatedWorkCompleteUnit = unallocatedWorkCompleteUnit;
	}

	@Column(name = "CONSTRAINT_TYPE", length = 10)
	public String getConstraintType() {
		return this.constraintType;
	}

	public void setConstraintType(String constraintType) {
		this.constraintType = constraintType;
	}

	@Column(name = "CONSTRAINT_DATE", length = 7)
	public Date getConstraintDate() {
		return this.constraintDate;
	}

	public void setConstraintDate(Date constraintDate) {
		this.constraintDate = constraintDate;
	}

	@Column(name = "DEADLINE", length = 7)
	public Date getDeadline() {
		return this.deadline;
	}

	public void setDeadline(Date deadline) {
		this.deadline = deadline;
	}

	@Column(name = "WORK_MS", length = 22)
	public BigDecimal getWorkMs() {
		return this.workMs;
	}

	public void setWorkMs(BigDecimal workMs) {
		this.workMs = workMs;
	}

	@Column(name = "WORK_COMPLETE_MS", length = 22)
	public BigDecimal getWorkCompleteMs() {
		return this.workCompleteMs;
	}

	public void setWorkCompleteMs(BigDecimal workCompleteMs) {
		this.workCompleteMs = workCompleteMs;
	}

	@Column(name = "UNASSIGNED_WORK", length = 22)
	public BigDecimal getUnassignedWork() {
		return this.unassignedWork;
	}

	public void setUnassignedWork(BigDecimal unassignedWork) {
		this.unassignedWork = unassignedWork;
	}

	@Column(name = "UNASSIGNED_WORK_UNITS", length = 22)
	public Integer getUnassignedWorkUnits() {
		return this.unassignedWorkUnits;
	}

	public void setUnassignedWorkUnits(Integer unassignedWorkUnits) {
		this.unassignedWorkUnits = unassignedWorkUnits;
	}

	@Column(name = "WBS")
	public String getWbs() {
		return this.wbs;
	}

	public void setWbs(String wbs) {
		this.wbs = wbs;
	}

	@Column(name = "WBS_LEVEL")
	public String getWbsLevel() {
		return this.wbsLevel;
	}

	public void setWbsLevel(String wbsLevel) {
		this.wbsLevel = wbsLevel;
	}

	//@OneToOne(fetch = FetchType.LAZY, targetEntity = PnObject.class)
	//@JoinColumn(name="TASK_ID")
	@Transient
	public PnObject getPnObject() {
		return this.pnObject;
	}

	public void setPnObject(PnObject pnObject) {
		this.pnObject = pnObject;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnTask", targetEntity = PnPlanHasTask.class)
	@Transient
	public Set getPnPlanHasTasks() {
		return this.pnPlanHasTasks;
	}

	public void setPnPlanHasTasks(Set pnPlanHasTasks) {
		this.pnPlanHasTasks = pnPlanHasTasks;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnTask", targetEntity = PnPhaseHasTask.class)
	@Transient
	public Set getPnPhaseHasTasks() {
		return this.pnPhaseHasTasks;
	}

	public void setPnPhaseHasTasks(Set pnPhaseHasTasks) {
		this.pnPhaseHasTasks = pnPhaseHasTasks;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnTask", targetEntity = PnTaskHistory.class)
	@Transient
	public Set getPnTaskHistories() {
		return this.pnTaskHistories;
	}

	public void setPnTaskHistories(Set pnTaskHistories) {
		this.pnTaskHistories = pnTaskHistories;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnTask", targetEntity = PnTaskBaseline.class)
	@Transient
	public Set getPnTaskBaselines() {
		return this.pnTaskBaselines;
	}

	public void setPnTaskBaselines(Set pnTaskBaselines) {
		this.pnTaskBaselines = pnTaskBaselines;
	}

	public String toString() {
		return new ToStringBuilder(this).append("taskId", getTaskId()).toString();
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int PRIME = 31;
		int result = 1;
		result = PRIME * result + ((taskId == null) ? 0 : taskId.hashCode());
		return result;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		final PnTask other = (PnTask) obj;
		if (taskId == null) {
			if (other.taskId != null)
				return false;
		} else if (!taskId.equals(other.taskId))
			return false;
		return true;
	}

}
