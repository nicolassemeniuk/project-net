/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnLicensePurchaser generated by hbm2java
 */
@Entity
@Table(name = "PN_LICENSE_PURCHASER")
public class PnLicensePurchaser implements java.io.Serializable {

	/** identifier field */
	private Integer licenseId;

	/** nullable persistent field */
	private PnLicense pnLicense;

	private PnPerson pnPerson;

	public PnLicensePurchaser() {
	}

	public PnLicensePurchaser(Integer licenseId) {
		this.licenseId = licenseId;
	}

	public PnLicensePurchaser(Integer licenseId, PnLicense pnLicense, PnPerson pnPerson) {
		this.licenseId = licenseId;
		this.pnLicense = pnLicense;
		this.pnPerson = pnPerson;
	}

	/** minimal constructor */
	public PnLicensePurchaser(Integer licenseId, net.project.hibernate.model.PnPerson pnPerson) {
		this.licenseId = licenseId;
		this.pnPerson = pnPerson;
	}

	@Id
	@Column(name = "LICENSE_ID", nullable = false)
	public Integer getLicenseId() {
		return this.licenseId;
	}

	public void setLicenseId(Integer licenseId) {
		this.licenseId = licenseId;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "pnLicensePurchaser", targetEntity = PnLicense.class)
	public PnLicense getPnLicense() {
		return this.pnLicense;
	}

	public void setPnLicense(PnLicense pnLicense) {
		this.pnLicense = pnLicense;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnPerson.class)
	@JoinColumn(name = "PERSON_ID")
	public PnPerson getPnPerson() {
		return this.pnPerson;
	}

	public void setPnPerson(PnPerson pnPerson) {
		this.pnPerson = pnPerson;
	}

	public String toString() {
		return new ToStringBuilder(this).append("licenseId", getLicenseId()).toString();
	}

}
