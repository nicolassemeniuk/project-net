/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnNotification generated by hbm2java
 */
@Entity
@Table(name = "PN_NOTIFICATION")
public class PnNotification implements Serializable {

	private Integer notificationId;

	private String deliveryAddress;

	private Date createdDate;

	private String createdById;

	private Date modifiedDate;

	private Integer modifiedById;

	private String recordStatus;

	private Date crc;

	private String deliveryFromAddress;

	private Integer customizationUserId;

	private Integer senderId;

	private Set pnNotificationLogs = new HashSet(0);

	private PnNotificationQueue pnNotificationQueue;

	private PnNotificationDeliveryType pnNotificationDeliveryType;

	private PnNotificationClob pnNotificationClob;

	public PnNotification() {
	}

	public PnNotification(Integer notificationId, String deliveryAddress, Integer modifiedById,
			net.project.hibernate.model.PnNotificationDeliveryType pnNotificationDeliveryType,
			net.project.hibernate.model.PnNotificationClob pnNotificationClob, Set pnNotificationLogs) {
		this.notificationId = notificationId;
		this.deliveryAddress = deliveryAddress;
		this.modifiedById = modifiedById;
		this.pnNotificationDeliveryType = pnNotificationDeliveryType;
		this.pnNotificationClob = pnNotificationClob;
		this.pnNotificationLogs = pnNotificationLogs;
	}

	public PnNotification(Integer notificationId, String deliveryAddress, Date createdDate, String createdById,
			Date modifiedDate, Integer modifiedById, String recordStatus, Date crc, String deliveryFromAddress,
			Integer customizationUserId, Integer senderId,
			net.project.hibernate.model.PnNotificationQueue pnNotificationQueue,
			net.project.hibernate.model.PnNotificationDeliveryType pnNotificationDeliveryType,
			net.project.hibernate.model.PnNotificationClob pnNotificationClob, Set pnNotificationLogs) {
		this.notificationId = notificationId;
		this.deliveryAddress = deliveryAddress;
		this.createdDate = createdDate;
		this.createdById = createdById;
		this.modifiedDate = modifiedDate;
		this.modifiedById = modifiedById;
		this.recordStatus = recordStatus;
		this.crc = crc;
		this.deliveryFromAddress = deliveryFromAddress;
		this.customizationUserId = customizationUserId;
		this.senderId = senderId;
		this.pnNotificationQueue = pnNotificationQueue;
		this.pnNotificationDeliveryType = pnNotificationDeliveryType;
		this.pnNotificationClob = pnNotificationClob;
		this.pnNotificationLogs = pnNotificationLogs;
	}

	@Id
	@Column(name = "NOTIFICATION_ID", nullable = false)
	public Integer getNotificationId() {
		return this.notificationId;
	}

	public void setNotificationId(Integer notificationId) {
		this.notificationId = notificationId;
	}

	@Column(name = "DELIVERY_ADDRESS", nullable = false, length = 240)
	public String getDeliveryAddress() {
		return this.deliveryAddress;
	}

	public void setDeliveryAddress(String deliveryAddress) {
		this.deliveryAddress = deliveryAddress;
	}

	@Column(name = "CREATED_DATE", length = 7)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "CREATED_BY_ID", length = 80)
	public String getCreatedById() {
		return this.createdById;
	}

	public void setCreatedById(String createdById) {
		this.createdById = createdById;
	}

	@Column(name = "MODIFIED_DATE", length = 7)
	public Date getModifiedDate() {
		return this.modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		this.modifiedDate = modifiedDate;
	}

	@Column(name = "MODIFIED_BY_ID", nullable = false, length = 20)
	public Integer getModifiedById() {
		return this.modifiedById;
	}

	public void setModifiedById(Integer modifiedById) {
		this.modifiedById = modifiedById;
	}

	@Column(name = "RECORD_STATUS", length = 1)
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	@Column(name = "CRC", length = 7)
	public Date getCrc() {
		return this.crc;
	}

	public void setCrc(Date crc) {
		this.crc = crc;
	}

	@Column(name = "DELIVERY_FROM_ADDRESS", length = 80)
	public String getDeliveryFromAddress() {
		return this.deliveryFromAddress;
	}

	public void setDeliveryFromAddress(String deliveryFromAddress) {
		this.deliveryFromAddress = deliveryFromAddress;
	}

	@Column(name = "CUSTOMIZATION_USER_ID", length = 20)
	public Integer getCustomizationUserId() {
		return this.customizationUserId;
	}

	public void setCustomizationUserId(Integer customizationUserId) {
		this.customizationUserId = customizationUserId;
	}

	@Column(name = "SENDER_ID", length = 20)
	public Integer getSenderId() {
		return this.senderId;
	}

	public void setSenderId(Integer senderId) {
		this.senderId = senderId;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnNotification", targetEntity = PnNotificationLog.class)
	@Transient
	public Set getPnNotificationLogs() {
		return this.pnNotificationLogs;
	}

	public void setPnNotificationLogs(Set pnNotificationLogs) {
		this.pnNotificationLogs = pnNotificationLogs;
	}

	//@OneToOne(fetch = FetchType.LAZY, targetEntity = PnNotificationQueue.class)
	@Transient
	public PnNotificationQueue getPnNotificationQueue() {
		return this.pnNotificationQueue;
	}

	public void setPnNotificationQueue(PnNotificationQueue pnNotificationQueue) {
		this.pnNotificationQueue = pnNotificationQueue;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnNotificationDeliveryType.class)
	@JoinColumn(name = "DELIVERY_TYPE_ID")
	public PnNotificationDeliveryType getPnNotificationDeliveryType() {
		return this.pnNotificationDeliveryType;
	}

	public void setPnNotificationDeliveryType(PnNotificationDeliveryType pnNotificationDeliveryType) {
		this.pnNotificationDeliveryType = pnNotificationDeliveryType;
	}

	//@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnNotificationClob.class)
	//@JoinColumn(name = "NOTIFICATION_CLOB_ID")
	@Transient
	public PnNotificationClob getPnNotificationClob() {
		return this.pnNotificationClob;
	}

	public void setPnNotificationClob(PnNotificationClob pnNotificationClob) {
		this.pnNotificationClob = pnNotificationClob;
	}

	public String toString() {
		return new ToStringBuilder(this).append("notificationId", getNotificationId()).toString();
	}

}
