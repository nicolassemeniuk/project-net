/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnPersonHasSkill generated by hbm2java
 */
@Entity
@Table(name = "PN_PERSON_HAS_SKILL")
public class PnPersonHasSkill implements Serializable {

	private PnPersonHasSkillPK comp_id;

	private Integer proficiencyCode;

	private Integer monthsExperience;

	private Date mostRecentUse;

	private PnSkill pnSkill;

	private Set pnPersonUsedSkills = new HashSet(0);

	private Set pnPersonSkillComments = new HashSet(0);

	public PnPersonHasSkill() {
	}

	public PnPersonHasSkill(PnPersonHasSkillPK comp_id, Integer proficiencyCode) {
		this.comp_id = comp_id;
		this.proficiencyCode = proficiencyCode;
	}

	public PnPersonHasSkill(net.project.hibernate.model.PnPersonHasSkillPK comp_id, Integer proficiencyCode,
			Set pnPersonUsedSkills, Set pnPersonSkillComments) {
		this.comp_id = comp_id;
		this.proficiencyCode = proficiencyCode;
		this.pnPersonUsedSkills = pnPersonUsedSkills;
		this.pnPersonSkillComments = pnPersonSkillComments;
	}

	public PnPersonHasSkill(PnPersonHasSkillPK comp_id, Integer proficiencyCode, Integer monthsExperience,
			Date mostRecentUse, PnSkill pnSkill, Set pnPersonUsedSkills, Set pnPersonSkillComments) {
		this.comp_id = comp_id;
		this.proficiencyCode = proficiencyCode;
		this.monthsExperience = monthsExperience;
		this.mostRecentUse = mostRecentUse;
		this.pnSkill = pnSkill;
		this.pnPersonUsedSkills = pnPersonUsedSkills;
		this.pnPersonSkillComments = pnPersonSkillComments;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "personId", column = @Column(name = "PERSON_ID", nullable = false, length = 20)),
			@AttributeOverride(name = "skillId", column = @Column(name = "SKILL_ID", nullable = false, length = 20)) })
	public PnPersonHasSkillPK getComp_id() {
		return this.comp_id;
	}

	public void setComp_id(PnPersonHasSkillPK comp_id) {
		this.comp_id = comp_id;
	}

	@Column(name = "PROFICIENCY_CODE", nullable = false, length = 20)
	public Integer getProficiencyCode() {
		return this.proficiencyCode;
	}

	public void setProficiencyCode(Integer proficiencyCode) {
		this.proficiencyCode = proficiencyCode;
	}

	@Column(name = "MONTHS_EXPERIENCE", length = 8)
	public Integer getMonthsExperience() {
		return this.monthsExperience;
	}

	public void setMonthsExperience(Integer monthsExperience) {
		this.monthsExperience = monthsExperience;
	}

	@Column(name = "MOST_RECENT_USE", length = 7)
	public Date getMostRecentUse() {
		return this.mostRecentUse;
	}

	public void setMostRecentUse(Date mostRecentUse) {
		this.mostRecentUse = mostRecentUse;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnSkill.class)
	@JoinColumn(name = "SKILL_ID", insertable = false, updatable = false)
	public PnSkill getPnSkill() {
		return this.pnSkill;
	}

	public void setPnSkill(PnSkill pnSkill) {
		this.pnSkill = pnSkill;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnPersonHasSkill", targetEntity = PnPersonUsedSkill.class)
	@Transient
	public Set getPnPersonUsedSkills() {
		return this.pnPersonUsedSkills;
	}

	public void setPnPersonUsedSkills(Set pnPersonUsedSkills) {
		this.pnPersonUsedSkills = pnPersonUsedSkills;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnPersonHasSkill", targetEntity = PnPersonSkillComment.class)
	@Transient
	public Set getPnPersonSkillComments() {
		return this.pnPersonSkillComments;
	}

	public void setPnPersonSkillComments(Set pnPersonSkillComments) {
		this.pnPersonSkillComments = pnPersonSkillComments;
	}

	public String toString() {
		return new ToStringBuilder(this).append("comp_id", getComp_id()).toString();
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if (!(other instanceof PnPersonHasSkill))
			return false;
		PnPersonHasSkill castOther = (PnPersonHasSkill) other;
		return new EqualsBuilder().append(this.getComp_id(), castOther.getComp_id()).isEquals();
	}

	public int hashCode() {
		return new HashCodeBuilder().append(getComp_id()).toHashCode();
	}

}
