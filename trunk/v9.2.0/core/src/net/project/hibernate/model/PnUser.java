/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnUser generated by hbm2java
 */
@Entity
@Table(name = "PN_USER")
public class PnUser implements Serializable {

	/**
	 * Foreign key to pn_person.person_id
	 * 		    
	 */
	private Integer userId;

	private String username;

	private String recordStatus;

	private int isLogin;

	private Integer lastBrandId;

	private Date lastLogin;

	private PnPerson pnPerson;

	private PnUserDomain pnUserDomain;

	private Set pnUserDomainMigrations = new HashSet(0);

	public PnUser() {
	}

	public PnUser(Integer userId, String username, String recordStatus, int isLogin) {
		this.userId = userId;
		this.username = username;
		this.recordStatus = recordStatus;
		this.isLogin = isLogin;
	}

	public PnUser(Integer userId, String username, String recordStatus, int isLogin,
			net.project.hibernate.model.PnUserDomain pnUserDomain, Set pnUserDomainMigrations) {
		this.userId = userId;
		this.username = username;
		this.recordStatus = recordStatus;
		this.isLogin = isLogin;
		this.pnUserDomain = pnUserDomain;
		this.pnUserDomainMigrations = pnUserDomainMigrations;
	}

	public PnUser(Integer userId, String username, String recordStatus, int isLogin, Integer lastBrandId,
			Date lastLogin, PnPerson pnPerson, PnUserDomain pnUserDomain, Set pnUserDomainMigrations) {
		this.userId = userId;
		this.username = username;
		this.recordStatus = recordStatus;
		this.isLogin = isLogin;
		this.lastBrandId = lastBrandId;
		this.lastLogin = lastLogin;
		this.pnPerson = pnPerson;
		this.pnUserDomain = pnUserDomain;
		this.pnUserDomainMigrations = pnUserDomainMigrations;
	}

	/**       
	 *      * 		       Foreign key to pn_person.person_id
	 * 		    
	 */
	@Id
	@Column(name = "USER_ID", nullable = false)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@Column(name = "USERNAME", nullable = false, length = 32)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "RECORD_STATUS", nullable = false, length = 1)
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	@Column(name = "IS_LOGIN", nullable = false, length = 1)
	public int getIsLogin() {
		return this.isLogin;
	}

	public void setIsLogin(int isLogin) {
		this.isLogin = isLogin;
	}

	@Column(name = "LAST_BRAND_ID", length = 20)
	public Integer getLastBrandId() {
		return this.lastBrandId;
	}

	public void setLastBrandId(Integer lastBrandId) {
		this.lastBrandId = lastBrandId;
	}

	@Column(name = "LAST_LOGIN", length = 7)
	public Date getLastLogin() {
		return this.lastLogin;
	}

	public void setLastLogin(Date lastLogin) {
		this.lastLogin = lastLogin;
	}

	//@OneToOne(fetch = FetchType.LAZY, targetEntity = PnPerson.class)
	//@JoinColumn(name = "USER_ID")
	@Transient
	public PnPerson getPnPerson() {
		return this.pnPerson;
	}

	public void setPnPerson(PnPerson pnPerson) {
		this.pnPerson = pnPerson;
	}

	//@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnUserDomain.class)
	//@JoinColumn(name = "DOMAIN_ID")
	@Transient
	public PnUserDomain getPnUserDomain() {
		return this.pnUserDomain;
	}

	public void setPnUserDomain(PnUserDomain pnUserDomain) {
		this.pnUserDomain = pnUserDomain;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnUser", targetEntity = PnUserDomainMigration.class)
	@Transient
	public Set getPnUserDomainMigrations() {
		return this.pnUserDomainMigrations;
	}

	public void setPnUserDomainMigrations(Set pnUserDomainMigrations) {
		this.pnUserDomainMigrations = pnUserDomainMigrations;
	}

	public String toString() {
		return new ToStringBuilder(this).append("userId", getUserId()).toString();
	}

}
