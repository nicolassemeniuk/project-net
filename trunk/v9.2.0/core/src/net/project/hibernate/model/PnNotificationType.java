/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnNotificationType generated by hbm2java
 */
@Entity
@Table(name = "PN_NOTIFICATION_TYPE")
public class PnNotificationType implements Serializable {

	private Integer notificationTypeId;

	private String name;

	private String description;

	private String defaultMessage;

	private Date createDate;

	private Integer createdById;

	private Date modifiedDate;

	private Integer modifiedById;

	private String recordStatus;

	private Date crc;

	private Set pnEventHasNotifications = new HashSet(0);

	private Set pnScheduledSubscriptions = new HashSet(0);

	private Set pnSubHasNotifyTypes = new HashSet(0);

	private PnNotificationObjectType pnNotificationObjectType;

	public PnNotificationType() {
	}

	public PnNotificationType(Integer notificationTypeId, String recordStatus,
			net.project.hibernate.model.PnNotificationObjectType pnNotificationObjectType, Set pnEventHasNotifications,
			Set pnScheduledSubscriptions, Set pnSubHasNotifyTypes) {
		this.notificationTypeId = notificationTypeId;
		this.recordStatus = recordStatus;
		this.pnNotificationObjectType = pnNotificationObjectType;
		this.pnEventHasNotifications = pnEventHasNotifications;
		this.pnScheduledSubscriptions = pnScheduledSubscriptions;
		this.pnSubHasNotifyTypes = pnSubHasNotifyTypes;
	}

	public PnNotificationType(Integer notificationTypeId, String name, String description, String defaultMessage,
			Date createDate, Integer createdById, Date modifiedDate, Integer modifiedById, String recordStatus,
			Date crc, net.project.hibernate.model.PnNotificationObjectType pnNotificationObjectType,
			Set pnEventHasNotifications, Set pnScheduledSubscriptions, Set pnSubHasNotifyTypes) {
		this.notificationTypeId = notificationTypeId;
		this.name = name;
		this.description = description;
		this.defaultMessage = defaultMessage;
		this.createDate = createDate;
		this.createdById = createdById;
		this.modifiedDate = modifiedDate;
		this.modifiedById = modifiedById;
		this.recordStatus = recordStatus;
		this.crc = crc;
		this.pnNotificationObjectType = pnNotificationObjectType;
		this.pnEventHasNotifications = pnEventHasNotifications;
		this.pnScheduledSubscriptions = pnScheduledSubscriptions;
		this.pnSubHasNotifyTypes = pnSubHasNotifyTypes;
	}

	@Id
	@Column(name = "NOTIFICATION_TYPE_ID", nullable = false)
	public Integer getNotificationTypeId() {
		return this.notificationTypeId;
	}

	public void setNotificationTypeId(Integer notificationTypeId) {
		this.notificationTypeId = notificationTypeId;
	}

	@Column(name = "NAME", length = 80)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "DESCRIPTION", length = 500)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "DEFAULT_MESSAGE", length = 4000)
	public String getDefaultMessage() {
		return this.defaultMessage;
	}

	public void setDefaultMessage(String defaultMessage) {
		this.defaultMessage = defaultMessage;
	}

	@Column(name = "CREATE_DATE", length = 7)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Column(name = "CREATED_BY_ID", length = 20)
	public Integer getCreatedById() {
		return this.createdById;
	}

	public void setCreatedById(Integer createdById) {
		this.createdById = createdById;
	}

	@Column(name = "MODIFIED_DATE", length = 7)
	public Date getModifiedDate() {
		return this.modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		this.modifiedDate = modifiedDate;
	}

	@Column(name = "MODIFIED_BY_ID", length = 20)
	public Integer getModifiedById() {
		return this.modifiedById;
	}

	public void setModifiedById(Integer modifiedById) {
		this.modifiedById = modifiedById;
	}

	@Column(name = "RECORD_STATUS", nullable = false, length = 1)
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	@Column(name = "CRC", length = 7)
	public Date getCrc() {
		return this.crc;
	}

	public void setCrc(Date crc) {
		this.crc = crc;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnNotificationType", targetEntity = PnEventHasNotification.class)
	@Transient
	public Set getPnEventHasNotifications() {
		return this.pnEventHasNotifications;
	}

	public void setPnEventHasNotifications(Set pnEventHasNotifications) {
		this.pnEventHasNotifications = pnEventHasNotifications;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnNotificationType", targetEntity = PnScheduledSubscription.class)
	@Transient
	public Set getPnScheduledSubscriptions() {
		return this.pnScheduledSubscriptions;
	}

	public void setPnScheduledSubscriptions(Set pnScheduledSubscriptions) {
		this.pnScheduledSubscriptions = pnScheduledSubscriptions;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnNotificationType", targetEntity = PnSubHasNotifyType.class)
	@Transient
	public Set getPnSubHasNotifyTypes() {
		return this.pnSubHasNotifyTypes;
	}

	public void setPnSubHasNotifyTypes(Set pnSubHasNotifyTypes) {
		this.pnSubHasNotifyTypes = pnSubHasNotifyTypes;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnNotificationObjectType.class)
	@JoinColumn(name = "OBJECT_TYPE")
	public PnNotificationObjectType getPnNotificationObjectType() {
		return this.pnNotificationObjectType;
	}

	public void setPnNotificationObjectType(PnNotificationObjectType pnNotificationObjectType) {
		this.pnNotificationObjectType = pnNotificationObjectType;
	}

	public String toString() {
		return new ToStringBuilder(this).append("notificationTypeId", getNotificationTypeId()).toString();
	}

}
