/**
 * 
 */
package net.project.hibernate.model;

import java.io.Serializable;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnObjectHasChargeCode generated by hbm2java
 */
@Entity
@Table(name = "PN_OBJECT_HAS_CHARGE_CODE")
public class PnObjectHasChargeCode implements Serializable {

	private PnObjectHasChargeCodePK comp_id;
	
	private Integer chargeCodeId;
	
	private PnObject pnObject;

	private PnChargeCode pnChargeCode;

	public PnObjectHasChargeCode() {
		super();
	}

	public PnObjectHasChargeCode(PnObjectHasChargeCodePK comp_id, Integer chargeCodeId) {
		this.comp_id = comp_id;
		this.chargeCodeId = chargeCodeId;
	}

	public PnObjectHasChargeCode(PnObjectHasChargeCodePK comp_id, PnChargeCode pnChargeCode) {
		this.comp_id = comp_id;
		this.pnChargeCode = pnChargeCode;
	}

	public PnObjectHasChargeCode(PnObjectHasChargeCodePK comp_id, PnObject pnObject) {
		this.comp_id = comp_id;
		this.pnObject = pnObject;
	}

	public PnObjectHasChargeCode(PnObjectHasChargeCodePK comp_id, PnObject pnObject, PnChargeCode pnChargeCode) {
		this.comp_id = comp_id;
		this.pnObject = pnObject;
		this.pnChargeCode = pnChargeCode;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "objectId", column = @Column(name = "OBJECT_ID", nullable = false, length = 20)),
			@AttributeOverride(name = "spaceId", column = @Column(name = "SPACE_ID", nullable = false, length = 20)) })
	public PnObjectHasChargeCodePK getComp_id() {
		return comp_id;
	}

	public void setComp_id(PnObjectHasChargeCodePK comp_id) {
		this.comp_id = comp_id;
	}


	@Column(name="CODE_ID", nullable = false, length=20)
	public Integer getChargeCodeId() {
		return chargeCodeId;
	}

	public void setChargeCodeId(Integer chargeCodeId) {
		this.chargeCodeId = chargeCodeId;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnObject.class)
	@JoinColumn(name = "CODE_ID", insertable = false, updatable = false)
	public PnChargeCode getPnChargeCode() {
		return pnChargeCode;
	}

	public void setPnChargeCode(PnChargeCode pnChargeCode) {
		this.pnChargeCode = pnChargeCode;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnObject.class)
	@JoinColumn(name = "OBJECT_ID", insertable = false, updatable = false)
	public PnObject getPnObject() {
		return pnObject;
	}

	public void setPnObject(PnObject pnObject) {
		this.pnObject = pnObject;
	}

	public String toString() {
		return new ToStringBuilder(this).append("comp_id", getComp_id()).toString();
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if (!(other instanceof PnObjectHasChargeCode))
			return false;
		PnObjectHasChargeCode castOther = (PnObjectHasChargeCode) other;
		return new EqualsBuilder().append(this.getComp_id(), castOther.getComp_id()).isEquals();
	}

	public int hashCode() {
		return new HashCodeBuilder().append(getComp_id()).toHashCode();
	}

}