/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
*/
package net.project.hibernate.model;

import java.io.Serializable;
import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnPersonSkillComment generated by hbm2java
 */
@Entity
@Table(name="PN_PERSON_SKILL_COMMENT"
)
public class PnPersonSkillComment implements Serializable {


     private PnPersonSkillCommentPK comp_id;
     private Date dateAdded;
     private String personComment;
     private String recordStatus;
     private PnPerson pnPersonByPersonId;
     private PnPersonHasSkill pnPersonHasSkill;
     private PnPerson pnPersonByAddedBy;

    public PnPersonSkillComment() {
    }

	
    public PnPersonSkillComment(PnPersonSkillCommentPK comp_id, String recordStatus) {
        this.comp_id = comp_id;
        this.recordStatus = recordStatus;
    }

    public PnPersonSkillComment(net.project.hibernate.model.PnPersonSkillCommentPK comp_id, String recordStatus, net.project.hibernate.model.PnPerson pnPersonByAddedBy) {
        this.comp_id = comp_id;
        this.recordStatus = recordStatus;
        this.pnPersonByAddedBy = pnPersonByAddedBy;
    }

    public PnPersonSkillComment(PnPersonSkillCommentPK comp_id, Date dateAdded, String personComment, String recordStatus, PnPerson pnPersonByPersonId, PnPersonHasSkill pnPersonHasSkill, PnPerson pnPersonByAddedBy) {
       this.comp_id = comp_id;
       this.dateAdded = dateAdded;
       this.personComment = personComment;
       this.recordStatus = recordStatus;
       this.pnPersonByPersonId = pnPersonByPersonId;
       this.pnPersonHasSkill = pnPersonHasSkill;
       this.pnPersonByAddedBy = pnPersonByAddedBy;
    }
   
     @EmbeddedId
    @AttributeOverrides( {
        @AttributeOverride(name="personId", column=@Column(name="PERSON_ID", nullable=false, length=20) ), 
        @AttributeOverride(name="skillId", column=@Column(name="SKILL_ID", nullable=false, length=20) ), 
        @AttributeOverride(name="commentId", column=@Column(name="COMMENT_ID", nullable=false, length=20) ) } )
    public PnPersonSkillCommentPK getComp_id() {
        return this.comp_id;
    }
    
    public void setComp_id(PnPersonSkillCommentPK comp_id) {
        this.comp_id = comp_id;
    }

    
    @Column(name="DATE_ADDED", length=7)
    public Date getDateAdded() {
        return this.dateAdded;
    }
    
    public void setDateAdded(Date dateAdded) {
        this.dateAdded = dateAdded;
    }

    
    @Column(name="PERSON_COMMENT", length=4000)
    public String getPersonComment() {
        return this.personComment;
    }
    
    public void setPersonComment(String personComment) {
        this.personComment = personComment;
    }

    
    @Column(name="RECORD_STATUS", nullable=false, length=1)
    public String getRecordStatus() {
        return this.recordStatus;
    }
    
    public void setRecordStatus(String recordStatus) {
        this.recordStatus = recordStatus;
    }

@ManyToOne(fetch=FetchType.LAZY, targetEntity=PnPerson.class)
    @JoinColumn(name="PERSON_ID", insertable=false, updatable=false)
    public PnPerson getPnPersonByPersonId() {
        return this.pnPersonByPersonId;
    }
    
    public void setPnPersonByPersonId(PnPerson pnPersonByPersonId) {
        this.pnPersonByPersonId = pnPersonByPersonId;
    }

@ManyToOne(fetch=FetchType.LAZY, targetEntity=PnPersonHasSkill.class)
    @JoinColumns( { 
        @JoinColumn(name="PERSON_ID", referencedColumnName="PERSON_ID", insertable=false, updatable=false), 
        @JoinColumn(name="SKILL_ID", referencedColumnName="SKILL_ID", insertable=false, updatable=false) } )
    public PnPersonHasSkill getPnPersonHasSkill() {
        return this.pnPersonHasSkill;
    }
    
    public void setPnPersonHasSkill(PnPersonHasSkill pnPersonHasSkill) {
        this.pnPersonHasSkill = pnPersonHasSkill;
    }

@ManyToOne(fetch=FetchType.LAZY, targetEntity=PnPerson.class)
    @JoinColumn(name="ADDED_BY")
    public PnPerson getPnPersonByAddedBy() {
        return this.pnPersonByAddedBy;
    }
    
    public void setPnPersonByAddedBy(PnPerson pnPersonByAddedBy) {
        this.pnPersonByAddedBy = pnPersonByAddedBy;
    }

    public String toString() {
        return new ToStringBuilder(this)
            .append("comp_id", getComp_id())
            .toString();
    }

    public boolean equals(Object other) {
        if ( (this == other ) ) return true;
        if ( !(other instanceof PnPersonSkillComment) ) return false;
        PnPersonSkillComment castOther = (PnPersonSkillComment) other;
        return new EqualsBuilder()
            .append(this.getComp_id(), castOther.getComp_id())
            .isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder()
            .append(getComp_id())
            .toHashCode();
    }

}
