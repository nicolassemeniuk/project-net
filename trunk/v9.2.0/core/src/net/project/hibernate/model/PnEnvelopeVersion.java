/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.sql.Clob;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * PnEnvelopeVersion generated by hbm2java
 */
@Entity
@Table(name = "PN_ENVELOPE_VERSION")
public class PnEnvelopeVersion implements java.io.Serializable {

	/** identifier field */
	private PnEnvelopeVersionPK comp_id;

	/** persistent field */
	private Integer priorityId;

	/** persistent field */
	private Integer createdById;

	/** persistent field */
	private Date createdDatetime;

	/** persistent field */
	private Date crc;

	/** persistent field */
	private String recordStatus;

	/** nullable persistent field */
	private Clob commentsClob;

	/** nullable persistent field */
	private PnWorkflowEnvelope pnWorkflowEnvelope;

	/** persistent field */
	private PnWorkflowTransition pnWorkflowTransition;

	/** persistent field */
	private PnWorkflowStep pnWorkflowStep;

	/** persistent field */
	private Set pnEnvelopeVersionHasObjects = new HashSet(0);

	private PnWorkflowStatus pnWorkflowStatus;

	public PnEnvelopeVersion() {
	}

	public PnEnvelopeVersion(PnEnvelopeVersionPK comp_id, Integer priorityId, Integer createdById,
			Date createdDatetime, Date crc, String recordStatus) {
		this.comp_id = comp_id;
		this.priorityId = priorityId;
		this.createdById = createdById;
		this.createdDatetime = createdDatetime;
		this.crc = crc;
		this.recordStatus = recordStatus;
	}

	public PnEnvelopeVersion(PnEnvelopeVersionPK comp_id, Integer priorityId, Integer createdById,
			Date createdDatetime, Date crc, String recordStatus, Clob commentsClob,
			PnWorkflowEnvelope pnWorkflowEnvelope, PnWorkflowTransition pnWorkflowTransition,
			PnWorkflowStep pnWorkflowStep, Set pnEnvelopeVersionHasObjects, PnWorkflowStatus pnWorkflowStatus) {
		this.comp_id = comp_id;
		this.priorityId = priorityId;
		this.createdById = createdById;
		this.createdDatetime = createdDatetime;
		this.crc = crc;
		this.recordStatus = recordStatus;
		this.commentsClob = commentsClob;
		this.pnWorkflowEnvelope = pnWorkflowEnvelope;
		this.pnWorkflowTransition = pnWorkflowTransition;
		this.pnWorkflowStep = pnWorkflowStep;
		this.pnEnvelopeVersionHasObjects = pnEnvelopeVersionHasObjects;
		this.pnWorkflowStatus = pnWorkflowStatus;
	}

	/** minimal constructor */
	public PnEnvelopeVersion(net.project.hibernate.model.PnEnvelopeVersionPK comp_id, Integer priorityId,
			Integer createdById, Date createdDatetime, Date crc, String recordStatus,
			net.project.hibernate.model.PnWorkflowTransition pnWorkflowTransition,
			net.project.hibernate.model.PnWorkflowStep pnWorkflowStep,
			net.project.hibernate.model.PnWorkflowStatus pnWorkflowStatus, Set pnEnvelopeVersionHasObjects) {
		this.comp_id = comp_id;
		this.priorityId = priorityId;
		this.createdById = createdById;
		this.createdDatetime = createdDatetime;
		this.crc = crc;
		this.recordStatus = recordStatus;
		this.pnWorkflowTransition = pnWorkflowTransition;
		this.pnWorkflowStep = pnWorkflowStep;
		this.pnWorkflowStatus = pnWorkflowStatus;
		this.pnEnvelopeVersionHasObjects = pnEnvelopeVersionHasObjects;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "versionId", column = @Column(name = "VERSION_ID", nullable = false, length = 20)),
			@AttributeOverride(name = "envelopeId", column = @Column(name = "ENVELOPE_ID", nullable = false, length = 20)) })
	public PnEnvelopeVersionPK getComp_id() {
		return this.comp_id;
	}

	public void setComp_id(PnEnvelopeVersionPK comp_id) {
		this.comp_id = comp_id;
	}

	@Column(name = "PRIORITY_ID", nullable = false, length = 20)
	public Integer getPriorityId() {
		return this.priorityId;
	}

	public void setPriorityId(Integer priorityId) {
		this.priorityId = priorityId;
	}

	@Column(name = "CREATED_BY_ID", nullable = false, length = 20)
	public Integer getCreatedById() {
		return this.createdById;
	}

	public void setCreatedById(Integer createdById) {
		this.createdById = createdById;
	}

	@Column(name = "CREATED_DATETIME", nullable = false, length = 7)
	public Date getCreatedDatetime() {
		return this.createdDatetime;
	}

	public void setCreatedDatetime(Date createdDatetime) {
		this.createdDatetime = createdDatetime;
	}

	@Column(name = "CRC", nullable = false, length = 7)
	public Date getCrc() {
		return this.crc;
	}

	public void setCrc(Date crc) {
		this.crc = crc;
	}

	@Column(name = "RECORD_STATUS", nullable = false, length = 1)
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	@Column(name = "COMMENTS_CLOB", length = 4000)
	public Clob getCommentsClob() {
		return this.commentsClob;
	}

	public void setCommentsClob(Clob commentsClob) {
		this.commentsClob = commentsClob;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnWorkflowEnvelope.class)
	@JoinColumn(name = "ENVELOPE_ID", insertable = false, updatable = false)
	public PnWorkflowEnvelope getPnWorkflowEnvelope() {
		return this.pnWorkflowEnvelope;
	}

	public void setPnWorkflowEnvelope(PnWorkflowEnvelope pnWorkflowEnvelope) {
		this.pnWorkflowEnvelope = pnWorkflowEnvelope;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnWorkflowTransition.class)
	@JoinColumns( {
			@JoinColumn(name = "TRANSITION_ID", referencedColumnName = "WORKFLOW_ID", insertable = false, updatable = false),
			@JoinColumn(name = "WORKFLOW_ID", referencedColumnName = "TRANSITION_ID", insertable = false, updatable = false) })
	public PnWorkflowTransition getPnWorkflowTransition() {
		return this.pnWorkflowTransition;
	}

	public void setPnWorkflowTransition(PnWorkflowTransition pnWorkflowTransition) {
		this.pnWorkflowTransition = pnWorkflowTransition;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnWorkflowStep.class)
	@JoinColumns( {
			@JoinColumn(name = "STEP_ID", referencedColumnName = "STEP_ID", insertable = false, updatable = false),
			@JoinColumn(name = "WORKFLOW_ID", referencedColumnName = "WORKFLOW_ID", insertable = false, updatable = false) })
	public PnWorkflowStep getPnWorkflowStep() {
		return this.pnWorkflowStep;
	}

	public void setPnWorkflowStep(PnWorkflowStep pnWorkflowStep) {
		this.pnWorkflowStep = pnWorkflowStep;
	}

	//@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnEnvelopeVersion", targetEntity = PnEnvelopeVersionHasObject.class)
	@Transient
	public Set getPnEnvelopeVersionHasObjects() {
		return this.pnEnvelopeVersionHasObjects;
	}

	public void setPnEnvelopeVersionHasObjects(Set pnEnvelopeVersionHasObjects) {
		this.pnEnvelopeVersionHasObjects = pnEnvelopeVersionHasObjects;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnWorkflowStatus.class)
	@JoinColumn(name = "STATUS_ID")
	public PnWorkflowStatus getPnWorkflowStatus() {
		return this.pnWorkflowStatus;
	}

	public void setPnWorkflowStatus(PnWorkflowStatus pnWorkflowStatus) {
		this.pnWorkflowStatus = pnWorkflowStatus;
	}

}
