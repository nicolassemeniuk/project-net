/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
 */
package net.project.hibernate.model;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnGroup generated by hbm2java
 */
@Entity
@Table(name = "PN_GROUP")
public class PnGroup implements java.io.Serializable {

	/** identifier field */
	private Integer groupId;

	/** persistent field */
	private String groupName;

	/** nullable persistent field */
	private String groupDesc;

	/** persistent field */
	private int isPrincipal;

	/** persistent field */
	private int isSystemGroup;

	/** persistent field */
	private String recordStatus;

	/** nullable persistent field */
	private PnObject pnObject;

	/** persistent field */
	private PnPerson pnPerson;

	/** persistent field */
	private Set pnSpaceHasGroups = new HashSet(0);

	/** persistent field */
	private Set pnGroupHasPersons = new HashSet(0);

	/** persistent field */
	private Set pnWorkflowStepHasGroups = new HashSet(0);

	/** persistent field */
	private Set pnDefaultObjectPermissions = new HashSet(0);

	/** persistent field */
	private Set pnObjectPermissions = new HashSet(0);

	/** persistent field */
	private Set pnPagePermissions = new HashSet(0);

	/** persistent field */
	private Set pnGroupHistories = new HashSet(0);

	/** persistent field */
	private Set pnModulePermissions = new HashSet(0);

	/** persistent field */
	private Set pnGroupHasGroupsByMemberGroupId = new HashSet(0);

	/** persistent field */
	private Set pnGroupHasGroupsByGroupId = new HashSet(0);

	private PnGroupType pnGroupType;

	public PnGroup() {
	}

	public PnGroup(Integer groupId, String groupName, int isPrincipal, int isSystemGroup, String recordStatus) {
		this.groupId = groupId;
		this.groupName = groupName;
		this.isPrincipal = isPrincipal;
		this.isSystemGroup = isSystemGroup;
		this.recordStatus = recordStatus;
	}

	public PnGroup(Integer groupId, String groupName, String groupDesc, int isPrincipal, int isSystemGroup,
			String recordStatus, PnObject pnObject, PnPerson pnPerson, Set pnSpaceHasGroups, Set pnGroupHasPersons,
			Set pnWorkflowStepHasGroups, Set pnDefaultObjectPermissions, Set pnObjectPermissions,
			Set pnPagePermissions, Set pnGroupHistories, Set pnModulePermissions, Set pnGroupHasGroupsByMemberGroupId,
			Set pnGroupHasGroupsByGroupId, PnGroupType pnGroupType) {
		this.groupId = groupId;
		this.groupName = groupName;
		this.groupDesc = groupDesc;
		this.isPrincipal = isPrincipal;
		this.isSystemGroup = isSystemGroup;
		this.recordStatus = recordStatus;
		this.pnObject = pnObject;
		this.pnPerson = pnPerson;
		this.pnSpaceHasGroups = pnSpaceHasGroups;
		this.pnGroupHasPersons = pnGroupHasPersons;
		this.pnWorkflowStepHasGroups = pnWorkflowStepHasGroups;
		this.pnDefaultObjectPermissions = pnDefaultObjectPermissions;
		this.pnObjectPermissions = pnObjectPermissions;
		this.pnPagePermissions = pnPagePermissions;
		this.pnGroupHistories = pnGroupHistories;
		this.pnModulePermissions = pnModulePermissions;
		this.pnGroupHasGroupsByMemberGroupId = pnGroupHasGroupsByMemberGroupId;
		this.pnGroupHasGroupsByGroupId = pnGroupHasGroupsByGroupId;
		this.pnGroupType = pnGroupType;
	}

	/** minimal constructor */
	public PnGroup(Integer groupId, String groupName, int isPrincipal, int isSystemGroup, String recordStatus,
			net.project.hibernate.model.PnPerson pnPerson, net.project.hibernate.model.PnGroupType pnGroupType,
			Set pnSpaceHasGroups, Set pnGroupHasPersons, Set pnWorkflowStepHasGroups, Set pnDefaultObjectPermissions,
			Set pnObjectPermissions, Set pnPagePermissions, Set pnGroupHistories, Set pnModulePermissions,
			Set pnGroupHasGroupsByMemberGroupId, Set pnGroupHasGroupsByGroupId) {
		this.groupId = groupId;
		this.groupName = groupName;
		this.isPrincipal = isPrincipal;
		this.isSystemGroup = isSystemGroup;
		this.recordStatus = recordStatus;
		this.pnPerson = pnPerson;
		this.pnGroupType = pnGroupType;
		this.pnSpaceHasGroups = pnSpaceHasGroups;
		this.pnGroupHasPersons = pnGroupHasPersons;
		this.pnWorkflowStepHasGroups = pnWorkflowStepHasGroups;
		this.pnDefaultObjectPermissions = pnDefaultObjectPermissions;
		this.pnObjectPermissions = pnObjectPermissions;
		this.pnPagePermissions = pnPagePermissions;
		this.pnGroupHistories = pnGroupHistories;
		this.pnModulePermissions = pnModulePermissions;
		this.pnGroupHasGroupsByMemberGroupId = pnGroupHasGroupsByMemberGroupId;
		this.pnGroupHasGroupsByGroupId = pnGroupHasGroupsByGroupId;
	}

	public PnGroup(Integer groupId, String groupName, String groupDesc, int isPrincipal, int isSystemGroup,
			String recordStatus, Integer groupTypeId) {
		this.groupId = groupId;
		this.groupName = groupName;
		this.groupDesc = groupDesc;
		this.isPrincipal = isPrincipal;
		this.isSystemGroup = isSystemGroup;
		this.recordStatus = recordStatus;
		this.pnGroupType = new PnGroupType(groupTypeId);
	}

	@Id
	@Column(name = "GROUP_ID", nullable = false)
	public Integer getGroupId() {
		return this.groupId;
	}

	public void setGroupId(Integer groupId) {
		this.groupId = groupId;
	}

	@Column(name = "GROUP_NAME", nullable = false, length = 80)
	public String getGroupName() {
		return this.groupName;
	}

	public void setGroupName(String groupName) {
		this.groupName = groupName;
	}

	@Column(name = "GROUP_DESC")
	public String getGroupDesc() {
		return this.groupDesc;
	}

	public void setGroupDesc(String groupDesc) {
		this.groupDesc = groupDesc;
	}

	@Column(name = "IS_PRINCIPAL", nullable = false, length = 1)
	public int getIsPrincipal() {
		return this.isPrincipal;
	}

	public void setIsPrincipal(int isPrincipal) {
		this.isPrincipal = isPrincipal;
	}

	@Column(name = "IS_SYSTEM_GROUP", nullable = false, length = 1)
	public int getIsSystemGroup() {
		return this.isSystemGroup;
	}

	public void setIsSystemGroup(int isSystemGroup) {
		this.isSystemGroup = isSystemGroup;
	}

	@Column(name = "RECORD_STATUS", nullable = false, length = 1)
	public String getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(String recordStatus) {
		this.recordStatus = recordStatus;
	}

	@OneToOne(fetch = FetchType.LAZY, targetEntity = PnObject.class)
	@JoinColumn(name = "GROUP_ID")
	public PnObject getPnObject() {
		return this.pnObject;
	}

	public void setPnObject(PnObject pnObject) {
		this.pnObject = pnObject;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnPerson.class)
	@JoinColumn(name = "PRINCIPAL_OWNER_ID")
	public PnPerson getPnPerson() {
		return this.pnPerson;
	}

	public void setPnPerson(PnPerson pnPerson) {
		this.pnPerson = pnPerson;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnGroup", targetEntity = PnSpaceHasGroup.class)
	public Set getPnSpaceHasGroups() {
		return this.pnSpaceHasGroups;
	}

	public void setPnSpaceHasGroups(Set pnSpaceHasGroups) {
		this.pnSpaceHasGroups = pnSpaceHasGroups;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnGroup", targetEntity = PnGroupHasPerson.class)
	public Set getPnGroupHasPersons() {
		return this.pnGroupHasPersons;
	}

	public void setPnGroupHasPersons(Set pnGroupHasPersons) {
		this.pnGroupHasPersons = pnGroupHasPersons;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnGroup", targetEntity = PnWorkflowStepHasGroup.class)
	public Set getPnWorkflowStepHasGroups() {
		return this.pnWorkflowStepHasGroups;
	}

	public void setPnWorkflowStepHasGroups(Set pnWorkflowStepHasGroups) {
		this.pnWorkflowStepHasGroups = pnWorkflowStepHasGroups;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnGroup", targetEntity = PnDefaultObjectPermission.class)
	public Set getPnDefaultObjectPermissions() {
		return this.pnDefaultObjectPermissions;
	}

	public void setPnDefaultObjectPermissions(Set pnDefaultObjectPermissions) {
		this.pnDefaultObjectPermissions = pnDefaultObjectPermissions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnGroup", targetEntity = PnObjectPermission.class)
	public Set getPnObjectPermissions() {
		return this.pnObjectPermissions;
	}

	public void setPnObjectPermissions(Set pnObjectPermissions) {
		this.pnObjectPermissions = pnObjectPermissions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnGroup", targetEntity = PnPagePermission.class)
	public Set getPnPagePermissions() {
		return this.pnPagePermissions;
	}

	public void setPnPagePermissions(Set pnPagePermissions) {
		this.pnPagePermissions = pnPagePermissions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnGroup", targetEntity = PnGroupHistory.class)
	public Set getPnGroupHistories() {
		return this.pnGroupHistories;
	}

	public void setPnGroupHistories(Set pnGroupHistories) {
		this.pnGroupHistories = pnGroupHistories;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnGroup", targetEntity = PnModulePermission.class)
	public Set getPnModulePermissions() {
		return this.pnModulePermissions;
	}

	public void setPnModulePermissions(Set pnModulePermissions) {
		this.pnModulePermissions = pnModulePermissions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnGroupByMemberGroupId", targetEntity = PnGroupHasGroup.class)
	public Set getPnGroupHasGroupsByMemberGroupId() {
		return this.pnGroupHasGroupsByMemberGroupId;
	}

	public void setPnGroupHasGroupsByMemberGroupId(Set pnGroupHasGroupsByMemberGroupId) {
		this.pnGroupHasGroupsByMemberGroupId = pnGroupHasGroupsByMemberGroupId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pnGroupByGroupId", targetEntity = PnGroupHasGroup.class)
	public Set getPnGroupHasGroupsByGroupId() {
		return this.pnGroupHasGroupsByGroupId;
	}

	public void setPnGroupHasGroupsByGroupId(Set pnGroupHasGroupsByGroupId) {
		this.pnGroupHasGroupsByGroupId = pnGroupHasGroupsByGroupId;
	}

	@ManyToOne(fetch = FetchType.LAZY, targetEntity = PnGroupType.class)
	@JoinColumn(name = "GROUP_TYPE_ID")
	public PnGroupType getPnGroupType() {
		return this.pnGroupType;
	}

	public void setPnGroupType(PnGroupType pnGroupType) {
		this.pnGroupType = pnGroupType;
	}

	public String toString() {
		return new ToStringBuilder(this).append("groupId", getGroupId()).toString();
	}

}
