/* 
 * Copyright 2000-2009 Project.net Inc.
 *
 * This file is part of Project.net.
 * Project.net is free software: you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
 * 
 * Project.net is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Project.net.
 * If not, see http://www.gnu.org/licenses/gpl-3.0.html
*/
package net.project.hibernate.model;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Embeddable;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * PnSpaceHasSpacePK generated by hbm2java
 */
@Embeddable
public class PnMethodologyModulesPK implements Serializable {
	
	private Integer methodologySpaceId;
	private Integer moduleId;

    public PnMethodologyModulesPK() {
    }

    public PnMethodologyModulesPK(Integer methodologySpaceId, Integer moduleId) {
       this.methodologySpaceId = methodologySpaceId;
       this.moduleId = moduleId;
    }
   

    /**
	 * @return the methodologySpaceId
	 */
    @Column(name="METHODOLOGY_ID", nullable=false, length=20)
	public Integer getMethodologySpaceId() {
		return methodologySpaceId;
	}

	/**
	 * @param methodologySpaceId the methodologySpaceId to set
	 */
	public void setMethodologySpaceId(Integer methodologySpaceId) {
		this.methodologySpaceId = methodologySpaceId;
	}

	/**
	 * @return the moduleId
	 */
    @Column(name="MODULE_ID", nullable=false, length=20)
	public Integer getModuleId() {
		return moduleId;
	}

	/**
	 * @param moduleId the moduleId to set
	 */
	public void setModuleId(Integer moduleId) {
		this.moduleId = moduleId;
	}

	public String toString() {
        return new ToStringBuilder(this)
            .append("methodologySpaceId", getMethodologySpaceId())
            .append("moduleId", getModuleId())
            .toString();
    }

    public boolean equals(Object other) {
        if ( (this == other ) ) return true;
        if ( !(other instanceof PnMethodologyModulesPK) ) return false;
        PnMethodologyModulesPK castOther = (PnMethodologyModulesPK) other;
        return new EqualsBuilder()
            .append(this.getMethodologySpaceId(), castOther.getMethodologySpaceId())
            .append(this.getModuleId(), castOther.getModuleId())
            .isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder()
            .append(getMethodologySpaceId())
            .append(getModuleId())
            .toHashCode();
    }

}
